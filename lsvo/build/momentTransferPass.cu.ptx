//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21554848
// Cuda compilation tools, release 8.0, V8.0.61
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_20
.address_size 64

	// .globl	_Z18momentTransferPassv
.global .align 4 .u32 curMoment;
.global .align 1 .b8 outputBuffer[1];
.global .align 1 .b8 intermediateBuffer[1];
.global .align 1 .b8 MomentBuffer[1];
.global .align 4 .u32 numFramesPerMoment;
.global .align 4 .u32 numTriangles;
.global .align 8 .b8 launchIndex[8];
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo9curMomentE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo18numFramesPerMomentE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12numTrianglesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11launchIndexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9curMomentE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename18numFramesPerMomentE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12numTrianglesE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11launchIndexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum9curMomentE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum18numFramesPerMomentE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12numTrianglesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11launchIndexE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic9curMomentE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic18numFramesPerMomentE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12numTrianglesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11launchIndexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation9curMomentE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation18numFramesPerMomentE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12numTrianglesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11launchIndexE[1];

.visible .entry _Z18momentTransferPassv(

)
{
	.reg .f32 	%f<9>;
	.reg .b32 	%r<10>;
	.reg .f64 	%fd<7>;
	.reg .b64 	%rd<15>;


	ldu.global.u32 	%r5, [launchIndex];
	cvt.u64.u32	%rd3, %r5;
	mov.u64 	%rd13, intermediateBuffer;
	cvta.global.u64 	%rd2, %rd13;
	mov.u32 	%r3, 1;
	mov.u32 	%r2, 16;
	mov.u64 	%rd12, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r3, %r2, %rd3, %rd12, %rd12, %rd12);
	// inline asm
	ld.v4.f32 	{%f1, %f2, %f3, %f4}, [%rd1];
	cvt.ftz.f64.f32	%fd1, %f1;
	cvt.ftz.f64.f32	%fd2, %f2;
	mul.f64 	%fd3, %fd2, 0d3FE2C8B439581062;
	fma.rn.f64 	%fd4, %fd1, 0d3FD3212D77318FC5, %fd3;
	cvt.ftz.f64.f32	%fd5, %f3;
	fma.rn.f64 	%fd6, %fd5, 0d3FBD2F1A9FBE76C9, %fd4;
	cvt.rn.ftz.f32.f64	%f8, %fd6;
	ld.global.u32 	%r6, [curMoment];
	ld.global.u32 	%r7, [numTriangles];
	ld.global.u32 	%r8, [launchIndex];
	mad.lo.s32 	%r9, %r7, %r6, %r8;
	cvt.u64.u32	%rd9, %r9;
	mov.u64 	%rd14, MomentBuffer;
	cvta.global.u64 	%rd8, %rd14;
	mov.u32 	%r4, 4;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r3, %r4, %rd9, %rd12, %rd12, %rd12);
	// inline asm
	st.f32 	[%rd7], %f8;
	ret;
}


