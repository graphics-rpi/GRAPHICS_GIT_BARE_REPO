//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21554848
// Cuda compilation tools, release 8.0, V8.0.61
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_20
.address_size 64

	// .globl	_Z19photonPassGeneratorv
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd
(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
;
.global .align 1 .b8 screenBuffer[1];
.global .align 1 .b8 randBuffer[1];
.global .align 1 .b8 dirLightBuffer[1];
.global .align 1 .b8 skyPhotonBuffer[1];
.global .align 1 .b8 areaLightPhotonBuffer[1];
.global .align 1 .b8 windowBuffer[1];
.global .align 1 .b8 areaLightBuffer[1];
.global .align 1 .b8 normalBuffer[1];
.global .align 8 .b8 topObject[4];
.global .align 8 .b8 topShadower[4];
.global .align 8 .b8 photonPayload[40];
.global .align 8 .b8 windowPayload[16];
.global .align 8 .b8 lightPayload[24];
.global .align 8 .b8 skyPayload[40];
.global .align 4 .u32 launchIndex;
.global .align 4 .b8 shadingNormal[12];
.global .align 4 .b8 geometricNormal[12];
.global .align 4 .b8 centroid[12];
.global .align 4 .u32 maxPhotonCount;
.global .align 4 .u32 maxDepth;
.global .align 8 .b8 sunAngles[8];
.global .align 4 .u32 shadowRayType;
.global .align 4 .u32 windowRayType;
.global .align 4 .u32 lightRayType;
.global .align 4 .u32 skyRayType;
.global .align 4 .u32 photonRayType;
.global .align 4 .f32 sceneEpsilon;
.global .align 4 .f32 sunBrightness;
.global .align 4 .b8 sunDirection[12];
.global .align 4 .u32 normalInversion;
.global .align 4 .u32 bounce;
.global .align 4 .b8 Kd[12];
.global .align 4 .b8 Ks[12];
.global .align 4 .b8 Td[12];
.global .align 4 .b8 Ts[12];
.global .align 4 .b8 currentRay[36];
.global .align 4 .f32 hitT;
.global .align 4 .u32 screen;
.global .align 4 .u32 screenWidth;
.global .align 4 .u32 screenHeight;
.global .align 4 .u32 skyType;
.global .align 4 .u32 centroidNumber;
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo9topObjectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11topShadowerE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13photonPayloadE[8] = {82, 97, 121, 0, 40, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13windowPayloadE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12lightPayloadE[8] = {82, 97, 121, 0, 24, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10skyPayloadE[8] = {82, 97, 121, 0, 40, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11launchIndexE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13shadingNormalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15geometricNormalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8centroidE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14maxPhotonCountE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8maxDepthE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9sunAnglesE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13shadowRayTypeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13windowRayTypeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12lightRayTypeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10skyRayTypeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13photonRayTypeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12sceneEpsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13sunBrightnessE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12sunDirectionE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15normalInversionE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6bounceE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2KdE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2KsE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2TdE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2TsE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10currentRayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4hitTE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6screenE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11screenWidthE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12screenHeightE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7skyTypeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14centroidNumberE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9topObjectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11topShadowerE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13photonPayloadE[14] = {80, 104, 111, 116, 111, 110, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13windowPayloadE[14] = {87, 105, 110, 100, 111, 119, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12lightPayloadE[17] = {65, 114, 101, 97, 76, 105, 103, 104, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10skyPayloadE[11] = {83, 107, 121, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11launchIndexE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13shadingNormalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15geometricNormalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8centroidE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14maxPhotonCountE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8maxDepthE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9sunAnglesE[7] = {102, 108, 111, 97, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13shadowRayTypeE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13windowRayTypeE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12lightRayTypeE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10skyRayTypeE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13photonRayTypeE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12sceneEpsilonE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13sunBrightnessE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12sunDirectionE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15normalInversionE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename6bounceE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2KdE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2KsE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2TdE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2TsE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10currentRayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename4hitTE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename6screenE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11screenWidthE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12screenHeightE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename7skyTypeE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14centroidNumberE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum9topObjectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11topShadowerE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13photonPayloadE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13windowPayloadE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12lightPayloadE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10skyPayloadE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11launchIndexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13shadingNormalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15geometricNormalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8centroidE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14maxPhotonCountE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8maxDepthE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9sunAnglesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13shadowRayTypeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13windowRayTypeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12lightRayTypeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10skyRayTypeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13photonRayTypeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12sceneEpsilonE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13sunBrightnessE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12sunDirectionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15normalInversionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6bounceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2KdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2KsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2TdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2TsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10currentRayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4hitTE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6screenE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11screenWidthE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12screenHeightE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7skyTypeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14centroidNumberE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic9topObjectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11topShadowerE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13photonPayloadE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic13windowPayloadE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12lightPayloadE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10skyPayloadE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic11launchIndexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic13shadingNormalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic15geometricNormalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic8centroidE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 99, 101, 110, 116, 114, 111, 105, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14maxPhotonCountE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8maxDepthE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9sunAnglesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13shadowRayTypeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13windowRayTypeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12lightRayTypeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10skyRayTypeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13photonRayTypeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12sceneEpsilonE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13sunBrightnessE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12sunDirectionE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15normalInversionE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic6bounceE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2KdE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2KsE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2TdE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2TsE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10currentRayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic4hitTE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6screenE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11screenWidthE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12screenHeightE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7skyTypeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14centroidNumberE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 99, 101, 110, 116, 114, 111, 105, 100, 78, 117, 109, 98, 101, 114, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation9topObjectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11topShadowerE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13photonPayloadE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13windowPayloadE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12lightPayloadE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10skyPayloadE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11launchIndexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13shadingNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15geometricNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8centroidE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14maxPhotonCountE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8maxDepthE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9sunAnglesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13shadowRayTypeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13windowRayTypeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12lightRayTypeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10skyRayTypeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13photonRayTypeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12sceneEpsilonE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13sunBrightnessE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12sunDirectionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15normalInversionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6bounceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2KdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2KsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2TdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2TsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10currentRayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4hitTE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6screenE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11screenWidthE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12screenHeightE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7skyTypeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14centroidNumberE[1];
.const .align 8 .b8 __cudart_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.const .align 8 .b8 __cudart_sin_cos_coeffs[128] = {186, 94, 120, 249, 101, 219, 229, 61, 70, 210, 176, 44, 241, 229, 90, 190, 146, 227, 172, 105, 227, 29, 199, 62, 161, 98, 219, 25, 160, 1, 42, 191, 24, 8, 17, 17, 17, 17, 129, 63, 84, 85, 85, 85, 85, 85, 197, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 129, 253, 32, 131, 255, 168, 189, 40, 133, 239, 193, 167, 238, 33, 62, 217, 230, 6, 142, 79, 126, 146, 190, 233, 188, 221, 25, 160, 1, 250, 62, 71, 93, 193, 22, 108, 193, 86, 191, 81, 85, 85, 85, 85, 85, 165, 63, 0, 0, 0, 0, 0, 0, 224, 191, 0, 0, 0, 0, 0, 0, 240, 63};

.visible .entry _Z19photonPassGeneratorv(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<8>;


	ldu.global.u32 	%r3, [launchIndex];
	cvt.u64.u32	%rd3, %r3;
	mov.u64 	%rd7, randBuffer;
	cvta.global.u64 	%rd2, %rd7;
	mov.u32 	%r1, 1;
	mov.u32 	%r2, 8;
	mov.u64 	%rd6, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r1, %r2, %rd3, %rd6, %rd6, %rd6);
	// inline asm
	ret;
}

	// .globl	_Z22areaLightPassGeneratorv
.visible .entry _Z22areaLightPassGeneratorv(

)
{
	.local .align 8 .b8 	__local_depot1[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .f32 	%f<12>;
	.reg .b32 	%r<27>;
	.reg .b64 	%rd<25>;


	mov.u64 	%rd24, __local_depot1;
	cvta.local.u64 	%SP, %rd24;
	ldu.global.u32 	%r8, [maxPhotonCount];
	setp.eq.s32	%p1, %r8, 0;
	mov.u32 	%r7, 0;
	ldu.global.u32 	%r26, [launchIndex];
	@%p1 bra 	BB1_3;

	mov.u32 	%r25, %r7;

BB1_2:
	mov.u32 	%r3, %r25;
	add.s32 	%r11, %r26, %r3;
	cvt.u64.u32	%rd3, %r11;
	mov.u64 	%rd7, areaLightPhotonBuffer;
	cvta.global.u64 	%rd2, %rd7;
	mov.u32 	%r9, 1;
	mov.u32 	%r10, 64;
	mov.u64 	%rd6, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r9, %r10, %rd3, %rd6, %rd6, %rd6);
	// inline asm
	st.u32 	[%rd1+56], %r7;
	st.u32 	[%rd1+52], %r7;
	st.u32 	[%rd1+48], %r7;
	ld.global.u32 	%r26, [launchIndex];
	ld.global.u32 	%r13, [maxPhotonCount];
	add.s32 	%r5, %r3, 1;
	setp.lt.u32	%p2, %r5, %r13;
	mov.u32 	%r25, %r5;
	@%p2 bra 	BB1_2;

BB1_3:
	cvt.u64.u32	%rd10, %r26;
	mov.u64 	%rd21, areaLightBuffer;
	cvta.global.u64 	%rd9, %rd21;
	mov.u32 	%r16, 1;
	mov.u32 	%r15, 48;
	mov.u64 	%rd19, 0;
	// inline asm
	call (%rd8), _rt_buffer_get_64, (%rd9, %r16, %r15, %rd10, %rd19, %rd19, %rd19);
	// inline asm
	ld.global.u32 	%r19, [lightRayType];
	ld.f32 	%f7, [%rd8+28];
	mul.ftz.f32 	%f8, %f7, 0f40400000;
	ld.f32 	%f3, [%rd8+8];
	ld.f32 	%f2, [%rd8+4];
	ld.f32 	%f1, [%rd8];
	ld.f32 	%f6, [%rd8+24];
	ld.f32 	%f5, [%rd8+20];
	ld.f32 	%f4, [%rd8+16];
	ld.global.u32 	%rd16, [launchIndex];
	mov.u64 	%rd22, randBuffer;
	cvta.global.u64 	%rd15, %rd22;
	mov.u32 	%r17, 8;
	// inline asm
	call (%rd14), _rt_buffer_get_64, (%rd15, %r16, %r17, %rd16, %rd19, %rd19, %rd19);
	// inline asm
	ld.v2.u32 	{%r21, %r22}, [%rd14];
	add.u64 	%rd20, %SP, 0;
	cvta.to.local.u64 	%rd23, %rd20;
	st.local.v2.u32 	[%rd23+16], {%r21, %r22};
	ld.f32 	%f9, [%rd8+40];
	ld.f32 	%f10, [%rd8+36];
	ld.f32 	%f11, [%rd8+32];
	st.local.v2.f32 	[%rd23], {%f11, %f10};
	st.local.f32 	[%rd23+8], %f9;
	ld.global.u32 	%r18, [topObject];
	mov.u32 	%r20, 24;
	// inline asm
	call _rt_trace_64, (%r18, %f1, %f2, %f3, %f4, %f5, %f6, %r19, %f7, %f8, %rd20, %r20);
	// inline asm
	ret;
}

	// .globl	_Z23areaLightPassClosestHitv
.visible .entry _Z23areaLightPassClosestHitv(

)
{
	.local .align 8 .b8 	__local_depot2[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .f32 	%f<85>;
	.reg .b32 	%r<17>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<9>;


	mov.u64 	%rd8, __local_depot2;
	cvta.local.u64 	%SP, %rd8;
	ld.global.f32 	%f9, [currentRay+20];
	ld.global.f32 	%f10, [currentRay+16];
	mov.u64 	%rd2, currentRay;
	ld.global.f32 	%f11, [currentRay+12];
	ldu.global.f32 	%f12, [hitT];
	ldu.global.f32 	%f13, [currentRay];
	fma.rn.ftz.f32 	%f1, %f11, %f12, %f13;
	add.s64 	%rd3, %rd2, 4;
	ldu.global.f32 	%f14, [%rd3];
	fma.rn.ftz.f32 	%f2, %f10, %f12, %f14;
	add.s64 	%rd4, %rd2, 8;
	ldu.global.f32 	%f15, [%rd4];
	fma.rn.ftz.f32 	%f3, %f9, %f12, %f15;
	mul.ftz.f32 	%f16, %f10, 0f00000000;
	mul.ftz.f32 	%f17, %f9, 0f00000000;
	sub.ftz.f32 	%f18, %f16, %f17;
	mul.ftz.f32 	%f19, %f11, 0f00000000;
	sub.ftz.f32 	%f20, %f9, %f19;
	sub.ftz.f32 	%f21, %f19, %f10;
	mul.ftz.f32 	%f22, %f20, %f20;
	fma.rn.ftz.f32 	%f23, %f18, %f18, %f22;
	fma.rn.ftz.f32 	%f24, %f21, %f21, %f23;
	sqrt.approx.ftz.f32 	%f25, %f24;
	cvt.ftz.f64.f32	%fd1, %f25;
	setp.lt.f64	%p1, %fd1, 0d3EB0C6F7A0B5ED8D;
	sub.ftz.f32 	%f26, %f16, %f9;
	sub.ftz.f32 	%f27, %f17, %f19;
	sub.ftz.f32 	%f28, %f11, %f16;
	selp.f32	%f29, %f26, %f18, %p1;
	selp.f32	%f30, %f27, %f20, %p1;
	selp.f32	%f31, %f28, %f21, %p1;
	mul.ftz.f32 	%f32, %f30, %f30;
	fma.rn.ftz.f32 	%f33, %f29, %f29, %f32;
	fma.rn.ftz.f32 	%f34, %f31, %f31, %f33;
	rsqrt.approx.ftz.f32 	%f35, %f34;
	mul.ftz.f32 	%f36, %f35, %f29;
	mul.ftz.f32 	%f37, %f35, %f30;
	mul.ftz.f32 	%f38, %f35, %f31;
	mul.ftz.f32 	%f39, %f10, %f38;
	mul.ftz.f32 	%f40, %f9, %f37;
	sub.ftz.f32 	%f41, %f39, %f40;
	mul.ftz.f32 	%f42, %f9, %f36;
	mul.ftz.f32 	%f43, %f11, %f38;
	sub.ftz.f32 	%f44, %f42, %f43;
	mul.ftz.f32 	%f45, %f11, %f37;
	mul.ftz.f32 	%f46, %f10, %f36;
	sub.ftz.f32 	%f47, %f45, %f46;
	mul.ftz.f32 	%f48, %f44, %f44;
	fma.rn.ftz.f32 	%f49, %f41, %f41, %f48;
	fma.rn.ftz.f32 	%f50, %f47, %f47, %f49;
	rsqrt.approx.ftz.f32 	%f51, %f50;
	mul.ftz.f32 	%f52, %f51, %f41;
	mul.ftz.f32 	%f53, %f51, %f44;
	mul.ftz.f32 	%f54, %f51, %f47;
	mov.u64 	%rd5, lightPayload;
	add.s64 	%rd6, %rd5, 16;
	ldu.global.v2.u32 	{%r4, %r5}, [%rd6];
	mad.lo.s32 	%r7, %r5, 1664525, 1013904223;
	mad.lo.s32 	%r9, %r4, 389569705, 1196435762;
	and.b32  	%r10, %r9, 16777215;
	cvt.rn.f32.u32	%f55, %r10;
	mov.f32 	%f56, 0f4B800000;
	div.approx.ftz.f32 	%f57, %f55, %f56;
	st.global.v2.u32 	[lightPayload+16], {%r9, %r7};
	and.b32  	%r11, %r7, 16777215;
	cvt.rn.f32.u32	%f58, %r11;
	div.approx.ftz.f32 	%f59, %f58, %f56;
	sqrt.approx.ftz.f32 	%f60, %f57;
	cvt.ftz.f64.f32	%fd2, %f59;
	mul.f64 	%fd3, %fd2, 0d401921FB54442D18;
	cvt.rn.ftz.f32.f64	%f61, %fd3;
	cos.approx.ftz.f32 	%f62, %f61;
	mul.ftz.f32 	%f63, %f60, %f62;
	sin.approx.ftz.f32 	%f64, %f61;
	mul.ftz.f32 	%f65, %f60, %f64;
	mul.ftz.f32 	%f66, %f52, %f65;
	mul.ftz.f32 	%f67, %f53, %f65;
	mul.ftz.f32 	%f68, %f54, %f65;
	fma.rn.ftz.f32 	%f69, %f36, %f63, %f66;
	fma.rn.ftz.f32 	%f70, %f37, %f63, %f67;
	fma.rn.ftz.f32 	%f71, %f38, %f63, %f68;
	mov.f32 	%f72, 0f3F800000;
	sub.ftz.f32 	%f73, %f72, %f57;
	sqrt.approx.ftz.f32 	%f74, %f73;
	ldu.global.u32 	%r12, [normalInversion];
	cvt.rn.f32.s32	%f75, %r12;
	mul.ftz.f32 	%f76, %f74, %f75;
	fma.rn.ftz.f32 	%f77, %f11, %f76, %f69;
	fma.rn.ftz.f32 	%f78, %f10, %f76, %f70;
	fma.rn.ftz.f32 	%f79, %f9, %f76, %f71;
	ld.global.u32 	%r13, [lightPayload+16];
	ld.global.f32 	%f80, [lightPayload+8];
	ld.global.v2.f32 	{%f81, %f82}, [lightPayload];
	add.u64 	%rd1, %SP, 0;
	cvta.to.local.u64 	%rd7, %rd1;
	st.local.v2.u32 	[%rd7+16], {%r13, %r7};
	mov.u32 	%r14, 0;
	st.local.u32 	[%rd7+28], %r14;
	mov.u32 	%r15, 1;
	st.local.u32 	[%rd7+32], %r15;
	st.local.v2.f32 	[%rd7], {%f81, %f82};
	st.local.f32 	[%rd7+8], %f80;
	ldu.global.u32 	%r16, [launchIndex];
	st.local.u32 	[%rd7+24], %r16;
	neg.ftz.f32 	%f4, %f77;
	neg.ftz.f32 	%f5, %f78;
	neg.ftz.f32 	%f6, %f79;
	ldu.global.u32 	%r2, [photonRayType];
	ldu.global.f32 	%f7, [sceneEpsilon];
	ldu.global.u32 	%r1, [topObject];
	mov.f32 	%f8, 0f6C4ECB8F;
	mov.u32 	%r3, 40;
	// inline asm
	call _rt_trace_64, (%r1, %f1, %f2, %f3, %f4, %f5, %f6, %r2, %f7, %f8, %rd1, %r3);
	// inline asm
	ret;
}

	// .globl	_Z19windowPassGeneratorv
.visible .entry _Z19windowPassGeneratorv(

)
{
	.local .align 8 .b8 	__local_depot3[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<28>;
	.reg .b64 	%rd<25>;


	mov.u64 	%rd24, __local_depot3;
	cvta.local.u64 	%SP, %rd24;
	ldu.global.u32 	%r8, [maxPhotonCount];
	setp.eq.s32	%p1, %r8, 0;
	mov.u32 	%r7, 0;
	ldu.global.u32 	%r27, [launchIndex];
	@%p1 bra 	BB3_3;

	mov.u32 	%r26, %r7;

BB3_2:
	mov.u32 	%r3, %r26;
	add.s32 	%r11, %r27, %r3;
	cvt.u64.u32	%rd3, %r11;
	mov.u64 	%rd7, skyPhotonBuffer;
	cvta.global.u64 	%rd2, %rd7;
	mov.u32 	%r9, 1;
	mov.u32 	%r10, 64;
	mov.u64 	%rd6, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r9, %r10, %rd3, %rd6, %rd6, %rd6);
	// inline asm
	st.u32 	[%rd1+56], %r7;
	st.u32 	[%rd1+52], %r7;
	st.u32 	[%rd1+48], %r7;
	ld.global.u32 	%r27, [launchIndex];
	ld.global.u32 	%r13, [maxPhotonCount];
	add.s32 	%r5, %r3, 1;
	setp.lt.u32	%p2, %r5, %r13;
	mov.u32 	%r26, %r5;
	@%p2 bra 	BB3_2;

BB3_3:
	add.u64 	%rd20, %SP, 0;
	cvta.to.local.u64 	%rd21, %rd20;
	cvt.u64.u32	%rd10, %r27;
	mov.u64 	%rd22, windowBuffer;
	cvta.global.u64 	%rd9, %rd22;
	mov.u32 	%r16, 1;
	mov.u32 	%r15, 40;
	mov.u64 	%rd19, 0;
	// inline asm
	call (%rd8), _rt_buffer_get_64, (%rd9, %r16, %r15, %rd10, %rd19, %rd19, %rd19);
	// inline asm
	ld.global.u32 	%r19, [windowRayType];
	ld.f32 	%f7, [%rd8+28];
	mul.ftz.f32 	%f8, %f7, 0f40400000;
	ld.f32 	%f3, [%rd8+8];
	ld.f32 	%f2, [%rd8+4];
	ld.f32 	%f1, [%rd8];
	ld.f32 	%f6, [%rd8+24];
	ld.f32 	%f5, [%rd8+20];
	ld.f32 	%f4, [%rd8+16];
	ld.global.u32 	%rd16, [launchIndex];
	mov.u64 	%rd23, randBuffer;
	cvta.global.u64 	%rd15, %rd23;
	mov.u32 	%r17, 8;
	// inline asm
	call (%rd14), _rt_buffer_get_64, (%rd15, %r16, %r17, %rd16, %rd19, %rd19, %rd19);
	// inline asm
	ld.v2.u32 	{%r21, %r22}, [%rd14];
	st.local.v2.u32 	[%rd21], {%r21, %r22};
	ld.u32 	%r25, [%rd8+32];
	st.local.u32 	[%rd21+8], %r25;
	ld.global.u32 	%r18, [topObject];
	mov.u32 	%r20, 16;
	// inline asm
	call _rt_trace_64, (%r18, %f1, %f2, %f3, %f4, %f5, %f6, %r19, %f7, %f8, %rd20, %r20);
	// inline asm
	ret;
}

	// .globl	_Z20windowPassClosestHitv
.visible .entry _Z20windowPassClosestHitv(

)
{
	.local .align 8 .b8 	__local_depot4[80];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<30>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<307>;
	.reg .b32 	%r<75>;
	.reg .f64 	%fd<6>;
	.reg .b64 	%rd<37>;


	mov.u64 	%rd36, __local_depot4;
	cvta.local.u64 	%SP, %rd36;
	ldu.global.f32 	%f60, [hitT];
	ld.global.f32 	%f3, [currentRay+20];
	ld.global.f32 	%f2, [currentRay+16];
	mov.u64 	%rd9, currentRay;
	ld.global.f32 	%f1, [currentRay+12];
	ldu.global.f32 	%f61, [currentRay];
	fma.rn.ftz.f32 	%f4, %f1, %f60, %f61;
	add.s64 	%rd10, %rd9, 4;
	ldu.global.f32 	%f62, [%rd10];
	fma.rn.ftz.f32 	%f5, %f2, %f60, %f62;
	add.s64 	%rd11, %rd9, 8;
	ldu.global.f32 	%f63, [%rd11];
	fma.rn.ftz.f32 	%f6, %f3, %f60, %f63;
	ldu.global.u32 	%r6, [centroidNumber];
	cvt.s64.s32	%rd5, %r6;
	mov.u64 	%rd12, normalBuffer;
	cvta.global.u64 	%rd4, %rd12;
	mov.u32 	%r4, 1;
	mov.u32 	%r5, 12;
	mov.u64 	%rd8, 0;
	// inline asm
	call (%rd3), _rt_buffer_get_64, (%rd4, %r4, %r5, %rd5, %rd8, %rd8, %rd8);
	// inline asm
	ld.f32 	%f64, [%rd3+8];
	ld.f32 	%f65, [%rd3+4];
	ld.f32 	%f66, [%rd3];
	abs.ftz.f32 	%f67, %f66;
	abs.ftz.f32 	%f68, %f65;
	abs.ftz.f32 	%f69, %f64;
	setp.gt.ftz.f32	%p6, %f67, %f68;
	selp.f32	%f298, 0f00000000, 0f3F800000, %p6;
	selp.f32	%f299, 0f3F800000, 0f00000000, %p6;
	selp.f32	%f70, %f67, %f68, %p6;
	mov.f32 	%f297, 0f3F800000;
	mov.f32 	%f296, 0f00000000;
	setp.leu.ftz.f32	%p7, %f69, %f70;
	@%p7 bra 	BB4_2;

	mov.f32 	%f299, 0f00000000;
	mov.f32 	%f298, 0f3F800000;
	mov.f32 	%f297, %f299;
	mov.f32 	%f296, %f298;

BB4_2:
	mul.ftz.f32 	%f75, %f5, %f299;
	fma.rn.ftz.f32 	%f76, %f4, %f298, %f75;
	fma.rn.ftz.f32 	%f13, %f6, 0f00000000, %f76;
	mul.ftz.f32 	%f77, %f5, %f296;
	fma.rn.ftz.f32 	%f78, %f4, 0f00000000, %f77;
	fma.rn.ftz.f32 	%f14, %f6, %f297, %f78;
	ld.global.u32 	%r7, [screen];
	setp.eq.s32	%p9, %r7, 0;
	mov.pred 	%p28, 0;
	@%p9 bra 	BB4_4;

	mul.ftz.f32 	%f79, %f13, 0f41A00000;
	ld.global.u32 	%r10, [screenWidth];
	cvt.rn.f32.s32	%f80, %r10;
	mul.ftz.f32 	%f81, %f80, %f79;
	cvt.rzi.ftz.s32.f32	%r11, %f81;
	mul.ftz.f32 	%f82, %f14, 0f41A00000;
	ld.global.u32 	%r12, [screenHeight];
	cvt.rn.f32.s32	%f83, %r12;
	mul.ftz.f32 	%f84, %f82, %f83;
	cvt.rzi.ftz.s32.f32	%r13, %f84;
	rem.s32 	%r14, %r11, %r10;
	rem.s32 	%r15, %r13, %r12;
	mad.lo.s32 	%r16, %r10, %r15, %r14;
	cvt.s64.s32	%rd15, %r16;
	mov.u64 	%rd19, screenBuffer;
	cvta.global.u64 	%rd14, %rd19;
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd14, %r4, %r4, %rd15, %rd8, %rd8, %rd8);
	// inline asm
	ld.u8 	%rs1, [%rd13];
	setp.eq.s16	%p28, %rs1, 88;

BB4_4:
	mul.ftz.f32 	%f15, %f3, 0f00000000;
	mul.ftz.f32 	%f16, %f2, 0f00000000;
	sub.ftz.f32 	%f85, %f16, %f15;
	mul.ftz.f32 	%f17, %f1, 0f00000000;
	sub.ftz.f32 	%f86, %f3, %f17;
	sub.ftz.f32 	%f87, %f17, %f2;
	mul.ftz.f32 	%f88, %f86, %f86;
	fma.rn.ftz.f32 	%f89, %f85, %f85, %f88;
	fma.rn.ftz.f32 	%f90, %f87, %f87, %f89;
	rsqrt.approx.ftz.f32 	%f91, %f90;
	mul.ftz.f32 	%f300, %f85, %f91;
	mul.ftz.f32 	%f301, %f86, %f91;
	mul.ftz.f32 	%f302, %f87, %f91;
	mul.ftz.f32 	%f92, %f301, %f301;
	fma.rn.ftz.f32 	%f93, %f300, %f300, %f92;
	fma.rn.ftz.f32 	%f94, %f302, %f302, %f93;
	sqrt.approx.ftz.f32 	%f95, %f94;
	cvt.ftz.f64.f32	%fd1, %f95;
	setp.geu.f64	%p10, %fd1, 0d3EB0C6F7A0B5ED8D;
	@%p10 bra 	BB4_6;

	sub.ftz.f32 	%f96, %f16, %f3;
	sub.ftz.f32 	%f97, %f15, %f17;
	mul.ftz.f32 	%f98, %f97, %f97;
	fma.rn.ftz.f32 	%f99, %f96, %f96, %f98;
	sub.ftz.f32 	%f100, %f1, %f16;
	fma.rn.ftz.f32 	%f101, %f100, %f100, %f99;
	rsqrt.approx.ftz.f32 	%f102, %f101;
	mul.ftz.f32 	%f300, %f96, %f102;
	mul.ftz.f32 	%f301, %f97, %f102;
	mul.ftz.f32 	%f302, %f100, %f102;

BB4_6:
	add.u64 	%rd20, %SP, 40;
	cvta.to.local.u64 	%rd2, %rd20;
	mul.ftz.f32 	%f103, %f3, %f301;
	mul.ftz.f32 	%f104, %f2, %f302;
	sub.ftz.f32 	%f105, %f104, %f103;
	mul.ftz.f32 	%f106, %f1, %f302;
	mul.ftz.f32 	%f107, %f3, %f300;
	sub.ftz.f32 	%f108, %f107, %f106;
	mul.ftz.f32 	%f109, %f2, %f300;
	mul.ftz.f32 	%f110, %f1, %f301;
	sub.ftz.f32 	%f111, %f110, %f109;
	mul.ftz.f32 	%f112, %f108, %f108;
	fma.rn.ftz.f32 	%f113, %f105, %f105, %f112;
	fma.rn.ftz.f32 	%f114, %f111, %f111, %f113;
	rsqrt.approx.ftz.f32 	%f115, %f114;
	mul.ftz.f32 	%f27, %f105, %f115;
	mul.ftz.f32 	%f28, %f108, %f115;
	mul.ftz.f32 	%f29, %f111, %f115;
	ld.global.u64 	%rd1, [windowPayload];
	cvt.u32.u64	%r17, %rd1;
	mad.lo.s32 	%r1, %r17, 1664525, 1013904223;
	st.global.u32 	[windowPayload], %r1;
	and.b32  	%r18, %r1, 16777215;
	cvt.rn.f32.u32	%f116, %r18;
	mov.f32 	%f117, 0f4B800000;
	div.approx.ftz.f32 	%f118, %f116, %f117;
	setp.lt.ftz.f32	%p11, %f118, 0f3F000000;
	@%p11 bra 	BB4_8;
	bra.uni 	BB4_7;

BB4_8:
	shr.u64 	%rd28, %rd1, 32;
	cvt.u32.u64	%r23, %rd28;
	mad.lo.s32 	%r24, %r23, 1664525, 1013904223;
	mad.lo.s32 	%r25, %r1, 1664525, 1013904223;
	and.b32  	%r26, %r25, 16777215;
	cvt.rn.f32.u32	%f127, %r26;
	div.approx.ftz.f32 	%f129, %f127, %f117;
	st.global.v2.u32 	[windowPayload], {%r25, %r24};
	and.b32  	%r27, %r24, 16777215;
	cvt.rn.f32.u32	%f130, %r27;
	div.approx.ftz.f32 	%f131, %f130, %f117;
	cvt.ftz.f64.f32	%fd2, %f131;
	mul.f64 	%fd3, %fd2, 0d401921FB54442D18;
	cvt.rn.ftz.f32.f64	%f132, %fd3;
	sqrt.approx.ftz.f32 	%f133, %f129;
	cos.approx.ftz.f32 	%f134, %f132;
	mul.ftz.f32 	%f135, %f133, %f134;
	sin.approx.ftz.f32 	%f136, %f132;
	mul.ftz.f32 	%f137, %f133, %f136;
	mul.ftz.f32 	%f138, %f27, %f137;
	mul.ftz.f32 	%f139, %f28, %f137;
	mul.ftz.f32 	%f140, %f29, %f137;
	fma.rn.ftz.f32 	%f141, %f300, %f135, %f138;
	fma.rn.ftz.f32 	%f142, %f301, %f135, %f139;
	fma.rn.ftz.f32 	%f143, %f302, %f135, %f140;
	mov.f32 	%f144, 0f3F800000;
	sub.ftz.f32 	%f145, %f144, %f129;
	sqrt.approx.ftz.f32 	%f146, %f145;
	ld.global.u32 	%r28, [normalInversion];
	cvt.rn.f32.s32	%f147, %r28;
	mul.ftz.f32 	%f148, %f146, %f147;
	mul.ftz.f32 	%f149, %f1, %f148;
	mul.ftz.f32 	%f150, %f2, %f148;
	mul.ftz.f32 	%f151, %f3, %f148;
	sub.ftz.f32 	%f304, %f141, %f149;
	sub.ftz.f32 	%f305, %f142, %f150;
	sub.ftz.f32 	%f306, %f143, %f151;
	mul.ftz.f32 	%f152, %f305, %f305;
	fma.rn.ftz.f32 	%f153, %f304, %f304, %f152;
	fma.rn.ftz.f32 	%f154, %f306, %f306, %f153;
	rsqrt.approx.ftz.f32 	%f155, %f154;
	mul.ftz.f32 	%f156, %f155, %f304;
	mul.ftz.f32 	%f157, %f155, %f305;
	mul.ftz.f32 	%f158, %f155, %f306;
	abs.ftz.f32 	%f159, %f157;
	sub.ftz.f32 	%f160, %f144, %f159;
	mul.ftz.f32 	%f161, %f160, 0f3F000000;
	sqrt.approx.ftz.f32 	%f162, %f161;
	setp.gt.ftz.f32	%p14, %f159, 0f3F11EB85;
	selp.f32	%f163, %f162, %f159, %p14;
	mul.ftz.f32 	%f164, %f163, %f163;
	mov.f32 	%f165, 0f3C94D2E9;
	mov.f32 	%f166, 0f3D53F941;
	fma.rn.ftz.f32 	%f167, %f166, %f164, %f165;
	mov.f32 	%f168, 0f3D3F841F;
	fma.rn.ftz.f32 	%f169, %f167, %f164, %f168;
	mov.f32 	%f170, 0f3D994929;
	fma.rn.ftz.f32 	%f171, %f169, %f164, %f170;
	mov.f32 	%f172, 0f3E2AAB94;
	fma.rn.ftz.f32 	%f173, %f171, %f164, %f172;
	mul.ftz.f32 	%f174, %f164, %f173;
	fma.rn.ftz.f32 	%f175, %f174, %f163, %f163;
	add.ftz.f32 	%f176, %f175, %f175;
	mov.f32 	%f177, 0f3FC90FDB;
	sub.ftz.f32 	%f178, %f177, %f175;
	selp.f32	%f179, %f176, %f178, %p14;
	setp.lt.ftz.f32	%p15, %f157, 0f00000000;
	mov.f32 	%f180, 0f40490FDB;
	sub.ftz.f32 	%f181, %f180, %f179;
	selp.f32	%f36, %f181, %f179, %p15;
	abs.ftz.f32 	%f37, %f158;
	abs.ftz.f32 	%f38, %f156;
	setp.eq.ftz.f32	%p16, %f37, 0f00000000;
	setp.eq.ftz.f32	%p17, %f38, 0f00000000;
	and.pred  	%p18, %p16, %p17;
	mov.b32 	 %r2, %f158;
	mov.b32 	 %r29, %f156;
	and.b32  	%r3, %r29, -2147483648;
	@%p18 bra 	BB4_12;
	bra.uni 	BB4_9;

BB4_12:
	shr.s32 	%r36, %r2, 31;
	and.b32  	%r37, %r36, 1078530011;
	or.b32  	%r38, %r37, %r3;
	mov.b32 	 %f303, %r38;
	bra.uni 	BB4_13;

BB4_7:
	mov.u64 	%rd27, dirLightBuffer;
	cvta.global.u64 	%rd22, %rd27;
	mov.u32 	%r20, 28;
	// inline asm
	call (%rd21), _rt_buffer_get_64, (%rd22, %r4, %r20, %rd8, %rd8, %rd8, %rd8);
	// inline asm
	ld.f32 	%f119, [%rd21];
	neg.ftz.f32 	%f304, %f119;
	ld.f32 	%f120, [%rd21+4];
	neg.ftz.f32 	%f305, %f120;
	ld.f32 	%f121, [%rd21+8];
	neg.ftz.f32 	%f306, %f121;
	mov.u32 	%r21, 0;
	st.local.u32 	[%rd2+32], %r21;
	mul.ftz.f32 	%f122, %f1, %f304;
	mul.ftz.f32 	%f123, %f2, %f120;
	sub.ftz.f32 	%f124, %f122, %f123;
	mul.ftz.f32 	%f125, %f3, %f121;
	sub.ftz.f32 	%f126, %f124, %f125;
	st.local.f32 	[%rd2+12], %f126;
	st.local.v2.f32 	[%rd2+16], {%f126, %f126};
	ld.global.u32 	%r22, [bounce];
	setp.gt.s32	%p12, %r22, 3;
	setp.ne.s32	%p13, %r22, 6;
	and.pred  	%p29, %p12, %p13;
	bra.uni 	BB4_14;

BB4_9:
	setp.eq.ftz.f32	%p19, %f37, 0f7F800000;
	setp.eq.ftz.f32	%p20, %f38, 0f7F800000;
	and.pred  	%p21, %p19, %p20;
	@%p21 bra 	BB4_11;
	bra.uni 	BB4_10;

BB4_11:
	shr.s32 	%r32, %r2, 31;
	and.b32  	%r33, %r32, 13483017;
	add.s32 	%r34, %r33, 1061752795;
	or.b32  	%r35, %r34, %r3;
	mov.b32 	 %f303, %r35;
	bra.uni 	BB4_13;

BB4_10:
	max.ftz.f32 	%f182, %f38, %f37;
	min.ftz.f32 	%f183, %f38, %f37;
	div.full.ftz.f32 	%f184, %f183, %f182;
	mul.rn.ftz.f32 	%f185, %f184, %f184;
	mov.f32 	%f186, 0fC0B59883;
	mov.f32 	%f187, 0fBF52C7EA;
	fma.rn.ftz.f32 	%f188, %f185, %f187, %f186;
	mov.f32 	%f189, 0fC0D21907;
	fma.rn.ftz.f32 	%f190, %f188, %f185, %f189;
	mul.ftz.f32 	%f191, %f185, %f190;
	mul.ftz.f32 	%f192, %f184, %f191;
	add.ftz.f32 	%f193, %f185, 0f41355DC0;
	mov.f32 	%f194, 0f41E6BD60;
	fma.rn.ftz.f32 	%f195, %f193, %f185, %f194;
	mov.f32 	%f196, 0f419D92C8;
	fma.rn.ftz.f32 	%f197, %f195, %f185, %f196;
	rcp.approx.ftz.f32 	%f198, %f197;
	fma.rn.ftz.f32 	%f199, %f192, %f198, %f184;
	sub.ftz.f32 	%f201, %f177, %f199;
	setp.gt.ftz.f32	%p22, %f38, %f37;
	selp.f32	%f202, %f201, %f199, %p22;
	sub.ftz.f32 	%f204, %f180, %f202;
	setp.lt.s32	%p23, %r2, 0;
	selp.f32	%f205, %f204, %f202, %p23;
	mov.b32 	 %r30, %f205;
	or.b32  	%r31, %r30, %r3;
	mov.b32 	 %f206, %r31;
	add.ftz.f32 	%f207, %f37, %f38;
	setp.gtu.ftz.f32	%p24, %f207, 0f7F800000;
	selp.f32	%f303, %f207, %f206, %p24;

BB4_13:
	st.local.u32 	[%rd2+32], %r4;
	mov.u32 	%r40, 1065353216;
	st.local.u32 	[%rd2+20], %r40;
	st.local.u32 	[%rd2+16], %r40;
	st.local.u32 	[%rd2+12], %r40;
	st.local.v2.f32 	[%rd2+24], {%f36, %f303};
	ld.global.u32 	%r41, [bounce];
	and.b32  	%r42, %r41, -5;
	setp.eq.s32	%p29, %r42, 2;

BB4_14:
	selp.u32	%r46, 1, 0, %p28;
	xor.b32  	%r47, %r46, 1;
	mov.u32 	%r48, 0;
	st.local.u32 	[%rd2+8], %r48;
	mov.f32 	%f216, 0f00000000;
	st.local.v2.f32 	[%rd2], {%f216, %f216};
	ld.global.u32 	%r44, [skyRayType];
	ld.global.f32 	%f214, [sceneEpsilon];
	ld.global.u32 	%r43, [topObject];
	mov.f32 	%f215, 0f6C4ECB8F;
	mov.u32 	%r45, 40;
	// inline asm
	call _rt_trace_64, (%r43, %f4, %f5, %f6, %f304, %f305, %f306, %r44, %f214, %f215, %rd20, %r45);
	// inline asm
	cvt.rn.f32.s32	%f217, %r47;
	selp.f32	%f218, 0f00000000, %f217, %p29;
	ld.local.v2.f32 	{%f219, %f220}, [%rd2+8];
	mul.ftz.f32 	%f223, %f218, %f220;
	ld.local.v2.f32 	{%f224, %f225}, [%rd2+16];
	mul.ftz.f32 	%f227, %f218, %f224;
	mul.ftz.f32 	%f229, %f218, %f225;
	ld.local.v2.f32 	{%f230, %f231}, [%rd2];
	mul.ftz.f32 	%f46, %f223, %f230;
	mul.ftz.f32 	%f47, %f227, %f231;
	st.local.v2.f32 	[%rd2], {%f46, %f47};
	mul.ftz.f32 	%f48, %f229, %f219;
	st.local.f32 	[%rd2+8], %f48;
	max.ftz.f32 	%f234, %f46, %f47;
	max.ftz.f32 	%f235, %f234, %f48;
	setp.leu.ftz.f32	%p25, %f235, 0f00000000;
	@%p25 bra 	BB4_19;

	add.u64 	%rd30, %SP, 0;
	cvta.to.local.u64 	%rd31, %rd30;
	ld.global.v2.u32 	{%r49, %r50}, [windowPayload];
	ld.global.u32 	%r53, [windowPayload+8];
	st.local.v2.u32 	[%rd31+16], {%r49, %r50};
	st.local.u32 	[%rd31+28], %r48;
	st.local.u32 	[%rd31+36], %r53;
	ld.global.u32 	%r55, [launchIndex];
	st.local.u32 	[%rd31+24], %r55;
	ld.local.u32 	%r56, [%rd2+32];
	st.local.u32 	[%rd31+32], %r56;
	ld.global.f32 	%f49, [Td+4];
	ld.global.f32 	%f50, [Td];
	add.ftz.f32 	%f236, %f50, %f49;
	ld.global.f32 	%f51, [Td+8];
	add.ftz.f32 	%f237, %f236, %f51;
	mov.f32 	%f238, 0f40400000;
	div.approx.ftz.f32 	%f52, %f237, %f238;
	ld.global.f32 	%f53, [Ts+4];
	ld.global.f32 	%f54, [Ts];
	add.ftz.f32 	%f239, %f54, %f53;
	ld.global.f32 	%f55, [Ts+8];
	add.ftz.f32 	%f240, %f239, %f55;
	div.approx.ftz.f32 	%f56, %f240, %f238;
	add.ftz.f32 	%f241, %f52, %f56;
	ld.local.u32 	%r57, [%rd31+20];
	mad.lo.s32 	%r58, %r57, 1664525, 1013904223;
	st.local.u32 	[%rd31+20], %r58;
	and.b32  	%r59, %r58, 16777215;
	cvt.rn.f32.u32	%f242, %r59;
	div.approx.ftz.f32 	%f57, %f242, %f117;
	setp.geu.ftz.f32	%p26, %f57, %f241;
	@%p26 bra 	BB4_19;

	setp.lt.ftz.f32	%p27, %f57, %f56;
	@%p27 bra 	BB4_18;
	bra.uni 	BB4_17;

BB4_18:
	rcp.approx.ftz.f32 	%f289, %f56;
	mul.ftz.f32 	%f290, %f46, %f54;
	mul.ftz.f32 	%f291, %f47, %f53;
	mul.ftz.f32 	%f292, %f48, %f55;
	mul.ftz.f32 	%f293, %f292, %f289;
	mul.ftz.f32 	%f294, %f291, %f289;
	mul.ftz.f32 	%f295, %f290, %f289;
	st.local.v2.f32 	[%rd31], {%f295, %f294};
	st.local.f32 	[%rd31+8], %f293;
	ld.global.u32 	%r73, [photonRayType];
	ld.global.f32 	%f287, [sceneEpsilon];
	ld.global.u32 	%r72, [topObject];
	neg.ftz.f32 	%f286, %f306;
	neg.ftz.f32 	%f285, %f305;
	neg.ftz.f32 	%f284, %f304;
	// inline asm
	call _rt_trace_64, (%r72, %f4, %f5, %f6, %f284, %f285, %f286, %r73, %f287, %f215, %rd30, %r45);
	// inline asm
	bra.uni 	BB4_19;

BB4_17:
	rcp.approx.ftz.f32 	%f252, %f52;
	mul.ftz.f32 	%f253, %f46, %f50;
	mul.ftz.f32 	%f254, %f47, %f49;
	mul.ftz.f32 	%f255, %f48, %f51;
	mul.ftz.f32 	%f256, %f255, %f252;
	mul.ftz.f32 	%f257, %f254, %f252;
	mul.ftz.f32 	%f258, %f253, %f252;
	st.local.v2.f32 	[%rd31], {%f258, %f257};
	st.local.f32 	[%rd31+8], %f256;
	ld.local.v2.u32 	{%r63, %r64}, [%rd31+16];
	mad.lo.s32 	%r66, %r64, 1664525, 1013904223;
	mad.lo.s32 	%r68, %r63, 1664525, 1013904223;
	and.b32  	%r69, %r68, 16777215;
	cvt.rn.f32.u32	%f259, %r69;
	div.approx.ftz.f32 	%f261, %f259, %f117;
	st.local.v2.u32 	[%rd31+16], {%r68, %r66};
	and.b32  	%r70, %r66, 16777215;
	cvt.rn.f32.u32	%f262, %r70;
	div.approx.ftz.f32 	%f263, %f262, %f117;
	sqrt.approx.ftz.f32 	%f264, %f261;
	cvt.ftz.f64.f32	%fd4, %f263;
	mul.f64 	%fd5, %fd4, 0d401921FB54442D18;
	cvt.rn.ftz.f32.f64	%f265, %fd5;
	cos.approx.ftz.f32 	%f266, %f265;
	mul.ftz.f32 	%f267, %f264, %f266;
	sin.approx.ftz.f32 	%f268, %f265;
	mul.ftz.f32 	%f269, %f264, %f268;
	mul.ftz.f32 	%f270, %f27, %f269;
	mul.ftz.f32 	%f271, %f28, %f269;
	mul.ftz.f32 	%f272, %f29, %f269;
	fma.rn.ftz.f32 	%f273, %f300, %f267, %f270;
	fma.rn.ftz.f32 	%f274, %f301, %f267, %f271;
	fma.rn.ftz.f32 	%f275, %f302, %f267, %f272;
	mov.f32 	%f276, 0f3F800000;
	sub.ftz.f32 	%f277, %f276, %f261;
	sqrt.approx.ftz.f32 	%f278, %f277;
	ld.global.u32 	%r71, [normalInversion];
	cvt.rn.f32.s32	%f279, %r71;
	mul.ftz.f32 	%f280, %f278, %f279;
	fma.rn.ftz.f32 	%f247, %f1, %f280, %f273;
	fma.rn.ftz.f32 	%f248, %f2, %f280, %f274;
	fma.rn.ftz.f32 	%f249, %f3, %f280, %f275;
	ld.global.u32 	%r61, [photonRayType];
	ld.global.f32 	%f250, [sceneEpsilon];
	ld.global.u32 	%r60, [topObject];
	// inline asm
	call _rt_trace_64, (%r60, %f4, %f5, %f6, %f247, %f248, %f249, %r61, %f250, %f215, %rd30, %r45);
	// inline asm

BB4_19:
	ret;
}

	// .globl	_Z16photonClosestHitv
.visible .entry _Z16photonClosestHitv(

)
{
	.local .align 4 .b8 	__local_depot5[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<31>;
	.reg .f32 	%f<264>;
	.reg .b32 	%r<68>;
	.reg .f64 	%fd<131>;
	.reg .b64 	%rd<40>;


	mov.u64 	%rd39, __local_depot5;
	cvta.local.u64 	%SP, %rd39;
	ldu.global.f32 	%f66, [hitT];
	ld.global.f32 	%f261, [currentRay+20];
	ld.global.f32 	%f262, [currentRay+16];
	mov.u64 	%rd2, currentRay;
	ld.global.f32 	%f263, [currentRay+12];
	ldu.global.f32 	%f67, [currentRay];
	fma.rn.ftz.f32 	%f4, %f263, %f66, %f67;
	add.s64 	%rd3, %rd2, 4;
	ldu.global.f32 	%f68, [%rd3];
	fma.rn.ftz.f32 	%f5, %f262, %f66, %f68;
	add.s64 	%rd4, %rd2, 8;
	ldu.global.f32 	%f69, [%rd4];
	fma.rn.ftz.f32 	%f6, %f261, %f66, %f69;
	ldu.global.f32 	%f54, [shadingNormal];
	mov.u64 	%rd5, shadingNormal;
	add.s64 	%rd6, %rd5, 4;
	ldu.global.f32 	%f55, [%rd6];
	add.s64 	%rd7, %rd5, 8;
	ldu.global.f32 	%f56, [%rd7];
	mov.u32 	%r17, 7937;
	mov.f32 	%f65, 0f00000000;
	// inline asm
	call (%f50, %f51, %f52, %f53), _rt_transform_tuple, (%r17, %f54, %f55, %f56, %f65);
	// inline asm
	mul.ftz.f32 	%f70, %f51, %f51;
	fma.rn.ftz.f32 	%f71, %f50, %f50, %f70;
	fma.rn.ftz.f32 	%f72, %f52, %f52, %f71;
	rsqrt.approx.ftz.f32 	%f73, %f72;
	mul.ftz.f32 	%f74, %f50, %f73;
	mul.ftz.f32 	%f75, %f51, %f73;
	mul.ftz.f32 	%f76, %f52, %f73;
	ld.global.f32 	%f62, [geometricNormal];
	ld.global.f32 	%f63, [geometricNormal+4];
	ld.global.f32 	%f64, [geometricNormal+8];
	// inline asm
	call (%f58, %f59, %f60, %f61), _rt_transform_tuple, (%r17, %f62, %f63, %f64, %f65);
	// inline asm
	mul.ftz.f32 	%f77, %f59, %f59;
	fma.rn.ftz.f32 	%f78, %f58, %f58, %f77;
	fma.rn.ftz.f32 	%f79, %f60, %f60, %f78;
	rsqrt.approx.ftz.f32 	%f80, %f79;
	mul.ftz.f32 	%f81, %f58, %f80;
	mul.ftz.f32 	%f82, %f59, %f80;
	mul.ftz.f32 	%f83, %f60, %f80;
	mul.ftz.f32 	%f84, %f263, %f81;
	mul.ftz.f32 	%f85, %f262, %f82;
	neg.ftz.f32 	%f86, %f85;
	sub.ftz.f32 	%f87, %f86, %f84;
	mul.ftz.f32 	%f88, %f261, %f83;
	sub.ftz.f32 	%f89, %f87, %f88;
	mov.b32 	 %r18, %f89;
	and.b32  	%r19, %r18, -2147483648;
	or.b32  	%r20, %r19, 1065353216;
	mov.b32 	 %f90, %r20;
	mul.ftz.f32 	%f7, %f74, %f90;
	mul.ftz.f32 	%f8, %f75, %f90;
	mul.ftz.f32 	%f9, %f76, %f90;
	ld.global.f32 	%f91, [Kd+4];
	ld.global.f32 	%f92, [Kd];
	max.ftz.f32 	%f93, %f92, %f91;
	ld.global.f32 	%f94, [Kd+8];
	max.ftz.f32 	%f95, %f93, %f94;
	setp.leu.ftz.f32	%p1, %f95, 0f00000000;
	@%p1 bra 	BB5_4;

	ld.global.u32 	%r1, [bounce];
	setp.eq.s32	%p2, %r1, 6;
	ld.global.u32 	%r2, [photonPayload+32];
	setp.ne.s32	%p3, %r2, 0;
	or.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB5_4;
	bra.uni 	BB5_2;

BB5_2:
	setp.ne.s32	%p5, %r2, 1;
	setp.ne.s32	%p6, %r1, 5;
	or.pred  	%p7, %p5, %p6;
	@!%p7 bra 	BB5_4;
	bra.uni 	BB5_3;

BB5_3:
	ld.global.v2.u32 	{%r23, %r24}, [photonPayload+24];
	add.s32 	%r27, %r24, %r23;
	cvt.u64.u32	%rd10, %r27;
	mov.u64 	%rd14, skyPhotonBuffer;
	cvta.global.u64 	%rd9, %rd14;
	mov.u32 	%r21, 1;
	mov.u32 	%r22, 64;
	mov.u64 	%rd13, 0;
	// inline asm
	call (%rd8), _rt_buffer_get_64, (%rd9, %r21, %r22, %rd10, %rd13, %rd13, %rd13);
	// inline asm
	st.f32 	[%rd8+8], %f6;
	st.f32 	[%rd8+4], %f5;
	st.f32 	[%rd8], %f4;
	ld.global.u32 	%r28, [photonPayload+36];
	st.u32 	[%rd8+12], %r28;
	st.f32 	[%rd8+16], %f7;
	st.f32 	[%rd8+20], %f8;
	st.f32 	[%rd8+24], %f9;
	ld.global.f32 	%f96, [currentRay+12];
	ld.global.f32 	%f97, [currentRay+16];
	ld.global.f32 	%f98, [currentRay+20];
	st.f32 	[%rd8+40], %f98;
	st.f32 	[%rd8+36], %f97;
	st.f32 	[%rd8+32], %f96;
	ld.global.v2.f32 	{%f99, %f100}, [photonPayload];
	ld.global.f32 	%f103, [photonPayload+8];
	st.f32 	[%rd8+56], %f103;
	st.f32 	[%rd8+52], %f100;
	st.f32 	[%rd8+48], %f99;
	ld.global.u32 	%r29, [photonPayload+28];
	add.s32 	%r30, %r29, 1;
	st.global.u32 	[photonPayload+28], %r30;

BB5_4:
	ld.global.u32 	%r31, [maxDepth];
	ld.global.u32 	%r3, [photonPayload+32];
	setp.ge.u32	%p8, %r3, %r31;
	ld.global.u32 	%r32, [maxPhotonCount];
	ld.global.u32 	%r33, [photonPayload+28];
	setp.ge.u32	%p9, %r33, %r32;
	or.pred  	%p10, %p8, %p9;
	ld.global.u32 	%r34, [bounce];
	setp.eq.s32	%p11, %r34, 4;
	or.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB5_38;

	add.s32 	%r35, %r3, 1;
	st.global.u32 	[photonPayload+32], %r35;
	ld.global.f32 	%f104, [Kd+4];
	ld.global.f32 	%f105, [Kd];
	add.ftz.f32 	%f106, %f105, %f104;
	ld.global.f32 	%f107, [Kd+8];
	add.ftz.f32 	%f108, %f106, %f107;
	mov.f32 	%f109, 0f40400000;
	div.approx.ftz.f32 	%f10, %f108, %f109;
	ld.global.f32 	%f110, [Td+4];
	ld.global.f32 	%f111, [Td];
	add.ftz.f32 	%f112, %f111, %f110;
	ld.global.f32 	%f113, [Td+8];
	add.ftz.f32 	%f114, %f112, %f113;
	div.approx.ftz.f32 	%f11, %f114, %f109;
	ld.global.f32 	%f12, [Ks+4];
	ld.global.f32 	%f13, [Ks];
	add.ftz.f32 	%f115, %f13, %f12;
	ld.global.f32 	%f14, [Ks+8];
	add.ftz.f32 	%f116, %f115, %f14;
	div.approx.ftz.f32 	%f15, %f116, %f109;
	ld.global.f32 	%f16, [Ts+4];
	ld.global.f32 	%f17, [Ts];
	add.ftz.f32 	%f117, %f17, %f16;
	ld.global.f32 	%f18, [Ts+8];
	add.ftz.f32 	%f118, %f117, %f18;
	div.approx.ftz.f32 	%f19, %f118, %f109;
	add.ftz.f32 	%f119, %f10, %f11;
	add.ftz.f32 	%f20, %f119, %f15;
	ld.global.u64 	%rd1, [photonPayload+16];
	cvt.u32.u64	%r36, %rd1;
	mad.lo.s32 	%r4, %r36, 1664525, 1013904223;
	st.global.u32 	[photonPayload+16], %r4;
	and.b32  	%r37, %r4, 16777215;
	cvt.rn.f32.u32	%f120, %r37;
	mov.f32 	%f121, 0f4B800000;
	div.approx.ftz.f32 	%f21, %f120, %f121;
	setp.lt.ftz.f32	%p13, %f21, %f119;
	@%p13 bra 	BB5_10;
	bra.uni 	BB5_6;

BB5_10:
	shr.u64 	%rd15, %rd1, 32;
	cvt.u32.u64	%r38, %rd15;
	mul.ftz.f32 	%f154, %f9, 0f00000000;
	mul.ftz.f32 	%f155, %f8, 0f00000000;
	sub.ftz.f32 	%f156, %f155, %f154;
	mul.ftz.f32 	%f157, %f7, 0f00000000;
	sub.ftz.f32 	%f158, %f9, %f157;
	sub.ftz.f32 	%f159, %f157, %f8;
	mul.ftz.f32 	%f160, %f158, %f158;
	fma.rn.ftz.f32 	%f161, %f156, %f156, %f160;
	fma.rn.ftz.f32 	%f162, %f159, %f159, %f161;
	sqrt.approx.ftz.f32 	%f163, %f162;
	cvt.ftz.f64.f32	%fd41, %f163;
	setp.lt.f64	%p16, %fd41, 0d3F847AE147AE147B;
	sub.ftz.f32 	%f164, %f155, %f9;
	sub.ftz.f32 	%f165, %f154, %f157;
	sub.ftz.f32 	%f166, %f7, %f155;
	selp.f32	%f167, %f164, %f156, %p16;
	selp.f32	%f168, %f165, %f158, %p16;
	selp.f32	%f169, %f166, %f159, %p16;
	mul.ftz.f32 	%f170, %f168, %f168;
	fma.rn.ftz.f32 	%f171, %f167, %f167, %f170;
	fma.rn.ftz.f32 	%f172, %f169, %f169, %f171;
	rsqrt.approx.ftz.f32 	%f173, %f172;
	mul.ftz.f32 	%f27, %f173, %f167;
	mul.ftz.f32 	%f28, %f173, %f168;
	mul.ftz.f32 	%f29, %f173, %f169;
	mul.ftz.f32 	%f174, %f8, %f29;
	mul.ftz.f32 	%f175, %f9, %f28;
	sub.ftz.f32 	%f176, %f174, %f175;
	mul.ftz.f32 	%f177, %f9, %f27;
	mul.ftz.f32 	%f178, %f7, %f29;
	sub.ftz.f32 	%f179, %f177, %f178;
	mul.ftz.f32 	%f180, %f7, %f28;
	mul.ftz.f32 	%f181, %f8, %f27;
	sub.ftz.f32 	%f182, %f180, %f181;
	mul.ftz.f32 	%f183, %f179, %f179;
	fma.rn.ftz.f32 	%f184, %f176, %f176, %f183;
	fma.rn.ftz.f32 	%f185, %f182, %f182, %f184;
	rsqrt.approx.ftz.f32 	%f186, %f185;
	mul.ftz.f32 	%f30, %f186, %f176;
	mul.ftz.f32 	%f31, %f186, %f179;
	mul.ftz.f32 	%f32, %f186, %f182;
	mad.lo.s32 	%r39, %r4, 1664525, 1013904223;
	and.b32  	%r40, %r39, 16777215;
	cvt.rn.f32.u32	%f187, %r40;
	div.approx.ftz.f32 	%f189, %f187, %f121;
	mad.lo.s32 	%r41, %r38, 1664525, 1013904223;
	mad.lo.s32 	%r42, %r41, 1664525, 1013904223;
	mad.lo.s32 	%r43, %r39, 1664525, 1013904223;
	and.b32  	%r44, %r43, 16777215;
	cvt.rn.f32.u32	%f190, %r44;
	div.approx.ftz.f32 	%f191, %f190, %f121;
	and.b32  	%r45, %r41, 16777215;
	cvt.rn.f32.u32	%f192, %r45;
	div.approx.ftz.f32 	%f33, %f192, %f121;
	st.global.v2.u32 	[photonPayload+16], {%r43, %r42};
	and.b32  	%r46, %r42, 16777215;
	cvt.rn.f32.u32	%f193, %r46;
	div.approx.ftz.f32 	%f34, %f193, %f121;
	lg2.approx.ftz.f32 	%f194, %f189;
	mul.ftz.f32 	%f195, %f194, 0f3F317218;
	mul.ftz.f32 	%f196, %f195, 0fC0000000;
	sqrt.approx.ftz.f32 	%f35, %f196;
	cvt.ftz.f64.f32	%fd42, %f191;
	mul.f64 	%fd1, %fd42, 0d401921FB54442D18;
	abs.f64 	%fd2, %fd1;
	setp.neu.f64	%p17, %fd2, 0d7FF0000000000000;
	mov.f64 	%fd125, %fd1;
	@%p17 bra 	BB5_12;

	mov.f64 	%fd43, 0d0000000000000000;
	mul.rn.f64 	%fd3, %fd1, %fd43;
	mov.f64 	%fd125, %fd3;

BB5_12:
	mov.f64 	%fd4, %fd125;
	mul.f64 	%fd44, %fd4, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r65, %fd44;
	add.u64 	%rd16, %SP, 4;
	cvta.to.local.u64 	%rd17, %rd16;
	st.local.u32 	[%rd17], %r65;
	cvt.rn.f64.s32	%fd45, %r65;
	neg.f64 	%fd46, %fd45;
	mov.f64 	%fd47, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd48, %fd46, %fd47, %fd4;
	mov.f64 	%fd49, 0d3C91A62633145C00;
	fma.rn.f64 	%fd50, %fd46, %fd49, %fd48;
	mov.f64 	%fd51, 0d397B839A252049C0;
	fma.rn.f64 	%fd121, %fd46, %fd51, %fd50;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r47}, %fd4;
	}
	and.b32  	%r48, %r47, 2145386496;
	setp.lt.u32	%p18, %r48, 1105199104;
	@%p18 bra 	BB5_14;

	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd121, [retval0+0];
	
	//{
	}// Callseq End 0
	ld.local.u32 	%r65, [%rd17];

BB5_14:
	add.s32 	%r8, %r65, 1;
	and.b32  	%r49, %r8, 1;
	shl.b32 	%r50, %r49, 3;
	setp.eq.s32	%p19, %r49, 0;
	selp.f64	%fd52, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p19;
	mul.wide.u32 	%rd20, %r50, 8;
	mov.u64 	%rd21, __cudart_sin_cos_coeffs;
	add.s64 	%rd22, %rd20, %rd21;
	ld.const.f64 	%fd53, [%rd22+8];
	mul.rn.f64 	%fd8, %fd121, %fd121;
	fma.rn.f64 	%fd54, %fd52, %fd8, %fd53;
	ld.const.f64 	%fd55, [%rd22+16];
	fma.rn.f64 	%fd56, %fd54, %fd8, %fd55;
	ld.const.f64 	%fd57, [%rd22+24];
	fma.rn.f64 	%fd58, %fd56, %fd8, %fd57;
	ld.const.f64 	%fd59, [%rd22+32];
	fma.rn.f64 	%fd60, %fd58, %fd8, %fd59;
	ld.const.f64 	%fd61, [%rd22+40];
	fma.rn.f64 	%fd62, %fd60, %fd8, %fd61;
	ld.const.f64 	%fd63, [%rd22+48];
	fma.rn.f64 	%fd9, %fd62, %fd8, %fd63;
	fma.rn.f64 	%fd122, %fd9, %fd121, %fd121;
	@%p19 bra 	BB5_16;

	mov.f64 	%fd64, 0d3FF0000000000000;
	fma.rn.f64 	%fd122, %fd9, %fd8, %fd64;

BB5_16:
	and.b32  	%r51, %r8, 2;
	setp.eq.s32	%p20, %r51, 0;
	@%p20 bra 	BB5_18;

	mov.f64 	%fd65, 0d0000000000000000;
	mov.f64 	%fd66, 0dBFF0000000000000;
	fma.rn.f64 	%fd122, %fd122, %fd66, %fd65;

BB5_18:
	mov.f64 	%fd124, %fd1;
	@%p17 bra 	BB5_20;

	mov.f64 	%fd67, 0d0000000000000000;
	mul.rn.f64 	%fd124, %fd1, %fd67;

BB5_20:
	mul.f64 	%fd68, %fd124, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r66, %fd68;
	add.u64 	%rd23, %SP, 8;
	cvta.to.local.u64 	%rd24, %rd23;
	st.local.u32 	[%rd24], %r66;
	cvt.rn.f64.s32	%fd69, %r66;
	neg.f64 	%fd70, %fd69;
	fma.rn.f64 	%fd72, %fd70, %fd47, %fd124;
	fma.rn.f64 	%fd74, %fd70, %fd49, %fd72;
	fma.rn.f64 	%fd126, %fd70, %fd51, %fd74;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r52}, %fd124;
	}
	and.b32  	%r53, %r52, 2145386496;
	setp.lt.u32	%p22, %r53, 1105199104;
	@%p22 bra 	BB5_22;

	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd124;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd23;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd126, [retval0+0];
	
	//{
	}// Callseq End 1
	ld.local.u32 	%r66, [%rd24];

BB5_22:
	and.b32  	%r54, %r66, 1;
	shl.b32 	%r55, %r54, 3;
	setp.eq.s32	%p23, %r54, 0;
	selp.f64	%fd76, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p23;
	mul.wide.u32 	%rd27, %r55, 8;
	add.s64 	%rd29, %rd27, %rd21;
	ld.const.f64 	%fd77, [%rd29+8];
	mul.rn.f64 	%fd20, %fd126, %fd126;
	fma.rn.f64 	%fd78, %fd76, %fd20, %fd77;
	ld.const.f64 	%fd79, [%rd29+16];
	fma.rn.f64 	%fd80, %fd78, %fd20, %fd79;
	ld.const.f64 	%fd81, [%rd29+24];
	fma.rn.f64 	%fd82, %fd80, %fd20, %fd81;
	ld.const.f64 	%fd83, [%rd29+32];
	fma.rn.f64 	%fd84, %fd82, %fd20, %fd83;
	ld.const.f64 	%fd85, [%rd29+40];
	fma.rn.f64 	%fd86, %fd84, %fd20, %fd85;
	ld.const.f64 	%fd87, [%rd29+48];
	fma.rn.f64 	%fd21, %fd86, %fd20, %fd87;
	fma.rn.f64 	%fd127, %fd21, %fd126, %fd126;
	@%p23 bra 	BB5_24;

	mov.f64 	%fd88, 0d3FF0000000000000;
	fma.rn.f64 	%fd127, %fd21, %fd20, %fd88;

BB5_24:
	and.b32  	%r56, %r66, 2;
	setp.eq.s32	%p24, %r56, 0;
	@%p24 bra 	BB5_26;

	mov.f64 	%fd89, 0d0000000000000000;
	mov.f64 	%fd90, 0dBFF0000000000000;
	fma.rn.f64 	%fd127, %fd127, %fd90, %fd89;

BB5_26:
	cvt.ftz.f64.f32	%fd91, %f35;
	mul.f64 	%fd92, %fd91, %fd122;
	cvt.rn.ftz.f32.f64	%f36, %fd92;
	mul.f64 	%fd27, %fd91, %fd127;
	lg2.approx.ftz.f32 	%f197, %f33;
	mul.ftz.f32 	%f198, %f197, 0f3F317218;
	mul.ftz.f32 	%f199, %f198, 0fC0000000;
	sqrt.approx.ftz.f32 	%f37, %f199;
	cvt.ftz.f64.f32	%fd93, %f34;
	mul.f64 	%fd128, %fd93, 0d401921FB54442D18;
	abs.f64 	%fd94, %fd128;
	setp.neu.f64	%p25, %fd94, 0d7FF0000000000000;
	@%p25 bra 	BB5_28;

	mov.f64 	%fd95, 0d0000000000000000;
	mul.rn.f64 	%fd128, %fd128, %fd95;

BB5_28:
	mul.f64 	%fd96, %fd128, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r67, %fd96;
	add.u64 	%rd30, %SP, 0;
	cvta.to.local.u64 	%rd31, %rd30;
	st.local.u32 	[%rd31], %r67;
	cvt.rn.f64.s32	%fd97, %r67;
	neg.f64 	%fd98, %fd97;
	fma.rn.f64 	%fd100, %fd98, %fd47, %fd128;
	fma.rn.f64 	%fd102, %fd98, %fd49, %fd100;
	fma.rn.f64 	%fd129, %fd98, %fd51, %fd102;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r57}, %fd128;
	}
	and.b32  	%r58, %r57, 2145386496;
	setp.lt.u32	%p26, %r58, 1105199104;
	@%p26 bra 	BB5_30;

	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd128;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd30;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd129, [retval0+0];
	
	//{
	}// Callseq End 2
	ld.local.u32 	%r67, [%rd31];

BB5_30:
	add.s32 	%r15, %r67, 1;
	and.b32  	%r59, %r15, 1;
	shl.b32 	%r60, %r59, 3;
	setp.eq.s32	%p27, %r59, 0;
	selp.f64	%fd104, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p27;
	mul.wide.u32 	%rd34, %r60, 8;
	add.s64 	%rd36, %rd34, %rd21;
	ld.const.f64 	%fd105, [%rd36+8];
	mul.rn.f64 	%fd34, %fd129, %fd129;
	fma.rn.f64 	%fd106, %fd104, %fd34, %fd105;
	ld.const.f64 	%fd107, [%rd36+16];
	fma.rn.f64 	%fd108, %fd106, %fd34, %fd107;
	ld.const.f64 	%fd109, [%rd36+24];
	fma.rn.f64 	%fd110, %fd108, %fd34, %fd109;
	ld.const.f64 	%fd111, [%rd36+32];
	fma.rn.f64 	%fd112, %fd110, %fd34, %fd111;
	ld.const.f64 	%fd113, [%rd36+40];
	fma.rn.f64 	%fd114, %fd112, %fd34, %fd113;
	ld.const.f64 	%fd115, [%rd36+48];
	fma.rn.f64 	%fd35, %fd114, %fd34, %fd115;
	fma.rn.f64 	%fd130, %fd35, %fd129, %fd129;
	@%p27 bra 	BB5_32;

	mov.f64 	%fd116, 0d3FF0000000000000;
	fma.rn.f64 	%fd130, %fd35, %fd34, %fd116;

BB5_32:
	and.b32  	%r61, %r15, 2;
	setp.eq.s32	%p28, %r61, 0;
	@%p28 bra 	BB5_34;

	mov.f64 	%fd117, 0d0000000000000000;
	mov.f64 	%fd118, 0dBFF0000000000000;
	fma.rn.f64 	%fd130, %fd130, %fd118, %fd117;

BB5_34:
	cvt.rn.ftz.f32.f64	%f200, %fd27;
	cvt.ftz.f64.f32	%fd119, %f37;
	mul.f64 	%fd120, %fd119, %fd130;
	cvt.rn.ftz.f32.f64	%f201, %fd120;
	mul.ftz.f32 	%f202, %f200, %f200;
	fma.rn.ftz.f32 	%f203, %f36, %f36, %f202;
	fma.rn.ftz.f32 	%f204, %f201, %f201, %f203;
	rsqrt.approx.ftz.f32 	%f205, %f204;
	mul.ftz.f32 	%f206, %f36, %f205;
	mul.ftz.f32 	%f207, %f200, %f205;
	mul.ftz.f32 	%f208, %f201, %f205;
	setp.lt.ftz.f32	%p29, %f208, 0f00000000;
	neg.ftz.f32 	%f209, %f208;
	selp.f32	%f210, %f209, %f208, %p29;
	mul.ftz.f32 	%f211, %f30, %f207;
	mul.ftz.f32 	%f212, %f31, %f207;
	mul.ftz.f32 	%f213, %f32, %f207;
	fma.rn.ftz.f32 	%f214, %f27, %f206, %f211;
	fma.rn.ftz.f32 	%f215, %f28, %f206, %f212;
	fma.rn.ftz.f32 	%f216, %f29, %f206, %f213;
	fma.rn.ftz.f32 	%f217, %f7, %f210, %f214;
	fma.rn.ftz.f32 	%f218, %f8, %f210, %f215;
	fma.rn.ftz.f32 	%f219, %f9, %f210, %f216;
	mul.ftz.f32 	%f220, %f218, %f218;
	fma.rn.ftz.f32 	%f221, %f217, %f217, %f220;
	fma.rn.ftz.f32 	%f222, %f219, %f219, %f221;
	rsqrt.approx.ftz.f32 	%f223, %f222;
	mul.ftz.f32 	%f263, %f223, %f217;
	mul.ftz.f32 	%f262, %f223, %f218;
	mul.ftz.f32 	%f261, %f223, %f219;
	setp.lt.ftz.f32	%p30, %f21, %f10;
	@%p30 bra 	BB5_36;
	bra.uni 	BB5_35;

BB5_36:
	rcp.approx.ftz.f32 	%f238, %f10;
	ld.global.f32 	%f239, [Kd];
	mul.ftz.f32 	%f240, %f238, %f239;
	ld.global.f32 	%f241, [Kd+4];
	mul.ftz.f32 	%f242, %f238, %f241;
	ld.global.f32 	%f243, [Kd+8];
	mul.ftz.f32 	%f244, %f238, %f243;
	ld.global.v2.f32 	{%f245, %f246}, [photonPayload];
	mul.ftz.f32 	%f248, %f242, %f246;
	mul.ftz.f32 	%f250, %f240, %f245;
	ld.global.f32 	%f251, [photonPayload+8];
	st.global.v2.f32 	[photonPayload], {%f250, %f248};
	mul.ftz.f32 	%f260, %f244, %f251;
	bra.uni 	BB5_37;

BB5_6:
	add.ftz.f32 	%f122, %f20, %f19;
	setp.geu.ftz.f32	%p14, %f21, %f122;
	@%p14 bra 	BB5_38;

	setp.lt.ftz.f32	%p15, %f21, %f20;
	@%p15 bra 	BB5_9;
	bra.uni 	BB5_8;

BB5_9:
	add.ftz.f32 	%f134, %f7, %f7;
	mul.ftz.f32 	%f135, %f262, %f8;
	fma.rn.ftz.f32 	%f136, %f263, %f7, %f135;
	fma.rn.ftz.f32 	%f137, %f261, %f9, %f136;
	mul.ftz.f32 	%f138, %f134, %f137;
	add.ftz.f32 	%f139, %f8, %f8;
	mul.ftz.f32 	%f140, %f139, %f137;
	add.ftz.f32 	%f141, %f9, %f9;
	mul.ftz.f32 	%f142, %f141, %f137;
	sub.ftz.f32 	%f263, %f263, %f138;
	sub.ftz.f32 	%f262, %f262, %f140;
	sub.ftz.f32 	%f261, %f261, %f142;
	rcp.approx.ftz.f32 	%f143, %f15;
	mul.ftz.f32 	%f144, %f143, %f13;
	mul.ftz.f32 	%f145, %f143, %f12;
	mul.ftz.f32 	%f146, %f143, %f14;
	ld.global.v2.f32 	{%f147, %f148}, [photonPayload];
	mul.ftz.f32 	%f150, %f145, %f148;
	mul.ftz.f32 	%f152, %f144, %f147;
	ld.global.f32 	%f153, [photonPayload+8];
	st.global.v2.f32 	[photonPayload], {%f152, %f150};
	mul.ftz.f32 	%f260, %f146, %f153;
	bra.uni 	BB5_37;

BB5_35:
	neg.ftz.f32 	%f263, %f263;
	neg.ftz.f32 	%f262, %f262;
	neg.ftz.f32 	%f261, %f261;
	ld.global.f32 	%f224, [Td];
	rcp.approx.ftz.f32 	%f225, %f11;
	mul.ftz.f32 	%f226, %f225, %f224;
	ld.global.f32 	%f227, [Td+4];
	mul.ftz.f32 	%f228, %f225, %f227;
	ld.global.f32 	%f229, [Td+8];
	mul.ftz.f32 	%f230, %f225, %f229;
	ld.global.v2.f32 	{%f231, %f232}, [photonPayload];
	mul.ftz.f32 	%f234, %f228, %f232;
	mul.ftz.f32 	%f236, %f226, %f231;
	ld.global.f32 	%f237, [photonPayload+8];
	st.global.v2.f32 	[photonPayload], {%f236, %f234};
	mul.ftz.f32 	%f260, %f230, %f237;
	bra.uni 	BB5_37;

BB5_8:
	st.global.u32 	[photonPayload+32], %r3;
	rcp.approx.ftz.f32 	%f123, %f19;
	mul.ftz.f32 	%f124, %f123, %f17;
	mul.ftz.f32 	%f125, %f123, %f16;
	mul.ftz.f32 	%f126, %f123, %f18;
	ld.global.v2.f32 	{%f127, %f128}, [photonPayload];
	mul.ftz.f32 	%f130, %f125, %f128;
	mul.ftz.f32 	%f132, %f124, %f127;
	ld.global.f32 	%f133, [photonPayload+8];
	st.global.v2.f32 	[photonPayload], {%f132, %f130};
	mul.ftz.f32 	%f260, %f126, %f133;

BB5_37:
	mov.u64 	%rd38, photonPayload;
	st.global.f32 	[photonPayload+8], %f260;
	ld.global.u32 	%r63, [photonRayType];
	ld.global.f32 	%f258, [sceneEpsilon];
	ld.global.u32 	%r62, [topObject];
	cvta.global.u64 	%rd37, %rd38;
	mov.f32 	%f259, 0f6C4ECB8F;
	mov.u32 	%r64, 40;
	// inline asm
	call _rt_trace_64, (%r62, %f4, %f5, %f6, %f263, %f262, %f261, %r63, %f258, %f259, %rd37, %r64);
	// inline asm

BB5_38:
	ret;
}

	// .globl	_Z11skyPassMissv
.visible .entry _Z11skyPassMissv(

)
{
	.local .align 4 .b8 	__local_depot6[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<22>;
	.reg .f32 	%f<89>;
	.reg .b32 	%r<32>;
	.reg .f64 	%fd<153>;
	.reg .b64 	%rd<34>;


	mov.u64 	%rd33, __local_depot6;
	cvta.local.u64 	%SP, %rd33;
	add.u64 	%rd3, %SP, 8;
	cvta.to.local.u64 	%rd1, %rd3;
	add.u64 	%rd4, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd4;
	mov.u64 	%rd5, skyPayload;
	add.s64 	%rd6, %rd5, 32;
	ldu.global.u32 	%r10, [%rd6];
	setp.eq.s32	%p1, %r10, 0;
	@%p1 bra 	BB6_35;

	add.s64 	%rd8, %rd5, 24;
	ldu.global.f32 	%f1, [%rd8];
	cvt.ftz.f64.f32	%fd1, %f1;
	setp.geu.f64	%p2, %fd1, 0d3FF921FB54442D18;
	@%p2 bra 	BB6_36;

	ldu.global.v2.f32 	{%f6, %f7}, [sunAngles];
	cos.approx.ftz.f32 	%f8, %f6;
	cos.approx.ftz.f32 	%f3, %f1;
	sin.approx.ftz.f32 	%f9, %f6;
	sin.approx.ftz.f32 	%f10, %f1;
	mul.ftz.f32 	%f11, %f9, %f10;
	add.s64 	%rd10, %rd5, 28;
	ldu.global.f32 	%f13, [%rd10];
	sub.ftz.f32 	%f14, %f13, %f7;
	abs.ftz.f32 	%f15, %f14;
	cos.approx.ftz.f32 	%f16, %f15;
	mul.ftz.f32 	%f17, %f11, %f16;
	fma.rn.ftz.f32 	%f18, %f8, %f3, %f17;
	abs.ftz.f32 	%f19, %f18;
	mov.f32 	%f20, 0f3F800000;
	sub.ftz.f32 	%f21, %f20, %f19;
	mul.ftz.f32 	%f22, %f21, 0f3F000000;
	sqrt.approx.ftz.f32 	%f23, %f22;
	setp.gt.ftz.f32	%p3, %f19, 0f3F11EB85;
	selp.f32	%f24, %f23, %f19, %p3;
	mul.ftz.f32 	%f25, %f24, %f24;
	mov.f32 	%f26, 0f3C94D2E9;
	mov.f32 	%f27, 0f3D53F941;
	fma.rn.ftz.f32 	%f28, %f27, %f25, %f26;
	mov.f32 	%f29, 0f3D3F841F;
	fma.rn.ftz.f32 	%f30, %f28, %f25, %f29;
	mov.f32 	%f31, 0f3D994929;
	fma.rn.ftz.f32 	%f32, %f30, %f25, %f31;
	mov.f32 	%f33, 0f3E2AAB94;
	fma.rn.ftz.f32 	%f34, %f32, %f25, %f33;
	mul.ftz.f32 	%f35, %f25, %f34;
	fma.rn.ftz.f32 	%f36, %f35, %f24, %f24;
	add.ftz.f32 	%f37, %f36, %f36;
	mov.f32 	%f38, 0f3FC90FDB;
	sub.ftz.f32 	%f39, %f38, %f36;
	selp.f32	%f40, %f37, %f39, %p3;
	setp.lt.ftz.f32	%p4, %f18, 0f00000000;
	mov.f32 	%f41, 0f40490FDB;
	sub.ftz.f32 	%f42, %f41, %f40;
	selp.f32	%f4, %f42, %f40, %p4;
	ldu.global.u32 	%r11, [skyType];
	setp.gt.s32	%p5, %r11, 1;
	@%p5 bra 	BB6_6;

	setp.eq.s32	%p8, %r11, 0;
	@%p8 bra 	BB6_34;
	bra.uni 	BB6_4;

BB6_34:
	mov.f32 	%f67, 0fBEA3D70A;
	div.approx.ftz.f32 	%f68, %f67, %f3;
	mul.ftz.f32 	%f69, %f68, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f70, %f69;
	sub.ftz.f32 	%f72, %f20, %f70;
	mul.ftz.f32 	%f73, %f4, 0fC0400000;
	mul.ftz.f32 	%f74, %f73, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f75, %f74;
	mul.ftz.f32 	%f76, %f75, 0f41200000;
	cvt.ftz.f64.f32	%fd140, %f76;
	add.f64 	%fd141, %fd140, 0d3FED1EB851EB851F;
	cos.approx.ftz.f32 	%f77, %f4;
	mul.ftz.f32 	%f78, %f77, 0f3EE66666;
	mul.ftz.f32 	%f79, %f77, %f78;
	cvt.ftz.f64.f32	%fd142, %f79;
	add.f64 	%fd143, %fd141, %fd142;
	cvt.rn.ftz.f32.f64	%f80, %fd143;
	mul.ftz.f32 	%f81, %f72, %f80;
	st.global.v2.f32 	[skyPayload], {%f81, %f81};
	st.global.f32 	[skyPayload+8], %f81;
	bra.uni 	BB6_36;

BB6_35:
	mov.u64 	%rd32, dirLightBuffer;
	cvta.global.u64 	%rd27, %rd32;
	mov.u32 	%r27, 1;
	mov.u32 	%r28, 28;
	mov.u64 	%rd31, 0;
	// inline asm
	call (%rd26), _rt_buffer_get_64, (%rd27, %r27, %r28, %rd31, %rd31, %rd31, %rd31);
	// inline asm
	ld.f32 	%f82, [%rd26+12];
	ld.f32 	%f83, [%rd26+24];
	ld.f32 	%f84, [%rd26+16];
	ld.f32 	%f85, [%rd26+20];
	mul.ftz.f32 	%f86, %f83, %f85;
	mul.ftz.f32 	%f87, %f83, %f84;
	mul.ftz.f32 	%f88, %f83, %f82;
	st.global.v2.f32 	[skyPayload], {%f88, %f87};
	st.global.f32 	[skyPayload+8], %f86;
	bra.uni 	BB6_36;

BB6_6:
	setp.eq.s32	%p6, %r11, 2;
	@%p6 bra 	BB6_17;
	bra.uni 	BB6_7;

BB6_17:
	cvt.ftz.f64.f32	%fd70, %f6;
	mov.f64 	%fd71, 0d3FF921FB54442D18;
	sub.f64 	%fd72, %fd71, %fd70;
	cvt.rn.ftz.f32.f64	%f5, %fd72;
	sub.f64 	%fd73, %fd71, %fd1;
	cvt.rn.ftz.f32.f64	%f44, %fd73;
	cvt.ftz.f64.f32	%fd15, %f44;
	fma.rn.f64 	%fd147, %fd15, 0d400CB851EB851EB8, 0dBF826E978D4FDF3B;
	abs.f64 	%fd74, %fd147;
	setp.neu.f64	%p14, %fd74, 0d7FF0000000000000;
	@%p14 bra 	BB6_19;

	mov.f64 	%fd75, 0d0000000000000000;
	mul.rn.f64 	%fd147, %fd147, %fd75;

BB6_19:
	mul.f64 	%fd76, %fd147, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r30, %fd76;
	st.local.u32 	[%rd2], %r30;
	cvt.rn.f64.s32	%fd77, %r30;
	neg.f64 	%fd78, %fd77;
	fma.rn.f64 	%fd80, %fd78, %fd71, %fd147;
	mov.f64 	%fd81, 0d3C91A62633145C00;
	fma.rn.f64 	%fd82, %fd78, %fd81, %fd80;
	mov.f64 	%fd83, 0d397B839A252049C0;
	fma.rn.f64 	%fd148, %fd78, %fd83, %fd82;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r17}, %fd147;
	}
	and.b32  	%r18, %r17, 2145386496;
	setp.lt.u32	%p15, %r18, 1105199104;
	@%p15 bra 	BB6_21;

	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd147;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd4;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd148, [retval0+0];
	
	//{
	}// Callseq End 4
	ld.local.u32 	%r30, [%rd2];

BB6_21:
	and.b32  	%r19, %r30, 1;
	shl.b32 	%r20, %r19, 3;
	setp.eq.s32	%p16, %r19, 0;
	selp.f64	%fd84, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p16;
	mul.wide.u32 	%rd19, %r20, 8;
	mov.u64 	%rd20, __cudart_sin_cos_coeffs;
	add.s64 	%rd21, %rd19, %rd20;
	ld.const.f64 	%fd85, [%rd21+8];
	mul.rn.f64 	%fd22, %fd148, %fd148;
	fma.rn.f64 	%fd86, %fd84, %fd22, %fd85;
	ld.const.f64 	%fd87, [%rd21+16];
	fma.rn.f64 	%fd88, %fd86, %fd22, %fd87;
	ld.const.f64 	%fd89, [%rd21+24];
	fma.rn.f64 	%fd90, %fd88, %fd22, %fd89;
	ld.const.f64 	%fd91, [%rd21+32];
	fma.rn.f64 	%fd92, %fd90, %fd22, %fd91;
	ld.const.f64 	%fd93, [%rd21+40];
	fma.rn.f64 	%fd94, %fd92, %fd22, %fd93;
	ld.const.f64 	%fd95, [%rd21+48];
	fma.rn.f64 	%fd23, %fd94, %fd22, %fd95;
	fma.rn.f64 	%fd149, %fd23, %fd148, %fd148;
	@%p16 bra 	BB6_23;

	mov.f64 	%fd96, 0d3FF0000000000000;
	fma.rn.f64 	%fd149, %fd23, %fd22, %fd96;

BB6_23:
	and.b32  	%r21, %r30, 2;
	setp.eq.s32	%p17, %r21, 0;
	@%p17 bra 	BB6_25;

	mov.f64 	%fd97, 0d0000000000000000;
	mov.f64 	%fd98, 0dBFF0000000000000;
	fma.rn.f64 	%fd149, %fd149, %fd98, %fd97;

BB6_25:
	mul.ftz.f32 	%f45, %f5, 0f40266666;
	cvt.ftz.f64.f32	%fd99, %f45;
	add.f64 	%fd150, %fd99, 0d3FD4395810624DD3;
	abs.f64 	%fd100, %fd150;
	setp.neu.f64	%p18, %fd100, 0d7FF0000000000000;
	@%p18 bra 	BB6_27;

	mov.f64 	%fd101, 0d0000000000000000;
	mul.rn.f64 	%fd150, %fd150, %fd101;

BB6_27:
	mul.f64 	%fd102, %fd150, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r31, %fd102;
	st.local.u32 	[%rd1], %r31;
	cvt.rn.f64.s32	%fd103, %r31;
	neg.f64 	%fd104, %fd103;
	fma.rn.f64 	%fd106, %fd104, %fd71, %fd150;
	fma.rn.f64 	%fd108, %fd104, %fd81, %fd106;
	fma.rn.f64 	%fd151, %fd104, %fd83, %fd108;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r22}, %fd150;
	}
	and.b32  	%r23, %r22, 2145386496;
	setp.lt.u32	%p19, %r23, 1105199104;
	@%p19 bra 	BB6_29;

	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd150;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd151, [retval0+0];
	
	//{
	}// Callseq End 5
	ld.local.u32 	%r31, [%rd1];

BB6_29:
	and.b32  	%r24, %r31, 1;
	shl.b32 	%r25, %r24, 3;
	setp.eq.s32	%p20, %r24, 0;
	selp.f64	%fd110, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p20;
	mul.wide.u32 	%rd23, %r25, 8;
	add.s64 	%rd25, %rd23, %rd20;
	ld.const.f64 	%fd111, [%rd25+8];
	mul.rn.f64 	%fd35, %fd151, %fd151;
	fma.rn.f64 	%fd112, %fd110, %fd35, %fd111;
	ld.const.f64 	%fd113, [%rd25+16];
	fma.rn.f64 	%fd114, %fd112, %fd35, %fd113;
	ld.const.f64 	%fd115, [%rd25+24];
	fma.rn.f64 	%fd116, %fd114, %fd35, %fd115;
	ld.const.f64 	%fd117, [%rd25+32];
	fma.rn.f64 	%fd118, %fd116, %fd35, %fd117;
	ld.const.f64 	%fd119, [%rd25+40];
	fma.rn.f64 	%fd120, %fd118, %fd35, %fd119;
	ld.const.f64 	%fd121, [%rd25+48];
	fma.rn.f64 	%fd36, %fd120, %fd35, %fd121;
	fma.rn.f64 	%fd152, %fd36, %fd151, %fd151;
	@%p20 bra 	BB6_31;

	mov.f64 	%fd122, 0d3FF0000000000000;
	fma.rn.f64 	%fd152, %fd36, %fd35, %fd122;

BB6_31:
	and.b32  	%r26, %r31, 2;
	setp.eq.s32	%p21, %r26, 0;
	@%p21 bra 	BB6_33;

	mov.f64 	%fd123, 0d0000000000000000;
	mov.f64 	%fd124, 0dBFF0000000000000;
	fma.rn.f64 	%fd152, %fd152, %fd124, %fd123;

BB6_33:
	add.f64 	%fd125, %fd149, 0d40027AE140000000;
	mul.f64 	%fd126, %fd125, 0d3FF599999999999A;
	add.f64 	%fd127, %fd15, %fd152;
	add.f64 	%fd128, %fd127, 0d4013322D00000000;
	mul.f64 	%fd129, %fd126, %fd128;
	div.rn.f64 	%fd130, %fd129, 0d40029BA5E353F7CF;
	cvt.rn.ftz.f32.f64	%f46, %fd130;
	cvt.ftz.f64.f32	%fd131, %f5;
	add.f64 	%fd132, %fd131, 0dBF80624DD2F1A9FC;
	add.f64 	%fd133, %fd15, 0d3FF0F1A9FBE76C8B;
	fma.rn.f64 	%fd134, %fd132, %fd133, 0d3FE9FBE76C8B4396;
	mul.f64 	%fd135, %fd134, 0dBFE20418A0000000;
	cvt.rn.ftz.f32.f64	%f47, %fd135;
	mul.ftz.f32 	%f48, %f4, %f47;
	mul.ftz.f32 	%f49, %f48, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f50, %f49;
	mul.ftz.f32 	%f51, %f46, %f50;
	st.global.v2.f32 	[skyPayload], {%f51, %f51};
	st.global.f32 	[skyPayload+8], %f51;
	bra.uni 	BB6_36;

BB6_4:
	setp.eq.s32	%p9, %r11, 1;
	@%p9 bra 	BB6_5;
	bra.uni 	BB6_36;

BB6_5:
	mov.f32 	%f52, 0fBEA3D70A;
	div.approx.ftz.f32 	%f53, %f52, %f3;
	mul.ftz.f32 	%f54, %f53, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f55, %f54;
	sub.ftz.f32 	%f57, %f20, %f55;
	mul.ftz.f32 	%f58, %f4, 0fC0400000;
	mul.ftz.f32 	%f59, %f58, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f60, %f59;
	mul.ftz.f32 	%f61, %f60, 0f41800000;
	cvt.ftz.f64.f32	%fd136, %f61;
	add.f64 	%fd137, %fd136, 0d3FEB645A1CAC0831;
	cos.approx.ftz.f32 	%f62, %f4;
	mul.ftz.f32 	%f63, %f62, 0f3E99999A;
	mul.ftz.f32 	%f64, %f62, %f63;
	cvt.ftz.f64.f32	%fd138, %f64;
	add.f64 	%fd139, %fd137, %fd138;
	cvt.rn.ftz.f32.f64	%f65, %fd139;
	mul.ftz.f32 	%f66, %f57, %f65;
	st.global.v2.f32 	[skyPayload], {%f66, %f66};
	st.global.f32 	[skyPayload+8], %f66;
	bra.uni 	BB6_36;

BB6_7:
	setp.ne.s32	%p7, %r11, 3;
	@%p7 bra 	BB6_36;

	mov.f64 	%fd42, 0d3FF921FB54442D18;
	sub.f64 	%fd144, %fd42, %fd1;
	abs.f64 	%fd43, %fd144;
	setp.neu.f64	%p10, %fd43, 0d7FF0000000000000;
	@%p10 bra 	BB6_10;

	mov.f64 	%fd44, 0d0000000000000000;
	mul.rn.f64 	%fd144, %fd144, %fd44;

BB6_10:
	mul.f64 	%fd45, %fd144, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r29, %fd45;
	add.u64 	%rd11, %SP, 4;
	cvta.to.local.u64 	%rd12, %rd11;
	st.local.u32 	[%rd12], %r29;
	cvt.rn.f64.s32	%fd46, %r29;
	neg.f64 	%fd47, %fd46;
	fma.rn.f64 	%fd49, %fd47, %fd42, %fd144;
	mov.f64 	%fd50, 0d3C91A62633145C00;
	fma.rn.f64 	%fd51, %fd47, %fd50, %fd49;
	mov.f64 	%fd52, 0d397B839A252049C0;
	fma.rn.f64 	%fd145, %fd47, %fd52, %fd51;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r12}, %fd144;
	}
	and.b32  	%r13, %r12, 2145386496;
	setp.lt.u32	%p11, %r13, 1105199104;
	@%p11 bra 	BB6_12;

	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd144;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd11;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd145, [retval0+0];
	
	//{
	}// Callseq End 3
	ld.local.u32 	%r29, [%rd12];

BB6_12:
	and.b32  	%r14, %r29, 1;
	shl.b32 	%r15, %r14, 3;
	setp.eq.s32	%p12, %r14, 0;
	selp.f64	%fd53, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p12;
	mul.wide.u32 	%rd15, %r15, 8;
	mov.u64 	%rd16, __cudart_sin_cos_coeffs;
	add.s64 	%rd17, %rd15, %rd16;
	ld.const.f64 	%fd54, [%rd17+8];
	mul.rn.f64 	%fd8, %fd145, %fd145;
	fma.rn.f64 	%fd55, %fd53, %fd8, %fd54;
	ld.const.f64 	%fd56, [%rd17+16];
	fma.rn.f64 	%fd57, %fd55, %fd8, %fd56;
	ld.const.f64 	%fd58, [%rd17+24];
	fma.rn.f64 	%fd59, %fd57, %fd8, %fd58;
	ld.const.f64 	%fd60, [%rd17+32];
	fma.rn.f64 	%fd61, %fd59, %fd8, %fd60;
	ld.const.f64 	%fd62, [%rd17+40];
	fma.rn.f64 	%fd63, %fd61, %fd8, %fd62;
	ld.const.f64 	%fd64, [%rd17+48];
	fma.rn.f64 	%fd9, %fd63, %fd8, %fd64;
	fma.rn.f64 	%fd146, %fd9, %fd145, %fd145;
	@%p12 bra 	BB6_14;

	mov.f64 	%fd65, 0d3FF0000000000000;
	fma.rn.f64 	%fd146, %fd9, %fd8, %fd65;

BB6_14:
	and.b32  	%r16, %r29, 2;
	setp.eq.s32	%p13, %r16, 0;
	@%p13 bra 	BB6_16;

	mov.f64 	%fd66, 0d0000000000000000;
	mov.f64 	%fd67, 0dBFF0000000000000;
	fma.rn.f64 	%fd146, %fd146, %fd67, %fd66;

BB6_16:
	fma.rn.f64 	%fd68, %fd146, 0d4000000000000000, 0d3FF0000000000000;
	div.rn.f64 	%fd69, %fd68, 0d4008000000000000;
	cvt.rn.ftz.f32.f64	%f43, %fd69;
	st.global.v2.f32 	[skyPayload], {%f43, %f43};
	st.global.f32 	[skyPayload+8], %f43;

BB6_36:
	ret;
}

	// .globl	_Z17skyPassClosestHitv
.visible .entry _Z17skyPassClosestHitv(

)
{
	.local .align 8 .b8 	__local_depot7[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .f32 	%f<97>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<29>;


	mov.u64 	%rd28, __local_depot7;
	cvta.local.u64 	%SP, %rd28;
	ldu.global.f32 	%f27, [hitT];
	ld.global.f32 	%f28, [currentRay+20];
	ld.global.f32 	%f29, [currentRay+16];
	mov.u64 	%rd5, currentRay;
	ld.global.f32 	%f30, [currentRay+12];
	ldu.global.f32 	%f31, [currentRay];
	fma.rn.ftz.f32 	%f1, %f30, %f27, %f31;
	add.s64 	%rd6, %rd5, 4;
	ldu.global.f32 	%f32, [%rd6];
	fma.rn.ftz.f32 	%f2, %f29, %f27, %f32;
	add.s64 	%rd7, %rd5, 8;
	ldu.global.f32 	%f33, [%rd7];
	fma.rn.ftz.f32 	%f3, %f28, %f27, %f33;
	ldu.global.f32 	%f15, [shadingNormal];
	mov.u64 	%rd8, shadingNormal;
	add.s64 	%rd9, %rd8, 4;
	ldu.global.f32 	%f16, [%rd9];
	add.s64 	%rd10, %rd8, 8;
	ldu.global.f32 	%f17, [%rd10];
	mov.u32 	%r5, 7937;
	mov.f32 	%f26, 0f00000000;
	// inline asm
	call (%f11, %f12, %f13, %f14), _rt_transform_tuple, (%r5, %f15, %f16, %f17, %f26);
	// inline asm
	mul.ftz.f32 	%f34, %f12, %f12;
	fma.rn.ftz.f32 	%f35, %f11, %f11, %f34;
	fma.rn.ftz.f32 	%f36, %f13, %f13, %f35;
	rsqrt.approx.ftz.f32 	%f37, %f36;
	mul.ftz.f32 	%f38, %f11, %f37;
	mul.ftz.f32 	%f39, %f12, %f37;
	mul.ftz.f32 	%f40, %f13, %f37;
	ld.global.f32 	%f23, [geometricNormal];
	ld.global.f32 	%f24, [geometricNormal+4];
	ld.global.f32 	%f25, [geometricNormal+8];
	// inline asm
	call (%f19, %f20, %f21, %f22), _rt_transform_tuple, (%r5, %f23, %f24, %f25, %f26);
	// inline asm
	mul.ftz.f32 	%f41, %f20, %f20;
	fma.rn.ftz.f32 	%f42, %f19, %f19, %f41;
	fma.rn.ftz.f32 	%f43, %f21, %f21, %f42;
	rsqrt.approx.ftz.f32 	%f44, %f43;
	mul.ftz.f32 	%f45, %f19, %f44;
	mul.ftz.f32 	%f46, %f20, %f44;
	mul.ftz.f32 	%f47, %f21, %f44;
	mul.ftz.f32 	%f48, %f30, %f45;
	mul.ftz.f32 	%f49, %f29, %f46;
	neg.ftz.f32 	%f50, %f49;
	sub.ftz.f32 	%f51, %f50, %f48;
	mul.ftz.f32 	%f52, %f28, %f47;
	sub.ftz.f32 	%f53, %f51, %f52;
	mov.b32 	 %r6, %f53;
	and.b32  	%r7, %r6, -2147483648;
	or.b32  	%r8, %r7, 1065353216;
	mov.b32 	 %f54, %r8;
	mul.ftz.f32 	%f4, %f38, %f54;
	mul.ftz.f32 	%f5, %f39, %f54;
	mul.ftz.f32 	%f6, %f40, %f54;
	ld.global.f32 	%f55, [Kd+4];
	ld.global.f32 	%f56, [Kd];
	max.ftz.f32 	%f57, %f56, %f55;
	ld.global.f32 	%f58, [Kd+8];
	max.ftz.f32 	%f59, %f57, %f58;
	setp.leu.ftz.f32	%p1, %f59, 0f00000000;
	@%p1 bra 	BB7_6;

	mov.u64 	%rd16, dirLightBuffer;
	cvta.global.u64 	%rd15, %rd16;
	mov.u32 	%r9, 1;
	mov.u32 	%r10, 28;
	// inline asm
	call (%rd11, %rd12, %rd13, %rd14), _rt_buffer_get_size_64, (%rd15, %r9, %r10);
	// inline asm
	cvt.u32.u64	%r18, %rd11;
	setp.eq.s32	%p2, %r18, 0;
	@%p2 bra 	BB7_6;

	cvt.s64.s32 	%rd17, %rd11;
	add.s64 	%rd27, %rd17, -1;

BB7_3:
	mov.u32 	%r2, %r18;
	add.s32 	%r18, %r2, -1;
	mov.u64 	%rd23, 0;
	// inline asm
	call (%rd18), _rt_buffer_get_64, (%rd15, %r9, %r10, %rd27, %rd23, %rd23, %rd23);
	// inline asm
	ld.global.f32 	%f7, [sunDirection];
	mul.ftz.f32 	%f60, %f4, %f7;
	ld.global.f32 	%f8, [sunDirection+4];
	mul.ftz.f32 	%f61, %f5, %f8;
	neg.ftz.f32 	%f62, %f61;
	sub.ftz.f32 	%f63, %f62, %f60;
	ld.global.f32 	%f9, [sunDirection+8];
	mul.ftz.f32 	%f64, %f6, %f9;
	sub.ftz.f32 	%f10, %f63, %f64;
	setp.leu.ftz.f32	%p3, %f10, 0f00000000;
	@%p3 bra 	BB7_5;

	add.u64 	%rd25, %SP, 0;
	cvta.to.local.u64 	%rd26, %rd25;
	mov.f32 	%f73, 0f3F800000;
	st.local.v2.f32 	[%rd26], {%f73, %f73};
	mov.u32 	%r16, 1065353216;
	add.s32 	%r17, %r2, -1;
	st.local.v2.u32 	[%rd26+8], {%r16, %r17};
	ld.global.u32 	%r14, [shadowRayType];
	ld.global.f32 	%f71, [sceneEpsilon];
	ld.global.u32 	%r13, [topShadower];
	neg.ftz.f32 	%f70, %f9;
	neg.ftz.f32 	%f69, %f8;
	neg.ftz.f32 	%f68, %f7;
	mov.f32 	%f72, 0f6C4ECB8F;
	mov.u32 	%r15, 16;
	// inline asm
	call _rt_trace_64, (%r13, %f1, %f2, %f3, %f68, %f69, %f70, %r14, %f71, %f72, %rd25, %r15);
	// inline asm
	ld.global.f32 	%f74, [Kd];
	mul.ftz.f32 	%f75, %f10, %f74;
	ld.global.f32 	%f76, [Kd+4];
	mul.ftz.f32 	%f77, %f10, %f76;
	ld.global.f32 	%f78, [Kd+8];
	mul.ftz.f32 	%f79, %f10, %f78;
	ld.global.f32 	%f80, [sunBrightness];
	mul.ftz.f32 	%f81, %f75, %f80;
	mul.ftz.f32 	%f82, %f77, %f80;
	mul.ftz.f32 	%f83, %f79, %f80;
	ld.local.v2.f32 	{%f84, %f85}, [%rd26];
	ld.local.f32 	%f88, [%rd26+8];
	ld.global.v2.f32 	{%f89, %f90}, [skyPayload];
	fma.rn.ftz.f32 	%f92, %f82, %f85, %f90;
	fma.rn.ftz.f32 	%f94, %f81, %f84, %f89;
	ld.global.f32 	%f95, [skyPayload+8];
	st.global.v2.f32 	[skyPayload], {%f94, %f92};
	fma.rn.ftz.f32 	%f96, %f83, %f88, %f95;
	st.global.f32 	[skyPayload+8], %f96;

BB7_5:
	add.s64 	%rd27, %rd27, -1;
	setp.ne.s32	%p4, %r18, 0;
	@%p4 bra 	BB7_3;

BB7_6:
	ret;
}

.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
{
	.local .align 8 .b8 	__local_depot8[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .b32 	%r<42>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<101>;


	mov.u64 	%rd100, __local_depot8;
	cvta.local.u64 	%SP, %rd100;
	ld.param.f64 	%fd4, [__internal_trig_reduction_slowpathd_param_0];
	ld.param.u64 	%rd37, [__internal_trig_reduction_slowpathd_param_1];
	add.u64 	%rd38, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd38;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd4;
	}
	and.b32  	%r40, %r1, -2147483648;
	shr.u32 	%r3, %r1, 20;
	bfe.u32 	%r4, %r1, 20, 11;
	setp.eq.s32	%p1, %r4, 2047;
	@%p1 bra 	BB8_13;

	add.s32 	%r16, %r4, -1024;
	shr.u32 	%r17, %r16, 6;
	mov.u32 	%r18, 16;
	sub.s32 	%r5, %r18, %r17;
	mov.u32 	%r19, 19;
	sub.s32 	%r20, %r19, %r17;
	mov.u32 	%r21, 18;
	min.s32 	%r6, %r21, %r20;
	setp.gt.s32	%p2, %r5, %r6;
	mov.u64 	%rd94, 0;
	mov.u64 	%rd93, %rd1;
	@%p2 bra 	BB8_4;

	mov.b64 	 %rd41, %fd4;
	shl.b64 	%rd42, %rd41, 11;
	or.b64  	%rd3, %rd42, -9223372036854775808;
	add.s32 	%r7, %r5, -1;
	mov.u64 	%rd92, %rd1;
	bfe.u32 	%r22, %r1, 20, 11;
	add.s32 	%r23, %r22, -1024;
	shr.u32 	%r24, %r23, 6;
	neg.s32 	%r25, %r24;
	mul.wide.s32 	%rd43, %r25, 8;
	mov.u64 	%rd44, __cudart_i2opi_d;
	add.s64 	%rd45, %rd43, %rd44;
	add.s64 	%rd90, %rd45, 120;
	mov.u64 	%rd94, 0;
	mov.u64 	%rd91, %rd1;
	mov.u32 	%r39, %r7;

BB8_3:
	.pragma "nounroll";
	mov.u32 	%r8, %r39;
	mov.u64 	%rd7, %rd91;
	ld.const.u64 	%rd48, [%rd90];
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi, clo, chi;
	mov.b64         {alo,ahi}, %rd48;    
	mov.b64         {blo,bhi}, %rd3;    
	mov.b64         {clo,chi}, %rd94;    
	mad.lo.cc.u32   r0, alo, blo, clo;
	madc.hi.cc.u32  r1, alo, blo, chi;
	madc.hi.u32     r2, alo, bhi,   0;
	mad.lo.cc.u32   r1, alo, bhi,  r1;
	madc.hi.cc.u32  r2, ahi, blo,  r2;
	madc.hi.u32     r3, ahi, bhi,   0;
	mad.lo.cc.u32   r1, ahi, blo,  r1;
	madc.lo.cc.u32  r2, ahi, bhi,  r2;
	addc.u32        r3,  r3,   0;     
	mov.b64         %rd46, {r0,r1};      
	mov.b64         %rd94, {r2,r3};      
	}
	// inline asm
	st.local.u64 	[%rd92], %rd46;
	add.s32 	%r9, %r8, 1;
	sub.s32 	%r26, %r9, %r7;
	mul.wide.s32 	%rd51, %r26, 8;
	add.s64 	%rd92, %rd1, %rd51;
	add.s64 	%rd13, %rd7, 8;
	mov.u64 	%rd93, %rd13;
	add.s64 	%rd90, %rd90, 8;
	setp.lt.s32	%p3, %r9, %r6;
	mov.u64 	%rd91, %rd13;
	mov.u32 	%r39, %r9;
	@%p3 bra 	BB8_3;

BB8_4:
	st.local.u64 	[%rd93], %rd94;
	ld.local.u64 	%rd95, [%rd1+16];
	ld.local.u64 	%rd96, [%rd1+24];
	and.b32  	%r10, %r3, 63;
	setp.eq.s32	%p4, %r10, 0;
	@%p4 bra 	BB8_6;

	mov.u32 	%r27, 64;
	sub.s32 	%r28, %r27, %r10;
	shl.b64 	%rd52, %rd96, %r10;
	shr.u64 	%rd53, %rd95, %r28;
	or.b64  	%rd96, %rd52, %rd53;
	shl.b64 	%rd54, %rd95, %r10;
	ld.local.u64 	%rd55, [%rd1+8];
	shr.u64 	%rd56, %rd55, %r28;
	or.b64  	%rd95, %rd56, %rd54;

BB8_6:
	cvta.to.local.u64 	%rd57, %rd37;
	shr.u64 	%rd58, %rd96, 62;
	cvt.u32.u64	%r29, %rd58;
	shr.u64 	%rd59, %rd95, 62;
	shl.b64 	%rd60, %rd96, 2;
	or.b64  	%rd98, %rd60, %rd59;
	shl.b64 	%rd97, %rd95, 2;
	shr.u64 	%rd61, %rd96, 61;
	cvt.u32.u64	%r30, %rd61;
	and.b32  	%r31, %r30, 1;
	add.s32 	%r32, %r31, %r29;
	neg.s32 	%r33, %r32;
	setp.eq.s32	%p5, %r40, 0;
	selp.b32	%r34, %r32, %r33, %p5;
	st.local.u32 	[%rd57], %r34;
	setp.eq.s32	%p6, %r31, 0;
	@%p6 bra 	BB8_8;

	mov.u64 	%rd65, 0;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd65;
	mov.b64         {a2,a3}, %rd65;
	mov.b64         {b0,b1}, %rd97;
	mov.b64         {b2,b3}, %rd98;
	sub.cc.u32      r0, a0, b0; 
	subc.cc.u32     r1, a1, b1; 
	subc.cc.u32     r2, a2, b2; 
	subc.u32        r3, a3, b3; 
	mov.b64         %rd97, {r0,r1};
	mov.b64         %rd98, {r2,r3};
	}
	// inline asm
	xor.b32  	%r40, %r40, -2147483648;

BB8_8:
	clz.b64 	%r41, %rd98;
	setp.eq.s32	%p7, %r41, 0;
	@%p7 bra 	BB8_10;

	shl.b64 	%rd68, %rd98, %r41;
	mov.u32 	%r35, 64;
	sub.s32 	%r36, %r35, %r41;
	shr.u64 	%rd69, %rd97, %r36;
	or.b64  	%rd98, %rd69, %rd68;

BB8_10:
	mov.u64 	%rd73, -3958705157555305931;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi;
	mov.b64         {alo,ahi}, %rd98;   
	mov.b64         {blo,bhi}, %rd73;   
	mul.lo.u32      r0, alo, blo;    
	mul.hi.u32      r1, alo, blo;    
	mad.lo.cc.u32   r1, alo, bhi, r1;
	madc.hi.u32     r2, alo, bhi,  0;
	mad.lo.cc.u32   r1, ahi, blo, r1;
	madc.hi.cc.u32  r2, ahi, blo, r2;
	madc.hi.u32     r3, ahi, bhi,  0;
	mad.lo.cc.u32   r2, ahi, bhi, r2;
	addc.u32        r3, r3,  0;      
	mov.b64         %rd70, {r0,r1};     
	mov.b64         %rd99, {r2,r3};     
	}
	// inline asm
	setp.lt.s64	%p8, %rd99, 1;
	@%p8 bra 	BB8_12;

	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd70;
	mov.b64         {a2,a3}, %rd99;
	mov.b64         {b0,b1}, %rd70;
	mov.b64         {b2,b3}, %rd99;
	add.cc.u32      r0, a0, b0; 
	addc.cc.u32     r1, a1, b1; 
	addc.cc.u32     r2, a2, b2; 
	addc.u32        r3, a3, b3; 
	mov.b64         %rd74, {r0,r1};
	mov.b64         %rd99, {r2,r3};
	}
	// inline asm
	add.s32 	%r41, %r41, 1;

BB8_12:
	cvt.u64.u32	%rd80, %r40;
	shl.b64 	%rd81, %rd80, 32;
	mov.u32 	%r37, 1022;
	sub.s32 	%r38, %r37, %r41;
	cvt.u64.u32	%rd82, %r38;
	shl.b64 	%rd83, %rd82, 52;
	add.s64 	%rd84, %rd99, 1;
	shr.u64 	%rd85, %rd84, 10;
	add.s64 	%rd86, %rd85, 1;
	shr.u64 	%rd87, %rd86, 1;
	add.s64 	%rd88, %rd87, %rd83;
	or.b64  	%rd89, %rd88, %rd81;
	mov.b64 	 %fd4, %rd89;

BB8_13:
	st.param.f64	[func_retval0+0], %fd4;
	ret;
}


