//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21554848
// Cuda compilation tools, release 8.0, V8.0.61
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_20
.address_size 64

	// .globl	_Z15preRegatherPassv
.global .align 1 .b8 MomentBuffer[1];
.global .align 1 .b8 eyeHitBuffer[1];
.global .align 1 .b8 outputBuffer[1];
.global .align 1 .b8 patchValueBuffer[1];
.global .align 1 .b8 centroidBuffer[1];
.global .align 1 .b8 patchAreaBuffer[1];
.global .align 1 .b8 patchSizesBuffer[1];
.global .align 1 .b8 patchStartIndexesBuffer[1];
.global .align 1 .b8 triAreasBuffer[1];
.global .align 1 .b8 neighborsBuffer[1];
.global .align 1 .b8 neighborWeightsBuffer[1];
.global .align 1 .b8 directBuffer[1];
.global .align 1 .b8 intermediateBuffer[1];
.global .align 4 .u32 numTriangles;
.global .align 8 .b8 launchDim[8];
.global .align 8 .b8 topObject[4];
.global .align 8 .b8 launchIndex[8];
.global .align 4 .u32 centroidNumber;
.global .align 4 .u32 numPatches;
.global .align 8 .b8 sceneCenter[12];
.global .align 4 .f32 sceneEpsilon;
.global .align 4 .f32 sceneMaxDim;
.global .align 4 .u32 quickRayType;
.global .align 4 .u32 res;
.global .align 4 .u32 NUM_MOMENTS;
.global .align 4 .b8 eyePayload[56];
.global .align 4 .b8 shading_normal[12];
.global .align 8 .b8 eye[12];
.global .align 8 .b8 U[12];
.global .align 8 .b8 V[12];
.global .align 8 .b8 W[12];
.global .align 8 .b8 cameraDir[12];
.global .align 8 .b8 nearPoint1[12];
.global .align 8 .b8 nearPoint2[12];
.global .align 4 .b8 nearPoint3[12];
.global .align 8 .b8 nearPoint4[12];
.global .align 4 .u32 useOrthoCamera;
.global .align 4 .f32 toobright;
.global .align 4 .f32 toodim;
.global .align 4 .u32 greyscale;
.global .align 4 .u32 cameraType;
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo12numTrianglesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9launchDimE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9topObjectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11launchIndexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14centroidNumberE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10numPatchesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11sceneCenterE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12sceneEpsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11sceneMaxDimE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12quickRayTypeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3resE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11NUM_MOMENTSE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10eyePayloadE[8] = {82, 97, 121, 0, 56, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3eyeE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1UE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1VE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1WE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9cameraDirE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10nearPoint1E[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10nearPoint2E[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10nearPoint3E[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10nearPoint4E[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14useOrthoCameraE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9toobrightE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6toodimE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9greyscaleE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10cameraTypeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12numTrianglesE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9launchDimE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9topObjectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11launchIndexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14centroidNumberE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10numPatchesE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11sceneCenterE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12sceneEpsilonE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11sceneMaxDimE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12quickRayTypeE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3resE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11NUM_MOMENTSE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10eyePayloadE[11] = {69, 121, 101, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3eyeE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1UE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1VE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1WE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9cameraDirE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10nearPoint1E[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10nearPoint2E[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10nearPoint3E[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10nearPoint4E[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14useOrthoCameraE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9toobrightE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename6toodimE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9greyscaleE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10cameraTypeE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum12numTrianglesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9launchDimE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9topObjectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11launchIndexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14centroidNumberE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10numPatchesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11sceneCenterE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12sceneEpsilonE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11sceneMaxDimE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12quickRayTypeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3resE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11NUM_MOMENTSE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10eyePayloadE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3eyeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1UE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1VE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1WE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9cameraDirE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10nearPoint1E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10nearPoint2E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10nearPoint3E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10nearPoint4E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14useOrthoCameraE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9toobrightE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6toodimE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9greyscaleE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10cameraTypeE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic12numTrianglesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9launchDimE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic9topObjectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11launchIndexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14centroidNumberE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 99, 101, 110, 116, 114, 111, 105, 100, 78, 117, 109, 98, 101, 114, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10numPatchesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11sceneCenterE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12sceneEpsilonE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11sceneMaxDimE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12quickRayTypeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3resE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11NUM_MOMENTSE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10eyePayloadE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3eyeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1UE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1VE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1WE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9cameraDirE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10nearPoint1E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10nearPoint2E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10nearPoint3E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10nearPoint4E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14useOrthoCameraE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9toobrightE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic6toodimE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9greyscaleE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10cameraTypeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12numTrianglesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9launchDimE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9topObjectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11launchIndexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14centroidNumberE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10numPatchesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11sceneCenterE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12sceneEpsilonE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11sceneMaxDimE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12quickRayTypeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3resE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11NUM_MOMENTSE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10eyePayloadE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3eyeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1UE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1VE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1WE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9cameraDirE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10nearPoint1E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10nearPoint2E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10nearPoint3E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10nearPoint4E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14useOrthoCameraE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9toobrightE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6toodimE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9greyscaleE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10cameraTypeE[1];

.visible .entry _Z15preRegatherPassv(

)
{
	.local .align 8 .b8 	__local_depot0[56];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<63>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<12>;


	mov.u64 	%rd11, __local_depot0;
	cvta.local.u64 	%SP, %rd11;
	add.u64 	%rd1, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd1;
	ldu.global.v2.u32 	{%r4, %r5}, [launchIndex];
	cvt.rn.f32.u32	%f9, %r4;
	cvt.rn.f32.u32	%f10, %r5;
	ldu.global.v2.u32 	{%r8, %r9}, [launchDim];
	cvt.rn.f32.u32	%f11, %r8;
	cvt.rn.f32.u32	%f12, %r9;
	div.approx.ftz.f32 	%f13, %f9, %f11;
	div.approx.ftz.f32 	%f14, %f10, %f12;
	fma.rn.ftz.f32 	%f15, %f13, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f16, %f14, 0f40000000, 0fBF800000;
	ld.global.v2.f32 	{%f17, %f18}, [eye];
	ld.global.f32 	%f3, [eye+8];
	mov.u64 	%rd3, U;
	ldu.global.v2.f32 	{%f19, %f20}, [U];
	add.s64 	%rd4, %rd3, 8;
	ldu.global.f32 	%f23, [%rd4];
	mov.u64 	%rd5, V;
	ldu.global.v2.f32 	{%f24, %f25}, [V];
	mul.ftz.f32 	%f27, %f16, %f24;
	mul.ftz.f32 	%f29, %f16, %f25;
	add.s64 	%rd6, %rd5, 8;
	ldu.global.f32 	%f30, [%rd6];
	mul.ftz.f32 	%f31, %f16, %f30;
	fma.rn.ftz.f32 	%f32, %f15, %f19, %f27;
	fma.rn.ftz.f32 	%f33, %f15, %f20, %f29;
	fma.rn.ftz.f32 	%f34, %f15, %f23, %f31;
	mov.u64 	%rd7, W;
	ldu.global.v2.f32 	{%f35, %f36}, [W];
	add.ftz.f32 	%f38, %f32, %f35;
	add.ftz.f32 	%f40, %f33, %f36;
	add.s64 	%rd8, %rd7, 8;
	ldu.global.f32 	%f41, [%rd8];
	add.ftz.f32 	%f42, %f34, %f41;
	mul.ftz.f32 	%f43, %f40, %f40;
	fma.rn.ftz.f32 	%f44, %f38, %f38, %f43;
	fma.rn.ftz.f32 	%f45, %f42, %f42, %f44;
	rsqrt.approx.ftz.f32 	%f46, %f45;
	mul.ftz.f32 	%f4, %f38, %f46;
	mul.ftz.f32 	%f5, %f40, %f46;
	mul.ftz.f32 	%f6, %f42, %f46;
	mov.u64 	%rd9, sceneCenter;
	ldu.global.v2.f32 	{%f47, %f48}, [sceneCenter];
	sub.ftz.f32 	%f50, %f17, %f47;
	sub.ftz.f32 	%f52, %f18, %f48;
	add.s64 	%rd10, %rd9, 8;
	ldu.global.f32 	%f53, [%rd10];
	sub.ftz.f32 	%f54, %f3, %f53;
	mul.ftz.f32 	%f55, %f52, %f52;
	fma.rn.ftz.f32 	%f56, %f50, %f50, %f55;
	fma.rn.ftz.f32 	%f57, %f54, %f54, %f56;
	sqrt.approx.ftz.f32 	%f58, %f57;
	ldu.global.f32 	%f59, [sceneMaxDim];
	mov.f32 	%f60, 0f40000000;
	div.approx.ftz.f32 	%f61, %f59, %f60;
	add.ftz.f32 	%f8, %f58, %f61;
	ldu.global.u32 	%r2, [quickRayType];
	ldu.global.f32 	%f7, [sceneEpsilon];
	mov.u32 	%r12, 1065353216;
	st.local.u32 	[%rd2+8], %r12;
	mov.f32 	%f62, 0f3F800000;
	st.local.v2.f32 	[%rd2], {%f62, %f62};
	mov.u32 	%r13, 1008981770;
	st.local.u32 	[%rd2+36], %r13;
	mov.u32 	%r14, 1000593162;
	st.local.u32 	[%rd2+32], %r14;
	st.local.u32 	[%rd2+28], %r14;
	mov.u32 	%r15, 0;
	st.local.u32 	[%rd2+40], %r15;
	ldu.global.u32 	%r1, [topObject];
	mov.u32 	%r3, 56;
	// inline asm
	call _rt_trace_64, (%r1, %f17, %f18, %f3, %f4, %f5, %f6, %r2, %f7, %f8, %rd1, %r3);
	// inline asm
	ret;
}

	// .globl	_Z15patchGatherPassv
.visible .entry _Z15patchGatherPassv(

)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<40>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<49>;


	ldu.global.u32 	%r8, [launchIndex];
	cvt.s64.s32	%rd14, %r8;
	mov.u64 	%rd18, patchSizesBuffer;
	cvta.global.u64 	%rd7, %rd18;
	mov.u32 	%r6, 1;
	mov.u32 	%r7, 4;
	mov.u64 	%rd17, 0;
	// inline asm
	call (%rd6), _rt_buffer_get_64, (%rd7, %r6, %r7, %rd14, %rd17, %rd17, %rd17);
	// inline asm
	ld.u32 	%r1, [%rd6];
	mov.u64 	%rd19, patchStartIndexesBuffer;
	cvta.global.u64 	%rd13, %rd19;
	// inline asm
	call (%rd12), _rt_buffer_get_64, (%rd13, %r6, %r7, %rd14, %rd17, %rd17, %rd17);
	// inline asm
	mov.f32 	%f39, 0f00000000;
	mov.f32 	%f38, %f39;
	mov.f32 	%f37, %f39;
	mov.f32 	%f36, %f39;
	setp.lt.s32	%p1, %r1, 1;
	@%p1 bra 	BB1_3;

	ld.s32 	%rd48, [%rd12];
	mov.f32 	%f39, 0f00000000;
	mov.f32 	%f38, %f39;
	mov.f32 	%f37, %f39;
	mov.f32 	%f36, %f39;
	mov.u32 	%r18, 0;

BB1_2:
	mov.u64 	%rd38, triAreasBuffer;
	cvta.global.u64 	%rd21, %rd38;
	// inline asm
	call (%rd20), _rt_buffer_get_64, (%rd21, %r6, %r7, %rd48, %rd17, %rd17, %rd17);
	// inline asm
	ld.f32 	%f21, [%rd20];
	mov.u64 	%rd39, intermediateBuffer;
	cvta.global.u64 	%rd27, %rd39;
	mov.u32 	%r13, 16;
	// inline asm
	call (%rd26), _rt_buffer_get_64, (%rd27, %r6, %r13, %rd48, %rd17, %rd17, %rd17);
	// inline asm
	ld.v4.f32 	{%f22, %f23, %f24, %f25}, [%rd26];
	mul.ftz.f32 	%f27, %f21, %f22;
	mul.ftz.f32 	%f29, %f21, %f23;
	mul.ftz.f32 	%f31, %f21, %f24;
	mul.ftz.f32 	%f33, %f21, %f25;
	mov.u64 	%rd40, patchAreaBuffer;
	cvta.global.u64 	%rd33, %rd40;
	// inline asm
	call (%rd32), _rt_buffer_get_64, (%rd33, %r6, %r7, %rd14, %rd17, %rd17, %rd17);
	// inline asm
	ld.f32 	%f34, [%rd32];
	rcp.approx.ftz.f32 	%f35, %f34;
	fma.rn.ftz.f32 	%f39, %f27, %f35, %f39;
	fma.rn.ftz.f32 	%f38, %f29, %f35, %f38;
	fma.rn.ftz.f32 	%f37, %f31, %f35, %f37;
	fma.rn.ftz.f32 	%f36, %f33, %f35, %f36;
	add.s64 	%rd48, %rd48, 1;
	add.s32 	%r18, %r18, 1;
	setp.lt.s32	%p2, %r18, %r1;
	@%p2 bra 	BB1_2;

BB1_3:
	mov.u64 	%rd47, patchValueBuffer;
	cvta.global.u64 	%rd42, %rd47;
	mov.u32 	%r17, 16;
	// inline asm
	call (%rd41), _rt_buffer_get_64, (%rd42, %r6, %r17, %rd14, %rd17, %rd17, %rd17);
	// inline asm
	st.v4.f32 	[%rd41], {%f39, %f38, %f37, %f36};
	ret;
}

	// .globl	_Z12regatherPassv
.visible .entry _Z12regatherPassv(

)
{
	.local .align 8 .b8 	__local_depot2[56];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<27>;
	.reg .f32 	%f<373>;
	.reg .b32 	%r<139>;
	.reg .f64 	%fd<100>;
	.reg .b64 	%rd<165>;


	mov.u64 	%rd164, __local_depot2;
	cvta.local.u64 	%SP, %rd164;
	ld.global.v2.u32 	{%r8, %r9}, [launchIndex];
	cvt.u64.u32	%rd9, %r8;
	cvt.u64.u32	%rd10, %r9;
	mov.u64 	%rd13, directBuffer;
	cvta.global.u64 	%rd8, %rd13;
	mov.u32 	%r6, 2;
	mov.u32 	%r7, 12;
	mov.u64 	%rd12, 0;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r6, %r7, %rd9, %rd10, %rd12, %rd12);
	// inline asm
	ld.f32 	%f1, [%rd7];
	ld.global.u32 	%r12, [useOrthoCamera];
	setp.eq.s32	%p1, %r12, 1;
	@%p1 bra 	BB2_7;
	bra.uni 	BB2_1;

BB2_7:
	ld.global.v2.u32 	{%r30, %r31}, [launchIndex];
	ld.global.v2.f32 	{%f165, %f166}, [cameraDir];
	mov.f32 	%f337, %f166;
	mov.f32 	%f336, %f165;
	ld.global.f32 	%f338, [cameraDir+8];
	cvt.rn.f32.u32	%f167, %r30;
	cvt.rn.f32.u32	%f168, %r31;
	ld.global.v2.u32 	{%r34, %r35}, [launchDim];
	cvt.rn.f32.u32	%f169, %r34;
	cvt.rn.f32.u32	%f170, %r35;
	div.approx.ftz.f32 	%f171, %f167, %f169;
	div.approx.ftz.f32 	%f172, %f168, %f170;
	ld.global.v2.f32 	{%f173, %f174}, [nearPoint2];
	ld.global.f32 	%f177, [nearPoint2+8];
	ld.global.v2.f32 	{%f178, %f179}, [nearPoint1];
	ld.global.f32 	%f182, [nearPoint1+8];
	sub.ftz.f32 	%f183, %f173, %f178;
	sub.ftz.f32 	%f184, %f174, %f179;
	sub.ftz.f32 	%f185, %f177, %f182;
	mov.f32 	%f186, 0f3F800000;
	sub.ftz.f32 	%f187, %f186, %f172;
	fma.rn.ftz.f32 	%f188, %f183, %f187, %f178;
	fma.rn.ftz.f32 	%f189, %f184, %f187, %f179;
	fma.rn.ftz.f32 	%f190, %f185, %f187, %f182;
	ld.global.v2.f32 	{%f191, %f192}, [nearPoint4];
	ld.global.f32 	%f195, [nearPoint4+8];
	sub.ftz.f32 	%f196, %f191, %f178;
	sub.ftz.f32 	%f197, %f192, %f179;
	sub.ftz.f32 	%f198, %f195, %f182;
	fma.rn.ftz.f32 	%f333, %f171, %f196, %f188;
	fma.rn.ftz.f32 	%f334, %f171, %f197, %f189;
	fma.rn.ftz.f32 	%f335, %f171, %f198, %f190;
	mov.f32 	%f339, 0f3DCCCCCD;
	bra.uni 	BB2_8;

BB2_1:
	ld.global.u32 	%r13, [cameraType];
	setp.eq.s32	%p2, %r13, 1;
	ld.global.v2.f32 	{%f92, %f93}, [U];
	ld.global.f32 	%f4, [U+8];
	ld.global.v2.f32 	{%f94, %f95}, [V];
	ld.global.f32 	%f7, [V+8];
	ld.global.v2.f32 	{%f96, %f97}, [W];
	ld.global.f32 	%f10, [W+8];
	ld.global.v2.u32 	{%r14, %r15}, [launchIndex];
	cvt.rn.f32.u32	%f11, %r14;
	cvt.rn.f32.u32	%f12, %r15;
	ld.global.v2.u32 	{%r18, %r19}, [launchDim];
	cvt.rn.f32.u32	%f13, %r18;
	cvt.rn.f32.u32	%f14, %r19;
	ld.global.v2.f32 	{%f98, %f99}, [sceneCenter];
	ld.global.f32 	%f102, [sceneCenter+8];
	ld.global.v2.f32 	{%f103, %f104}, [eye];
	mov.f32 	%f334, %f104;
	mov.f32 	%f333, %f103;
	ld.global.f32 	%f335, [eye+8];
	sub.ftz.f32 	%f105, %f103, %f98;
	sub.ftz.f32 	%f106, %f104, %f99;
	sub.ftz.f32 	%f107, %f335, %f102;
	mul.ftz.f32 	%f108, %f106, %f106;
	fma.rn.ftz.f32 	%f109, %f105, %f105, %f108;
	fma.rn.ftz.f32 	%f110, %f107, %f107, %f109;
	sqrt.approx.ftz.f32 	%f111, %f110;
	ld.global.f32 	%f112, [sceneMaxDim];
	mov.f32 	%f113, 0f40000000;
	div.approx.ftz.f32 	%f114, %f112, %f113;
	add.ftz.f32 	%f339, %f111, %f114;
	@%p2 bra 	BB2_3;
	bra.uni 	BB2_2;

BB2_3:
	add.ftz.f32 	%f132, %f11, %f11;
	div.approx.ftz.f32 	%f133, %f132, %f13;
	add.ftz.f32 	%f134, %f12, %f12;
	div.approx.ftz.f32 	%f135, %f134, %f14;
	add.ftz.f32 	%f136, %f133, 0fBF800000;
	add.ftz.f32 	%f137, %f135, 0fBF800000;
	mul.ftz.f32 	%f138, %f137, %f137;
	fma.rn.ftz.f32 	%f139, %f136, %f136, %f138;
	sqrt.approx.ftz.f32 	%f140, %f139;
	div.approx.ftz.f32 	%f22, %f136, %f140;
	div.approx.ftz.f32 	%f23, %f137, %f140;
	cvt.ftz.f64.f32	%fd5, %f140;
	mul.f64 	%fd1, %fd5, 0d3FE0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd1;
	}
	mov.b32 	 %f141, %r1;
	abs.ftz.f32 	%f142, %f141;
	setp.lt.ftz.f32	%p3, %f142, 0f3FE26666;
	@%p3 bra 	BB2_5;
	bra.uni 	BB2_4;

BB2_5:
	mul.f64 	%fd56, %fd1, %fd1;
	mov.f64 	%fd57, 0dBFB3823B180754AF;
	mov.f64 	%fd58, 0d3FB0066BDC1895E9;
	fma.rn.f64 	%fd59, %fd58, %fd56, %fd57;
	mov.f64 	%fd60, 0d3FB11E52CC2F79AE;
	fma.rn.f64 	%fd61, %fd59, %fd56, %fd60;
	mov.f64 	%fd62, 0dBF924EAF3526861B;
	fma.rn.f64 	%fd63, %fd61, %fd56, %fd62;
	mov.f64 	%fd64, 0d3F91DF02A31E6CB7;
	fma.rn.f64 	%fd65, %fd63, %fd56, %fd64;
	mov.f64 	%fd66, 0d3F847D18B0EEC6CC;
	fma.rn.f64 	%fd67, %fd65, %fd56, %fd66;
	mov.f64 	%fd68, 0d3F8D0AF961BA53B0;
	fma.rn.f64 	%fd69, %fd67, %fd56, %fd68;
	mov.f64 	%fd70, 0d3F91BF7734CF1C48;
	fma.rn.f64 	%fd71, %fd69, %fd56, %fd70;
	mov.f64 	%fd72, 0d3F96E91483144EF7;
	fma.rn.f64 	%fd73, %fd71, %fd56, %fd72;
	mov.f64 	%fd74, 0d3F9F1C6E0A4F9F81;
	fma.rn.f64 	%fd75, %fd73, %fd56, %fd74;
	mov.f64 	%fd76, 0d3FA6DB6DC27FA92B;
	fma.rn.f64 	%fd77, %fd75, %fd56, %fd76;
	mov.f64 	%fd78, 0d3FB333333320F91B;
	fma.rn.f64 	%fd79, %fd77, %fd56, %fd78;
	mov.f64 	%fd80, 0d3FC5555555555F4D;
	fma.rn.f64 	%fd81, %fd79, %fd56, %fd80;
	mul.f64 	%fd82, %fd56, %fd81;
	fma.rn.f64 	%fd99, %fd82, %fd1, %fd1;
	bra.uni 	BB2_6;

BB2_2:
	div.approx.ftz.f32 	%f115, %f11, %f13;
	div.approx.ftz.f32 	%f116, %f12, %f14;
	fma.rn.ftz.f32 	%f117, %f115, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f118, %f116, 0f40000000, 0fBF800000;
	mul.ftz.f32 	%f119, %f94, %f118;
	mul.ftz.f32 	%f120, %f95, %f118;
	mul.ftz.f32 	%f121, %f7, %f118;
	fma.rn.ftz.f32 	%f122, %f92, %f117, %f119;
	fma.rn.ftz.f32 	%f123, %f93, %f117, %f120;
	fma.rn.ftz.f32 	%f124, %f4, %f117, %f121;
	add.ftz.f32 	%f125, %f96, %f122;
	add.ftz.f32 	%f126, %f97, %f123;
	add.ftz.f32 	%f127, %f10, %f124;
	mul.ftz.f32 	%f128, %f126, %f126;
	fma.rn.ftz.f32 	%f129, %f125, %f125, %f128;
	fma.rn.ftz.f32 	%f130, %f127, %f127, %f129;
	rsqrt.approx.ftz.f32 	%f131, %f130;
	mul.ftz.f32 	%f336, %f131, %f125;
	mul.ftz.f32 	%f337, %f131, %f126;
	mul.ftz.f32 	%f338, %f131, %f127;
	bra.uni 	BB2_8;

BB2_4:
	abs.f64 	%fd8, %fd1;
	mov.f64 	%fd9, 0d3FE0000000000000;
	mov.f64 	%fd10, 0dBFE0000000000000;
	fma.rn.f64 	%fd7, %fd10, %fd8, %fd9;
	// inline asm
	rsqrt.approx.ftz.f64 %fd6, %fd7;
	// inline asm
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd6;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd6;
	}
	add.s32 	%r24, %r23, -1048576;
	mov.b64 	%fd11, {%r22, %r24};
	mul.f64 	%fd12, %fd7, %fd6;
	neg.f64 	%fd13, %fd12;
	fma.rn.f64 	%fd14, %fd12, %fd13, %fd7;
	fma.rn.f64 	%fd15, %fd14, %fd11, %fd12;
	neg.f64 	%fd16, %fd15;
	mov.f64 	%fd17, 0d3FF0000000000000;
	fma.rn.f64 	%fd18, %fd6, %fd16, %fd17;
	fma.rn.f64 	%fd19, %fd18, %fd11, %fd11;
	fma.rn.f64 	%fd20, %fd15, %fd16, %fd7;
	fma.rn.f64 	%fd21, %fd20, %fd19, %fd15;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r25}, %fd7;
	}
	setp.lt.s32	%p4, %r25, 0;
	selp.f64	%fd22, 0dFFF8000000000000, %fd21, %p4;
	setp.equ.f64	%p5, %fd7, 0d0000000000000000;
	selp.f64	%fd23, %fd7, %fd22, %p5;
	mov.f64 	%fd24, 0dBFB3823B180754AF;
	mov.f64 	%fd25, 0d3FB0066BDC1895E9;
	fma.rn.f64 	%fd26, %fd25, %fd7, %fd24;
	mov.f64 	%fd27, 0d3FB11E52CC2F79AE;
	fma.rn.f64 	%fd28, %fd26, %fd7, %fd27;
	mov.f64 	%fd29, 0dBF924EAF3526861B;
	fma.rn.f64 	%fd30, %fd28, %fd7, %fd29;
	mov.f64 	%fd31, 0d3F91DF02A31E6CB7;
	fma.rn.f64 	%fd32, %fd30, %fd7, %fd31;
	mov.f64 	%fd33, 0d3F847D18B0EEC6CC;
	fma.rn.f64 	%fd34, %fd32, %fd7, %fd33;
	mov.f64 	%fd35, 0d3F8D0AF961BA53B0;
	fma.rn.f64 	%fd36, %fd34, %fd7, %fd35;
	mov.f64 	%fd37, 0d3F91BF7734CF1C48;
	fma.rn.f64 	%fd38, %fd36, %fd7, %fd37;
	mov.f64 	%fd39, 0d3F96E91483144EF7;
	fma.rn.f64 	%fd40, %fd38, %fd7, %fd39;
	mov.f64 	%fd41, 0d3F9F1C6E0A4F9F81;
	fma.rn.f64 	%fd42, %fd40, %fd7, %fd41;
	mov.f64 	%fd43, 0d3FA6DB6DC27FA92B;
	fma.rn.f64 	%fd44, %fd42, %fd7, %fd43;
	mov.f64 	%fd45, 0d3FB333333320F91B;
	fma.rn.f64 	%fd46, %fd44, %fd7, %fd45;
	mov.f64 	%fd47, 0d3FC5555555555F4D;
	fma.rn.f64 	%fd48, %fd46, %fd7, %fd47;
	mul.f64 	%fd49, %fd7, %fd48;
	mul.f64 	%fd50, %fd23, 0dC000000000000000;
	mov.f64 	%fd51, 0d3C91A62633145C07;
	fma.rn.f64 	%fd52, %fd50, %fd49, %fd51;
	add.f64 	%fd53, %fd50, 0d3FE921FB54442D18;
	add.f64 	%fd54, %fd53, %fd52;
	add.f64 	%fd55, %fd54, 0d3FE921FB54442D18;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r26, %temp}, %fd55;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r27}, %fd55;
	}
	and.b32  	%r28, %r1, -2147483648;
	or.b32  	%r29, %r27, %r28;
	mov.b64 	%fd99, {%r26, %r29};

BB2_6:
	mul.f64 	%fd83, %fd99, 0d4018000000000000;
	cvt.rn.ftz.f32.f64	%f143, %fd83;
	cos.approx.ftz.f32 	%f144, %f143;
	mul.ftz.f32 	%f145, %f144, %f144;
	cvt.ftz.f64.f32	%fd84, %f145;
	mov.f64 	%fd85, 0d3FF0000000000000;
	sub.f64 	%fd86, %fd85, %fd84;
	mul.ftz.f32 	%f146, %f23, %f23;
	fma.rn.ftz.f32 	%f147, %f22, %f22, %f146;
	cvt.ftz.f64.f32	%fd87, %f147;
	div.rn.f64 	%fd88, %fd86, %fd87;
	sqrt.rn.f64 	%fd89, %fd88;
	cvt.rn.ftz.f32.f64	%f148, %fd89;
	mul.ftz.f32 	%f149, %f22, %f148;
	mul.ftz.f32 	%f150, %f23, %f148;
	mul.ftz.f32 	%f151, %f94, %f150;
	mul.ftz.f32 	%f152, %f95, %f150;
	mul.ftz.f32 	%f153, %f7, %f150;
	fma.rn.ftz.f32 	%f154, %f92, %f149, %f151;
	fma.rn.ftz.f32 	%f155, %f93, %f149, %f152;
	fma.rn.ftz.f32 	%f156, %f4, %f149, %f153;
	fma.rn.ftz.f32 	%f157, %f96, %f144, %f154;
	fma.rn.ftz.f32 	%f158, %f97, %f144, %f155;
	fma.rn.ftz.f32 	%f159, %f10, %f144, %f156;
	mul.ftz.f32 	%f160, %f158, %f158;
	fma.rn.ftz.f32 	%f161, %f157, %f157, %f160;
	fma.rn.ftz.f32 	%f162, %f159, %f159, %f161;
	rsqrt.approx.ftz.f32 	%f163, %f162;
	mul.ftz.f32 	%f336, %f163, %f157;
	mul.ftz.f32 	%f337, %f163, %f158;
	mul.ftz.f32 	%f338, %f163, %f159;
	cvt.ftz.f64.f32	%fd90, %f143;
	setp.gt.f64	%p6, %fd90, 0d400921F9F01B866E;
	selp.f32	%f339, 0f00000000, %f339, %p6;

BB2_8:
	add.u64 	%rd14, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd14;
	ld.global.u32 	%r39, [quickRayType];
	ld.global.f32 	%f205, [sceneEpsilon];
	mov.u32 	%r41, 1065353216;
	st.local.u32 	[%rd1+8], %r41;
	mov.f32 	%f207, 0f3F800000;
	st.local.v2.f32 	[%rd1], {%f207, %f207};
	mov.u32 	%r42, 1008981770;
	st.local.u32 	[%rd1+36], %r42;
	mov.u32 	%r43, 1000593162;
	st.local.u32 	[%rd1+32], %r43;
	st.local.u32 	[%rd1+28], %r43;
	mov.u32 	%r138, 0;
	st.local.u32 	[%rd1+40], %r138;
	ld.global.u32 	%r38, [topObject];
	mov.u32 	%r40, 56;
	// inline asm
	call _rt_trace_64, (%r38, %f333, %f334, %f335, %f336, %f337, %f338, %r39, %f205, %f339, %rd14, %r40);
	// inline asm
	ld.local.u32 	%r45, [%rd1+24];
	setp.eq.s32	%p7, %r45, -1;
	@%p7 bra 	BB2_26;

	ld.global.u32 	%r2, [res];
	setp.eq.s32	%p8, %r2, 0;
	@%p8 bra 	BB2_29;

	setp.ne.s32	%p9, %r2, 1;
	@%p9 bra 	BB2_12;

	ld.local.s32 	%rd17, [%rd1+44];
	mov.u64 	%rd39, patchSizesBuffer;
	cvta.global.u64 	%rd16, %rd39;
	mov.u32 	%r52, 1;
	mov.u32 	%r49, 4;
	// inline asm
	call (%rd15), _rt_buffer_get_64, (%rd16, %r52, %r49, %rd17, %rd12, %rd12, %rd12);
	// inline asm
	ld.local.s32 	%rd23, [%rd1+44];
	mov.u64 	%rd40, patchStartIndexesBuffer;
	cvta.global.u64 	%rd22, %rd40;
	// inline asm
	call (%rd21), _rt_buffer_get_64, (%rd22, %r52, %r49, %rd23, %rd12, %rd12, %rd12);
	// inline asm
	ld.global.v2.u32 	{%r54, %r55}, [launchIndex];
	cvt.u64.u32	%rd29, %r54;
	cvt.u64.u32	%rd30, %r55;
	mov.u64 	%rd41, outputBuffer;
	cvta.global.u64 	%rd28, %rd41;
	mov.u32 	%r53, 16;
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd28, %r6, %r53, %rd29, %rd30, %rd12, %rd12);
	// inline asm
	ld.local.s32 	%rd35, [%rd1+44];
	mov.u64 	%rd42, patchValueBuffer;
	cvta.global.u64 	%rd34, %rd42;
	// inline asm
	call (%rd33), _rt_buffer_get_64, (%rd34, %r52, %r53, %rd35, %rd12, %rd12, %rd12);
	// inline asm
	ld.v4.f32 	{%f208, %f209, %f210, %f211}, [%rd33];
	st.v4.f32 	[%rd27], {%f208, %f209, %f210, %f211};
	bra.uni 	BB2_29;

BB2_26:
	ld.global.f32 	%f329, [toobright];
	ld.global.f32 	%f330, [toodim];
	setp.lt.ftz.f32	%p24, %f1, %f330;
	setp.gt.ftz.f32	%p25, %f1, %f329;
	or.pred  	%p26, %p24, %p25;
	@!%p26 bra 	BB2_28;
	bra.uni 	BB2_27;

BB2_27:
	ld.global.v2.u32 	{%r128, %r129}, [launchIndex];
	cvt.u64.u32	%rd151, %r128;
	cvt.u64.u32	%rd152, %r129;
	mov.u64 	%rd155, eyeHitBuffer;
	cvta.global.u64 	%rd150, %rd155;
	mov.u32 	%r127, 80;
	// inline asm
	call (%rd149), _rt_buffer_get_64, (%rd150, %r6, %r127, %rd151, %rd152, %rd12, %rd12);
	// inline asm

BB2_28:
	ld.global.v2.u32 	{%r134, %r135}, [launchIndex];
	cvt.u64.u32	%rd158, %r134;
	cvt.u64.u32	%rd159, %r135;
	mov.u64 	%rd162, outputBuffer;
	cvta.global.u64 	%rd157, %rd162;
	mov.u32 	%r133, 16;
	// inline asm
	call (%rd156), _rt_buffer_get_64, (%rd157, %r6, %r133, %rd158, %rd159, %rd12, %rd12);
	// inline asm
	mov.f32 	%f332, 0f00000000;
	st.v4.f32 	[%rd156], {%f332, %f332, %f332, %f207};
	bra.uni 	BB2_29;

BB2_12:
	setp.eq.s32	%p10, %r2, 3;
	ld.global.v2.u32 	{%r58, %r59}, [launchIndex];
	cvt.u64.u32	%rd2, %r58;
	cvt.u64.u32	%rd3, %r59;
	@%p10 bra 	BB2_14;
	bra.uni 	BB2_13;

BB2_14:
	mov.u64 	%rd68, eyeHitBuffer;
	cvta.global.u64 	%rd51, %rd68;
	mov.u32 	%r65, 80;
	// inline asm
	call (%rd50), _rt_buffer_get_64, (%rd51, %r6, %r65, %rd2, %rd3, %rd12, %rd12);
	// inline asm
	ld.global.v2.u32 	{%r70, %r71}, [launchIndex];
	cvt.u64.u32	%rd58, %r70;
	cvt.u64.u32	%rd59, %r71;
	mov.u64 	%rd69, outputBuffer;
	cvta.global.u64 	%rd57, %rd69;
	mov.u32 	%r67, 16;
	// inline asm
	call (%rd56), _rt_buffer_get_64, (%rd57, %r6, %r67, %rd58, %rd59, %rd12, %rd12);
	// inline asm
	ld.global.v2.u32 	{%r74, %r75}, [launchIndex];
	cvt.u64.u32	%rd64, %r74;
	cvt.u64.u32	%rd65, %r75;
	// inline asm
	call (%rd62), _rt_buffer_get_64, (%rd8, %r6, %r7, %rd64, %rd65, %rd12, %rd12);
	// inline asm
	ld.f32 	%f218, [%rd62];
	ld.f32 	%f219, [%rd62+4];
	ld.f32 	%f220, [%rd62+8];
	mul.ftz.f32 	%f221, %f220, 0f3F000000;
	mul.ftz.f32 	%f222, %f219, 0f3F000000;
	mul.ftz.f32 	%f223, %f218, 0f3F000000;
	st.v4.f32 	[%rd56], {%f223, %f222, %f221, %f207};
	bra.uni 	BB2_15;

BB2_13:
	mov.u64 	%rd49, outputBuffer;
	cvta.global.u64 	%rd44, %rd49;
	mov.u32 	%r63, 16;
	// inline asm
	call (%rd43), _rt_buffer_get_64, (%rd44, %r6, %r63, %rd2, %rd3, %rd12, %rd12);
	// inline asm
	mov.f32 	%f217, 0f00000000;
	st.v4.f32 	[%rd43], {%f217, %f217, %f217, %f207};

BB2_15:
	ld.global.u32 	%r79, [res];
	setp.eq.s32	%p11, %r79, 5;
	ld.local.v2.f32 	{%f240, %f241}, [%rd1+48];
	selp.f32	%f41, 0f3EAAAAAB, %f240, %p11;
	selp.f32	%f42, 0f3EAAAAAB, %f241, %p11;
	selp.b32	%r3, 1, 8, %p11;
	ld.local.u32 	%r80, [%rd1+24];
	mul.lo.s32 	%r81, %r80, 24;
	cvt.s64.s32	%rd163, %r81;
	mov.f32 	%f354, 0f00000000;
	mov.f32 	%f353, %f354;
	mov.f32 	%f352, %f354;
	mov.f32 	%f351, %f354;
	mov.f32 	%f350, %f354;
	mov.f32 	%f349, %f354;
	mov.f32 	%f348, %f354;
	mov.f32 	%f347, %f354;
	mov.f32 	%f346, %f354;
	mov.f32 	%f345, %f354;
	mov.f32 	%f344, %f354;
	mov.f32 	%f343, %f354;
	mov.f32 	%f342, %f354;
	mov.f32 	%f341, %f354;
	mov.f32 	%f340, %f354;

BB2_16:
	mov.u64 	%rd125, neighborWeightsBuffer;
	cvta.global.u64 	%rd72, %rd125;
	mov.u32 	%r98, 1;
	mov.u32 	%r97, 4;
	// inline asm
	call (%rd71), _rt_buffer_get_64, (%rd72, %r98, %r97, %rd163, %rd12, %rd12, %rd12);
	// inline asm
	ld.f32 	%f244, [%rd71];
	add.s64 	%rd103, %rd163, 8;
	// inline asm
	call (%rd77), _rt_buffer_get_64, (%rd72, %r98, %r97, %rd103, %rd12, %rd12, %rd12);
	// inline asm
	ld.f32 	%f245, [%rd77];
	add.s64 	%rd115, %rd163, 16;
	// inline asm
	call (%rd83), _rt_buffer_get_64, (%rd72, %r98, %r97, %rd115, %rd12, %rd12, %rd12);
	// inline asm
	add.ftz.f32 	%f342, %f342, %f244;
	add.ftz.f32 	%f341, %f341, %f245;
	ld.f32 	%f246, [%rd83];
	add.ftz.f32 	%f340, %f340, %f246;
	mov.u64 	%rd126, neighborsBuffer;
	cvta.global.u64 	%rd90, %rd126;
	// inline asm
	call (%rd89), _rt_buffer_get_64, (%rd90, %r98, %r97, %rd163, %rd12, %rd12, %rd12);
	// inline asm
	ld.s32 	%rd97, [%rd89];
	mov.u64 	%rd127, intermediateBuffer;
	cvta.global.u64 	%rd96, %rd127;
	mov.u32 	%r99, 16;
	// inline asm
	call (%rd95), _rt_buffer_get_64, (%rd96, %r98, %r99, %rd97, %rd12, %rd12, %rd12);
	// inline asm
	ld.v4.f32 	{%f247, %f248, %f249, %f250}, [%rd95];
	fma.rn.ftz.f32 	%f346, %f244, %f247, %f346;
	fma.rn.ftz.f32 	%f345, %f244, %f248, %f345;
	fma.rn.ftz.f32 	%f344, %f244, %f249, %f344;
	fma.rn.ftz.f32 	%f343, %f244, %f250, %f343;
	// inline asm
	call (%rd101), _rt_buffer_get_64, (%rd90, %r98, %r97, %rd103, %rd12, %rd12, %rd12);
	// inline asm
	ld.s32 	%rd109, [%rd101];
	// inline asm
	call (%rd107), _rt_buffer_get_64, (%rd96, %r98, %r99, %rd109, %rd12, %rd12, %rd12);
	// inline asm
	ld.v4.f32 	{%f255, %f256, %f257, %f258}, [%rd107];
	fma.rn.ftz.f32 	%f350, %f245, %f255, %f350;
	fma.rn.ftz.f32 	%f349, %f245, %f256, %f349;
	fma.rn.ftz.f32 	%f348, %f245, %f257, %f348;
	fma.rn.ftz.f32 	%f347, %f245, %f258, %f347;
	// inline asm
	call (%rd113), _rt_buffer_get_64, (%rd90, %r98, %r97, %rd115, %rd12, %rd12, %rd12);
	// inline asm
	ld.s32 	%rd121, [%rd113];
	// inline asm
	call (%rd119), _rt_buffer_get_64, (%rd96, %r98, %r99, %rd121, %rd12, %rd12, %rd12);
	// inline asm
	ld.v4.f32 	{%f263, %f264, %f265, %f266}, [%rd119];
	fma.rn.ftz.f32 	%f354, %f246, %f263, %f354;
	fma.rn.ftz.f32 	%f353, %f246, %f264, %f353;
	fma.rn.ftz.f32 	%f352, %f246, %f265, %f352;
	fma.rn.ftz.f32 	%f351, %f246, %f266, %f351;
	add.s64 	%rd163, %rd163, 1;
	add.s32 	%r138, %r138, 1;
	setp.lt.s32	%p12, %r138, %r3;
	@%p12 bra 	BB2_16;

	ld.global.v2.u32 	{%r102, %r103}, [launchIndex];
	cvt.u64.u32	%rd130, %r102;
	cvt.u64.u32	%rd131, %r103;
	mov.u64 	%rd134, outputBuffer;
	cvta.global.u64 	%rd129, %rd134;
	// inline asm
	call (%rd128), _rt_buffer_get_64, (%rd129, %r6, %r99, %rd130, %rd131, %rd12, %rd12);
	// inline asm
	sub.ftz.f32 	%f272, %f207, %f41;
	sub.ftz.f32 	%f273, %f272, %f42;
	mul.ftz.f32 	%f274, %f273, %f346;
	mul.ftz.f32 	%f275, %f273, %f345;
	mul.ftz.f32 	%f276, %f273, %f344;
	mul.ftz.f32 	%f277, %f273, %f343;
	rcp.approx.ftz.f32 	%f278, %f342;
	ld.v4.f32 	{%f279, %f280, %f281, %f282}, [%rd128];
	fma.rn.ftz.f32 	%f284, %f274, %f278, %f279;
	fma.rn.ftz.f32 	%f286, %f275, %f278, %f280;
	fma.rn.ftz.f32 	%f288, %f276, %f278, %f281;
	fma.rn.ftz.f32 	%f290, %f277, %f278, %f282;
	rcp.approx.ftz.f32 	%f291, %f340;
	mul.ftz.f32 	%f292, %f42, %f354;
	mul.ftz.f32 	%f293, %f42, %f353;
	mul.ftz.f32 	%f294, %f42, %f352;
	mul.ftz.f32 	%f295, %f42, %f351;
	fma.rn.ftz.f32 	%f296, %f292, %f291, %f284;
	fma.rn.ftz.f32 	%f297, %f293, %f291, %f286;
	fma.rn.ftz.f32 	%f298, %f294, %f291, %f288;
	fma.rn.ftz.f32 	%f299, %f295, %f291, %f290;
	rcp.approx.ftz.f32 	%f300, %f341;
	mul.ftz.f32 	%f301, %f41, %f350;
	mul.ftz.f32 	%f302, %f41, %f349;
	mul.ftz.f32 	%f303, %f41, %f348;
	mul.ftz.f32 	%f304, %f41, %f347;
	fma.rn.ftz.f32 	%f372, %f301, %f300, %f296;
	fma.rn.ftz.f32 	%f371, %f302, %f300, %f297;
	fma.rn.ftz.f32 	%f370, %f303, %f300, %f298;
	fma.rn.ftz.f32 	%f76, %f304, %f300, %f299;
	ld.global.u32 	%r106, [greyscale];
	setp.ne.s32	%p13, %r106, 1;
	@%p13 bra 	BB2_19;

	add.ftz.f32 	%f305, %f372, %f371;
	add.ftz.f32 	%f306, %f370, %f305;
	mov.f32 	%f307, 0f40400000;
	div.approx.ftz.f32 	%f308, %f306, %f307;
	setp.gt.ftz.f32	%p14, %f308, 0f3F800000;
	cvt.ftz.f64.f32	%fd91, %f308;
	fma.rn.f64 	%fd92, %fd91, 0d3FE3333333333333, 0d3FC999999999999A;
	cvt.rn.ftz.f32.f64	%f309, %fd92;
	selp.f32	%f372, 0f3F4CCCCD, %f309, %p14;
	mov.f32 	%f371, %f372;
	mov.f32 	%f370, %f372;

BB2_19:
	mov.f32 	%f80, %f370;
	mov.f32 	%f79, %f371;
	mov.f32 	%f78, %f372;
	ld.global.f32 	%f81, [toobright];
	setp.gt.ftz.f32	%p15, %f78, %f81;
	ld.global.f32 	%f310, [toodim];
	setp.lt.ftz.f32	%p16, %f78, %f310;
	or.pred  	%p17, %p16, %p15;
	mov.f32 	%f365, %f80;
	mov.f32 	%f367, %f79;
	mov.f32 	%f368, %f78;
	@!%p17 bra 	BB2_25;
	bra.uni 	BB2_20;

BB2_20:
	ld.global.v2.u32 	{%r109, %r110}, [launchIndex];
	cvt.u64.u32	%rd137, %r109;
	cvt.u64.u32	%rd138, %r110;
	mov.u64 	%rd141, eyeHitBuffer;
	cvta.global.u64 	%rd136, %rd141;
	mov.u32 	%r108, 80;
	// inline asm
	call (%rd135), _rt_buffer_get_64, (%rd136, %r6, %r108, %rd137, %rd138, %rd12, %rd12);
	// inline asm
	ld.local.f32 	%f311, [%rd1+12];
	add.ftz.f32 	%f312, %f311, 0f43FA0000;
	ld.local.f32 	%f313, [%rd1+16];
	add.ftz.f32 	%f314, %f313, 0f43FA0000;
	ld.local.f32 	%f315, [%rd1+20];
	add.ftz.f32 	%f316, %f315, 0f43FA0000;
	mul.ftz.f32 	%f317, %f312, 0f42480000;
	cvt.rzi.ftz.s32.f32	%r113, %f317;
	cvt.rn.f32.s32	%f318, %r113;
	sub.ftz.f32 	%f319, %f317, %f318;
	abs.ftz.f32 	%f320, %f319;
	setp.gt.ftz.f32	%p18, %f320, 0f3F000000;
	mul.ftz.f32 	%f321, %f314, 0f42480000;
	cvt.rzi.ftz.s32.f32	%r114, %f321;
	cvt.rn.f32.s32	%f322, %r114;
	sub.ftz.f32 	%f323, %f321, %f322;
	abs.ftz.f32 	%f324, %f323;
	setp.gt.ftz.f32	%p19, %f324, 0f3F000000;
	xor.pred  	%p20, %p18, %p19;
	selp.u32	%r115, -1, 0, %p20;
	mul.ftz.f32 	%f325, %f316, 0f42480000;
	cvt.rzi.ftz.s32.f32	%r116, %f325;
	cvt.rn.f32.s32	%f326, %r116;
	sub.ftz.f32 	%f327, %f325, %f326;
	abs.ftz.f32 	%f328, %f327;
	setp.gt.ftz.f32	%p21, %f328, 0f3F000000;
	selp.u32	%r117, -1, 0, %p21;
	add.s32 	%r118, %r117, %r115;
	and.b32  	%r119, %r118, 1;
	setp.eq.b32	%p22, %r119, 1;
	mov.f32 	%f358, %f78;
	mov.f32 	%f360, %f79;
	mov.f32 	%f362, %f80;
	mov.f32 	%f365, %f362;
	mov.f32 	%f367, %f360;
	mov.f32 	%f368, %f358;
	@%p22 bra 	BB2_25;

	@%p15 bra 	BB2_23;
	bra.uni 	BB2_22;

BB2_23:
	mul.ftz.f32 	%f369, %f78, 0f3FC00000;
	cvt.ftz.f64.f32	%fd95, %f80;
	mul.f64 	%fd96, %fd95, 0d3FE554C985F06F69;
	cvt.rn.ftz.f32.f64	%f366, %fd96;
	bra.uni 	BB2_24;

BB2_22:
	cvt.ftz.f64.f32	%fd93, %f78;
	mul.f64 	%fd94, %fd93, 0d3FE554C985F06F69;
	cvt.rn.ftz.f32.f64	%f369, %fd94;
	mul.ftz.f32 	%f366, %f80, 0f3FC00000;

BB2_24:
	mov.f32 	%f365, %f366;
	mov.f32 	%f368, %f369;
	cvt.ftz.f64.f32	%fd97, %f79;
	mul.f64 	%fd98, %fd97, 0d3FE554C985F06F69;
	cvt.rn.ftz.f32.f64	%f367, %fd98;

BB2_25:
	ld.global.v2.u32 	{%r122, %r123}, [launchIndex];
	cvt.u64.u32	%rd144, %r122;
	cvt.u64.u32	%rd145, %r123;
	// inline asm
	call (%rd142), _rt_buffer_get_64, (%rd129, %r6, %r99, %rd144, %rd145, %rd12, %rd12);
	// inline asm
	st.v4.f32 	[%rd142], {%f368, %f367, %f365, %f76};

BB2_29:
	ret;
}

	// .globl	_Z16momentGatherPassv
.visible .entry _Z16momentGatherPassv(

)
{
	.local .align 8 .b8 	__local_depot3[56];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .f32 	%f<74>;
	.reg .b32 	%r<39>;
	.reg .b64 	%rd<33>;


	mov.u64 	%rd32, __local_depot3;
	cvta.local.u64 	%SP, %rd32;
	add.u64 	%rd1, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd1;
	ldu.global.v2.u32 	{%r7, %r8}, [launchIndex];
	cvt.rn.f32.u32	%f12, %r7;
	cvt.rn.f32.u32	%f13, %r8;
	ldu.global.v2.u32 	{%r11, %r12}, [launchDim];
	cvt.rn.f32.u32	%f14, %r11;
	cvt.rn.f32.u32	%f15, %r12;
	div.approx.ftz.f32 	%f16, %f12, %f14;
	div.approx.ftz.f32 	%f17, %f13, %f15;
	fma.rn.ftz.f32 	%f18, %f16, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f19, %f17, 0f40000000, 0fBF800000;
	mov.u64 	%rd3, U;
	ldu.global.v2.f32 	{%f20, %f21}, [U];
	add.s64 	%rd4, %rd3, 8;
	ldu.global.f32 	%f24, [%rd4];
	mov.u64 	%rd5, V;
	ldu.global.v2.f32 	{%f25, %f26}, [V];
	mul.ftz.f32 	%f28, %f19, %f25;
	mul.ftz.f32 	%f30, %f19, %f26;
	add.s64 	%rd6, %rd5, 8;
	ldu.global.f32 	%f31, [%rd6];
	mul.ftz.f32 	%f32, %f19, %f31;
	fma.rn.ftz.f32 	%f33, %f18, %f20, %f28;
	fma.rn.ftz.f32 	%f34, %f18, %f21, %f30;
	fma.rn.ftz.f32 	%f35, %f18, %f24, %f32;
	mov.u64 	%rd7, W;
	ldu.global.v2.f32 	{%f36, %f37}, [W];
	add.ftz.f32 	%f39, %f33, %f36;
	add.ftz.f32 	%f41, %f34, %f37;
	add.s64 	%rd8, %rd7, 8;
	ldu.global.f32 	%f42, [%rd8];
	add.ftz.f32 	%f43, %f35, %f42;
	mul.ftz.f32 	%f44, %f41, %f41;
	fma.rn.ftz.f32 	%f45, %f39, %f39, %f44;
	fma.rn.ftz.f32 	%f46, %f43, %f43, %f45;
	rsqrt.approx.ftz.f32 	%f47, %f46;
	mul.ftz.f32 	%f7, %f39, %f47;
	mul.ftz.f32 	%f8, %f41, %f47;
	mul.ftz.f32 	%f9, %f43, %f47;
	mov.u64 	%rd9, sceneCenter;
	ld.global.v2.f32 	{%f48, %f49}, [eye];
	ld.global.f32 	%f6, [eye+8];
	ldu.global.v2.f32 	{%f50, %f51}, [sceneCenter];
	sub.ftz.f32 	%f53, %f48, %f50;
	sub.ftz.f32 	%f55, %f49, %f51;
	add.s64 	%rd10, %rd9, 8;
	ldu.global.f32 	%f56, [%rd10];
	sub.ftz.f32 	%f57, %f6, %f56;
	mul.ftz.f32 	%f58, %f55, %f55;
	fma.rn.ftz.f32 	%f59, %f53, %f53, %f58;
	fma.rn.ftz.f32 	%f60, %f57, %f57, %f59;
	sqrt.approx.ftz.f32 	%f61, %f60;
	ldu.global.f32 	%f62, [sceneMaxDim];
	mov.f32 	%f63, 0f40000000;
	div.approx.ftz.f32 	%f64, %f62, %f63;
	add.ftz.f32 	%f11, %f61, %f64;
	ldu.global.u32 	%r5, [quickRayType];
	ldu.global.f32 	%f10, [sceneEpsilon];
	mov.u32 	%r15, 1065353216;
	st.local.u32 	[%rd2+8], %r15;
	mov.f32 	%f65, 0f3F800000;
	st.local.v2.f32 	[%rd2], {%f65, %f65};
	mov.u32 	%r16, 1008981770;
	st.local.u32 	[%rd2+36], %r16;
	mov.u32 	%r17, 1000593162;
	st.local.u32 	[%rd2+32], %r17;
	st.local.u32 	[%rd2+28], %r17;
	mov.u32 	%r38, 0;
	st.local.u32 	[%rd2+40], %r38;
	ldu.global.u32 	%r4, [topObject];
	mov.u32 	%r6, 56;
	// inline asm
	call _rt_trace_64, (%r4, %f48, %f49, %f6, %f7, %f8, %f9, %r5, %f10, %f11, %rd1, %r6);
	// inline asm
	ld.local.u32 	%r1, [%rd2+24];
	setp.eq.s32	%p1, %r1, -1;
	@%p1 bra 	BB3_4;

	ld.global.u32 	%r20, [NUM_MOMENTS];
	mov.f32 	%f72, 0f00000000;
	mov.f32 	%f73, %f72;
	setp.lt.s32	%p2, %r20, 1;
	@%p2 bra 	BB3_3;

BB3_2:
	ld.global.u32 	%r23, [numTriangles];
	mad.lo.s32 	%r24, %r23, %r38, %r1;
	cvt.u64.u32	%rd13, %r24;
	mov.u64 	%rd17, MomentBuffer;
	cvta.global.u64 	%rd12, %rd17;
	mov.u32 	%r21, 1;
	mov.u32 	%r22, 4;
	mov.u64 	%rd16, 0;
	// inline asm
	call (%rd11), _rt_buffer_get_64, (%rd12, %r21, %r22, %rd13, %rd16, %rd16, %rd16);
	// inline asm
	ld.f32 	%f68, [%rd11];
	setp.gt.ftz.f32	%p3, %f68, %f73;
	selp.f32	%f73, %f68, %f73, %p3;
	ld.global.u32 	%r25, [NUM_MOMENTS];
	add.s32 	%r38, %r38, 1;
	setp.lt.s32	%p4, %r38, %r25;
	mov.f32 	%f72, %f73;
	@%p4 bra 	BB3_2;

BB3_3:
	ld.global.v2.u32 	{%r28, %r29}, [launchIndex];
	cvt.u64.u32	%rd20, %r28;
	cvt.u64.u32	%rd21, %r29;
	mov.u64 	%rd24, outputBuffer;
	cvta.global.u64 	%rd19, %rd24;
	mov.u32 	%r26, 2;
	mov.u32 	%r27, 16;
	mov.u64 	%rd23, 0;
	// inline asm
	call (%rd18), _rt_buffer_get_64, (%rd19, %r26, %r27, %rd20, %rd21, %rd23, %rd23);
	// inline asm
	st.v4.f32 	[%rd18], {%f72, %f72, %f72, %f72};
	bra.uni 	BB3_5;

BB3_4:
	ld.global.v2.u32 	{%r34, %r35}, [launchIndex];
	cvt.u64.u32	%rd27, %r34;
	cvt.u64.u32	%rd28, %r35;
	mov.u64 	%rd31, outputBuffer;
	cvta.global.u64 	%rd26, %rd31;
	mov.u32 	%r32, 2;
	mov.u32 	%r33, 16;
	mov.u64 	%rd30, 0;
	// inline asm
	call (%rd25), _rt_buffer_get_64, (%rd26, %r32, %r33, %rd27, %rd28, %rd30, %rd30);
	// inline asm
	mov.f32 	%f70, 0f00000000;
	st.v4.f32 	[%rd25], {%f70, %f70, %f70, %f65};

BB3_5:
	ret;
}


