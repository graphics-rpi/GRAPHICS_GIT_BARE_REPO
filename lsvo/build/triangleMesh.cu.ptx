//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21554848
// Cuda compilation tools, release 8.0, V8.0.61
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_20
.address_size 64

	// .globl	_Z13meshIntersecti
.global .align 1 .b8 vertexBuffer[1];
.global .align 1 .b8 normalBuffer[1];
.global .align 1 .b8 texcoordBuffer[1];
.global .align 1 .b8 vertexIndexBuffer[1];
.global .align 1 .b8 normalIndexBuffer[1];
.global .align 1 .b8 texcoordIndexBuffer[1];
.global .align 1 .b8 centroidIndexBuffer[1];
.global .align 1 .b8 patchIndexBuffer[1];
.global .align 1 .b8 materialBuffer[1];
.global .align 8 .b8 texcoord[12];
.global .align 8 .b8 geometric_normal[12];
.global .align 8 .b8 shading_normal[12];
.global .align 8 .b8 centroid[12];
.global .align 8 .b8 rayDirection[12];
.global .align 4 .u32 patch;
.global .align 4 .u32 centroidNumber;
.global .align 4 .u32 triNumber;
.global .align 4 .f32 betaAttr;
.global .align 4 .f32 gammaAttr;
.global .align 4 .b8 ray[36];
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo8texcoordE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8centroidE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12rayDirectionE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5patchE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14centroidNumberE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9triNumberE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8betaAttrE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9gammaAttrE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8texcoordE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8centroidE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12rayDirectionE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5patchE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14centroidNumberE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9triNumberE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8betaAttrE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9gammaAttrE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum8texcoordE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16geometric_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8centroidE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12rayDirectionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5patchE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14centroidNumberE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9triNumberE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8betaAttrE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9gammaAttrE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic8texcoordE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 99, 111, 111, 114, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic8centroidE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 99, 101, 110, 116, 114, 111, 105, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12rayDirectionE[23] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 114, 97, 121, 68, 105, 114, 101, 99, 116, 105, 111, 110, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic5patchE[16] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 112, 97, 116, 99, 104, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14centroidNumberE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 99, 101, 110, 116, 114, 111, 105, 100, 78, 117, 109, 98, 101, 114, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic9triNumberE[20] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 114, 105, 78, 117, 109, 98, 101, 114, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic8betaAttrE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 98, 101, 116, 97, 65, 116, 116, 114, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic9gammaAttrE[20] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 97, 109, 109, 97, 65, 116, 116, 114, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation8texcoordE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8centroidE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12rayDirectionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5patchE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14centroidNumberE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9triNumberE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8betaAttrE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9gammaAttrE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];

.visible .entry _Z13meshIntersecti(
	.param .u32 _Z13meshIntersecti_param_0
)
{
	.reg .pred 	%p<23>;
	.reg .f32 	%f<144>;
	.reg .b32 	%r<52>;
	.reg .b64 	%rd<112>;


	ld.param.u32 	%r7, [_Z13meshIntersecti_param_0];
	cvt.s64.s32	%rd3, %r7;
	mov.u64 	%rd25, vertexIndexBuffer;
	cvta.global.u64 	%rd2, %rd25;
	mov.u32 	%r14, 1;
	mov.u32 	%r15, 12;
	mov.u64 	%rd24, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r14, %r15, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	ld.s32 	%rd9, [%rd1];
	mov.u64 	%rd26, vertexBuffer;
	cvta.global.u64 	%rd8, %rd26;
	ld.s32 	%rd15, [%rd1+4];
	ld.s32 	%rd21, [%rd1+8];
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r14, %r15, %rd9, %rd24, %rd24, %rd24);
	// inline asm
	ld.f32 	%f3, [%rd7+8];
	ld.f32 	%f2, [%rd7+4];
	ld.f32 	%f1, [%rd7];
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd8, %r14, %r15, %rd15, %rd24, %rd24, %rd24);
	// inline asm
	ld.f32 	%f6, [%rd13+8];
	ld.f32 	%f5, [%rd13+4];
	ld.f32 	%f4, [%rd13];
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd8, %r14, %r15, %rd21, %rd24, %rd24, %rd24);
	// inline asm
	sub.ftz.f32 	%f37, %f4, %f1;
	sub.ftz.f32 	%f38, %f5, %f2;
	sub.ftz.f32 	%f39, %f6, %f3;
	ld.f32 	%f9, [%rd19+8];
	ld.f32 	%f8, [%rd19+4];
	ld.f32 	%f7, [%rd19];
	sub.ftz.f32 	%f40, %f1, %f7;
	sub.ftz.f32 	%f41, %f2, %f8;
	sub.ftz.f32 	%f42, %f3, %f9;
	mul.ftz.f32 	%f43, %f38, %f42;
	mul.ftz.f32 	%f44, %f39, %f41;
	sub.ftz.f32 	%f10, %f43, %f44;
	mul.ftz.f32 	%f45, %f39, %f40;
	mul.ftz.f32 	%f46, %f37, %f42;
	sub.ftz.f32 	%f11, %f45, %f46;
	mul.ftz.f32 	%f47, %f37, %f41;
	mul.ftz.f32 	%f48, %f38, %f40;
	sub.ftz.f32 	%f12, %f47, %f48;
	ld.global.f32 	%f13, [ray+12];
	ld.global.f32 	%f14, [ray+16];
	mul.ftz.f32 	%f49, %f14, %f11;
	fma.rn.ftz.f32 	%f50, %f13, %f10, %f49;
	ld.global.f32 	%f15, [ray+20];
	fma.rn.ftz.f32 	%f16, %f15, %f12, %f50;
	rcp.approx.ftz.f32 	%f17, %f16;
	ld.global.f32 	%f51, [ray];
	sub.ftz.f32 	%f18, %f1, %f51;
	ld.global.f32 	%f52, [ray+4];
	sub.ftz.f32 	%f19, %f2, %f52;
	ld.global.f32 	%f53, [ray+8];
	sub.ftz.f32 	%f20, %f3, %f53;
	mul.ftz.f32 	%f54, %f11, %f19;
	fma.rn.ftz.f32 	%f55, %f10, %f18, %f54;
	fma.rn.ftz.f32 	%f56, %f12, %f20, %f55;
	mul.ftz.f32 	%f21, %f17, %f56;
	ld.global.f32 	%f57, [ray+32];
	setp.lt.ftz.f32	%p1, %f21, %f57;
	ld.global.f32 	%f58, [ray+28];
	setp.gt.ftz.f32	%p2, %f21, %f58;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB0_10;
	bra.uni 	BB0_1;

BB0_1:
	mul.ftz.f32 	%f59, %f19, %f15;
	mul.ftz.f32 	%f60, %f20, %f14;
	sub.ftz.f32 	%f22, %f59, %f60;
	mul.ftz.f32 	%f61, %f18, %f15;
	mul.ftz.f32 	%f62, %f20, %f13;
	sub.ftz.f32 	%f23, %f62, %f61;
	mul.ftz.f32 	%f63, %f19, %f13;
	mul.ftz.f32 	%f64, %f18, %f14;
	sub.ftz.f32 	%f24, %f64, %f63;
	mul.ftz.f32 	%f67, %f41, %f23;
	fma.rn.ftz.f32 	%f68, %f40, %f22, %f67;
	fma.rn.ftz.f32 	%f25, %f42, %f24, %f68;
	mul.ftz.f32 	%f26, %f17, %f25;
	setp.ltu.ftz.f32	%p4, %f26, 0f00000000;
	@%p4 bra 	BB0_10;

	sub.ftz.f32 	%f140, %f6, %f3;
	sub.ftz.f32 	%f139, %f4, %f1;
	mul.ftz.f32 	%f72, %f38, %f23;
	fma.rn.ftz.f32 	%f73, %f139, %f22, %f72;
	fma.rn.ftz.f32 	%f75, %f140, %f24, %f73;
	mul.ftz.f32 	%f27, %f17, %f75;
	add.ftz.f32 	%f76, %f25, %f75;
	mul.ftz.f32 	%f77, %f16, %f76;
	setp.ge.ftz.f32	%p5, %f27, 0f00000000;
	mul.ftz.f32 	%f78, %f16, %f16;
	setp.le.ftz.f32	%p6, %f77, %f78;
	and.pred  	%p7, %p6, %p5;
	@!%p7 bra 	BB0_10;
	bra.uni 	BB0_3;

BB0_3:
	// inline asm
	call (%r16), _rt_potential_intersection, (%f21);
	// inline asm
	setp.eq.s32	%p8, %r16, 0;
	@%p8 bra 	BB0_10;

	ld.param.u32 	%r51, [_Z13meshIntersecti_param_0];
	ld.global.f32 	%f80, [ray+20];
	ld.global.f32 	%f81, [ray+16];
	ld.global.f32 	%f82, [ray+12];
	st.global.v2.f32 	[rayDirection], {%f82, %f81};
	st.global.f32 	[rayDirection+8], %f80;
	add.ftz.f32 	%f83, %f1, %f4;
	add.ftz.f32 	%f84, %f83, %f7;
	add.ftz.f32 	%f85, %f2, %f5;
	add.ftz.f32 	%f86, %f85, %f8;
	add.ftz.f32 	%f87, %f3, %f6;
	add.ftz.f32 	%f88, %f87, %f9;
	mul.ftz.f32 	%f89, %f88, 0f3EAAAAAB;
	mul.ftz.f32 	%f90, %f86, 0f3EAAAAAB;
	mul.ftz.f32 	%f91, %f84, 0f3EAAAAAB;
	st.global.v2.f32 	[centroid], {%f91, %f90};
	st.global.f32 	[centroid+8], %f89;
	mov.u64 	%rd50, centroidIndexBuffer;
	cvta.global.u64 	%rd28, %rd50;
	mov.u32 	%r20, 4;
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd28, %r14, %r20, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	ld.u32 	%r25, [%rd27];
	st.global.u32 	[centroidNumber], %r25;
	mov.u64 	%rd51, patchIndexBuffer;
	cvta.global.u64 	%rd34, %rd51;
	// inline asm
	call (%rd33), _rt_buffer_get_64, (%rd34, %r14, %r20, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	ld.u32 	%r26, [%rd33];
	st.global.u32 	[patch], %r26;
	st.global.u32 	[triNumber], %r51;
	mov.u64 	%rd52, normalIndexBuffer;
	cvta.global.u64 	%rd40, %rd52;
	// inline asm
	call (%rd39), _rt_buffer_get_64, (%rd40, %r14, %r15, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	ld.u32 	%r3, [%rd39+8];
	ld.u32 	%r2, [%rd39+4];
	ld.u32 	%r1, [%rd39];
	mov.u64 	%rd53, normalBuffer;
	cvta.global.u64 	%rd49, %rd53;
	// inline asm
	call (%rd45, %rd46, %rd47, %rd48), _rt_buffer_get_size_64, (%rd49, %r14, %r15);
	// inline asm
	cvt.u32.u64	%r27, %rd45;
	setp.eq.s32	%p9, %r27, 0;
	setp.lt.s32	%p10, %r1, 0;
	or.pred  	%p11, %p9, %p10;
	setp.lt.s32	%p12, %r2, 0;
	or.pred  	%p13, %p11, %p12;
	setp.lt.s32	%p14, %r3, 0;
	or.pred  	%p15, %p13, %p14;
	neg.ftz.f32 	%f28, %f10;
	neg.ftz.f32 	%f29, %f11;
	neg.ftz.f32 	%f30, %f12;
	mov.f32 	%f141, %f28;
	mov.f32 	%f142, %f29;
	mov.f32 	%f143, %f30;
	@%p15 bra 	BB0_6;

	cvt.s64.s32	%rd56, %r1;
	// inline asm
	call (%rd54), _rt_buffer_get_64, (%rd49, %r14, %r15, %rd56, %rd24, %rd24, %rd24);
	// inline asm
	ld.f32 	%f92, [%rd54+8];
	ld.f32 	%f93, [%rd54+4];
	ld.f32 	%f94, [%rd54];
	cvt.s64.s32	%rd62, %r2;
	// inline asm
	call (%rd60), _rt_buffer_get_64, (%rd49, %r14, %r15, %rd62, %rd24, %rd24, %rd24);
	// inline asm
	ld.f32 	%f95, [%rd60+8];
	ld.f32 	%f96, [%rd60+4];
	ld.f32 	%f97, [%rd60];
	cvt.s64.s32	%rd68, %r3;
	// inline asm
	call (%rd66), _rt_buffer_get_64, (%rd49, %r14, %r15, %rd68, %rd24, %rd24, %rd24);
	// inline asm
	ld.f32 	%f98, [%rd66+8];
	ld.f32 	%f99, [%rd66+4];
	ld.f32 	%f100, [%rd66];
	mul.ftz.f32 	%f101, %f27, %f100;
	mul.ftz.f32 	%f102, %f27, %f99;
	mul.ftz.f32 	%f103, %f27, %f98;
	fma.rn.ftz.f32 	%f104, %f26, %f97, %f101;
	fma.rn.ftz.f32 	%f105, %f26, %f96, %f102;
	fma.rn.ftz.f32 	%f106, %f26, %f95, %f103;
	mov.f32 	%f107, 0f3F800000;
	sub.ftz.f32 	%f108, %f107, %f26;
	sub.ftz.f32 	%f109, %f108, %f27;
	fma.rn.ftz.f32 	%f110, %f109, %f94, %f104;
	fma.rn.ftz.f32 	%f111, %f109, %f93, %f105;
	fma.rn.ftz.f32 	%f112, %f109, %f92, %f106;
	mul.ftz.f32 	%f113, %f111, %f111;
	fma.rn.ftz.f32 	%f114, %f110, %f110, %f113;
	fma.rn.ftz.f32 	%f115, %f112, %f112, %f114;
	rsqrt.approx.ftz.f32 	%f116, %f115;
	mul.ftz.f32 	%f31, %f116, %f110;
	mul.ftz.f32 	%f32, %f116, %f111;
	mul.ftz.f32 	%f33, %f116, %f112;
	mov.f32 	%f141, %f31;
	mov.f32 	%f142, %f32;
	mov.f32 	%f143, %f33;

BB0_6:
	mov.f32 	%f36, %f143;
	mov.f32 	%f35, %f142;
	mov.f32 	%f34, %f141;
	st.global.v2.f32 	[shading_normal], {%f34, %f35};
	st.global.f32 	[shading_normal+8], %f36;
	st.global.v2.f32 	[geometric_normal], {%f28, %f29};
	st.global.f32 	[geometric_normal+8], %f30;
	mov.u64 	%rd84, texcoordIndexBuffer;
	cvta.global.u64 	%rd74, %rd84;
	// inline asm
	call (%rd73), _rt_buffer_get_64, (%rd74, %r14, %r15, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	ld.u32 	%r6, [%rd73+8];
	ld.u32 	%r5, [%rd73+4];
	ld.u32 	%r4, [%rd73];
	mov.u64 	%rd85, texcoordBuffer;
	cvta.global.u64 	%rd83, %rd85;
	mov.u32 	%r37, 8;
	// inline asm
	call (%rd79, %rd80, %rd81, %rd82), _rt_buffer_get_size_64, (%rd83, %r14, %r37);
	// inline asm
	cvt.u32.u64	%r38, %rd79;
	setp.eq.s32	%p16, %r38, 0;
	setp.lt.s32	%p17, %r4, 0;
	or.pred  	%p18, %p16, %p17;
	setp.lt.s32	%p19, %r5, 0;
	or.pred  	%p20, %p18, %p19;
	setp.lt.s32	%p21, %r6, 0;
	or.pred  	%p22, %p20, %p21;
	@%p22 bra 	BB0_8;
	bra.uni 	BB0_7;

BB0_8:
	mov.u32 	%r46, 0;
	st.global.u32 	[texcoord+8], %r46;
	mov.f32 	%f138, 0f00000000;
	st.global.v2.f32 	[texcoord], {%f138, %f138};
	bra.uni 	BB0_9;

BB0_7:
	cvt.s64.s32	%rd88, %r4;
	// inline asm
	call (%rd86), _rt_buffer_get_64, (%rd83, %r14, %r37, %rd88, %rd24, %rd24, %rd24);
	// inline asm
	ld.v2.f32 	{%f117, %f118}, [%rd86];
	cvt.s64.s32	%rd94, %r5;
	// inline asm
	call (%rd92), _rt_buffer_get_64, (%rd83, %r14, %r37, %rd94, %rd24, %rd24, %rd24);
	// inline asm
	ld.v2.f32 	{%f121, %f122}, [%rd92];
	cvt.s64.s32	%rd100, %r6;
	// inline asm
	call (%rd98), _rt_buffer_get_64, (%rd83, %r14, %r37, %rd100, %rd24, %rd24, %rd24);
	// inline asm
	ld.v2.f32 	{%f125, %f126}, [%rd98];
	mul.ftz.f32 	%f129, %f27, %f125;
	mul.ftz.f32 	%f130, %f27, %f126;
	fma.rn.ftz.f32 	%f131, %f26, %f121, %f129;
	fma.rn.ftz.f32 	%f132, %f26, %f122, %f130;
	mov.f32 	%f133, 0f3F800000;
	sub.ftz.f32 	%f134, %f133, %f26;
	sub.ftz.f32 	%f135, %f134, %f27;
	fma.rn.ftz.f32 	%f136, %f135, %f118, %f132;
	fma.rn.ftz.f32 	%f137, %f135, %f117, %f131;
	st.global.v2.f32 	[texcoord], {%f137, %f136};
	mov.u32 	%r45, 0;
	st.global.u32 	[texcoord+8], %r45;

BB0_9:
	st.global.f32 	[betaAttr], %f26;
	st.global.f32 	[gammaAttr], %f27;
	mov.u64 	%rd111, materialBuffer;
	cvta.global.u64 	%rd106, %rd111;
	// inline asm
	call (%rd105), _rt_buffer_get_64, (%rd106, %r14, %r20, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	ld.u32 	%r50, [%rd105];
	// inline asm
	call (%r49), _rt_report_intersection, (%r50);
	// inline asm

BB0_10:
	ret;
}

	// .globl	_Z10meshBoundsiPf
.visible .entry _Z10meshBoundsiPf(
	.param .u32 _Z10meshBoundsiPf_param_0,
	.param .u64 _Z10meshBoundsiPf_param_1
)
{
	.reg .f32 	%f<22>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<29>;


	ld.param.u64 	%rd25, [_Z10meshBoundsiPf_param_1];
	ld.param.s32 	%rd3, [_Z10meshBoundsiPf_param_0];
	mov.u64 	%rd26, vertexIndexBuffer;
	cvta.global.u64 	%rd2, %rd26;
	mov.u32 	%r7, 1;
	mov.u32 	%r8, 12;
	mov.u64 	%rd24, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r7, %r8, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	ld.s32 	%rd9, [%rd1];
	mov.u64 	%rd27, vertexBuffer;
	cvta.global.u64 	%rd8, %rd27;
	ld.s32 	%rd15, [%rd1+4];
	ld.s32 	%rd21, [%rd1+8];
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r7, %r8, %rd9, %rd24, %rd24, %rd24);
	// inline asm
	ld.f32 	%f1, [%rd7+8];
	ld.f32 	%f2, [%rd7+4];
	ld.f32 	%f3, [%rd7];
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd8, %r7, %r8, %rd15, %rd24, %rd24, %rd24);
	// inline asm
	ld.f32 	%f4, [%rd13+8];
	ld.f32 	%f5, [%rd13+4];
	ld.f32 	%f6, [%rd13];
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd8, %r7, %r8, %rd21, %rd24, %rd24, %rd24);
	// inline asm
	ld.f32 	%f7, [%rd19+8];
	ld.f32 	%f8, [%rd19+4];
	ld.f32 	%f9, [%rd19];
	cvta.to.global.u64 	%rd28, %rd25;
	min.ftz.f32 	%f10, %f3, %f6;
	min.ftz.f32 	%f11, %f2, %f5;
	min.ftz.f32 	%f12, %f1, %f4;
	min.ftz.f32 	%f13, %f10, %f9;
	min.ftz.f32 	%f14, %f11, %f8;
	min.ftz.f32 	%f15, %f12, %f7;
	st.global.f32 	[%rd28], %f13;
	st.global.f32 	[%rd28+4], %f14;
	st.global.f32 	[%rd28+8], %f15;
	max.ftz.f32 	%f16, %f3, %f6;
	max.ftz.f32 	%f17, %f2, %f5;
	max.ftz.f32 	%f18, %f1, %f4;
	max.ftz.f32 	%f19, %f16, %f9;
	max.ftz.f32 	%f20, %f17, %f8;
	max.ftz.f32 	%f21, %f18, %f7;
	st.global.f32 	[%rd28+12], %f19;
	st.global.f32 	[%rd28+16], %f20;
	st.global.f32 	[%rd28+20], %f21;
	ret;
}


