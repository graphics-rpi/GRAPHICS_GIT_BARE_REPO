//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21554848
// Cuda compilation tools, release 8.0, V8.0.61
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_20
.address_size 64

	// .globl	_Z12shadowAnyHitv
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 1 .b8 dirLightBuffer[1];
.global .align 1 .b8 eyeHitBuffer[1];
.global .align 1 .b8 outputBuffer[1];
.global .align 8 .b8 topObject[4];
.global .align 8 .b8 topShadower[4];
.global .align 8 .b8 eye[12];
.global .align 4 .b8 U[12];
.global .align 4 .b8 V[12];
.global .align 4 .b8 W[12];
.global .align 4 .b8 eyePayload[32];
.global .align 8 .b8 shadowPayload[16];
.global .align 8 .b8 launchIndex[8];
.global .align 8 .b8 launchDim[8];
.global .align 4 .b8 shadingNormal[12];
.global .align 4 .b8 geometricNormal[12];
.global .align 4 .b8 centroid[12];
.global .align 4 .u32 centroidNumber;
.global .align 4 .u32 quickRayType;
.global .align 4 .u32 quickShadowRayType;
.global .align 4 .b8 sceneCenter[12];
.global .align 4 .f32 sceneEpsilon;
.global .align 4 .f32 sceneMaxDim;
.global .align 4 .u32 backfaceCulling;
.global .align 4 .b8 Kd[12];
.global .align 4 .b8 Ks[12];
.global .align 4 .b8 Td[12];
.global .align 4 .b8 Ts[12];
.global .align 4 .b8 currentRay[36];
.global .align 4 .f32 hitT;
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo9topObjectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11topShadowerE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3eyeE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1UE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1VE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1WE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10eyePayloadE[8] = {82, 97, 121, 0, 32, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13shadowPayloadE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11launchIndexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9launchDimE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13shadingNormalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15geometricNormalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8centroidE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14centroidNumberE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12quickRayTypeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo18quickShadowRayTypeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11sceneCenterE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12sceneEpsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11sceneMaxDimE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15backfaceCullingE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2KdE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2KsE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2TdE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2TsE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10currentRayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4hitTE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9topObjectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11topShadowerE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3eyeE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1UE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1VE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1WE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10eyePayloadE[11] = {69, 121, 101, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13shadowPayloadE[14] = {83, 104, 97, 100, 111, 119, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11launchIndexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9launchDimE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13shadingNormalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15geometricNormalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8centroidE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14centroidNumberE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12quickRayTypeE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename18quickShadowRayTypeE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11sceneCenterE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12sceneEpsilonE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11sceneMaxDimE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15backfaceCullingE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2KdE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2KsE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2TdE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2TsE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10currentRayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename4hitTE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum9topObjectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11topShadowerE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3eyeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1UE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1VE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1WE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10eyePayloadE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13shadowPayloadE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11launchIndexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9launchDimE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13shadingNormalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15geometricNormalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8centroidE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14centroidNumberE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12quickRayTypeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum18quickShadowRayTypeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11sceneCenterE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12sceneEpsilonE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11sceneMaxDimE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15backfaceCullingE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2KdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2KsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2TdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2TsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10currentRayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4hitTE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic9topObjectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11topShadowerE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3eyeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1UE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1VE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1WE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10eyePayloadE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic13shadowPayloadE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic11launchIndexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic9launchDimE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic13shadingNormalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic15geometricNormalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic8centroidE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 99, 101, 110, 116, 114, 111, 105, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14centroidNumberE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 99, 101, 110, 116, 114, 111, 105, 100, 78, 117, 109, 98, 101, 114, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12quickRayTypeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic18quickShadowRayTypeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11sceneCenterE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12sceneEpsilonE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11sceneMaxDimE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15backfaceCullingE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2KdE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2KsE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2TdE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2TsE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10currentRayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic4hitTE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation9topObjectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11topShadowerE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3eyeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1UE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1VE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1WE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10eyePayloadE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13shadowPayloadE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11launchIndexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9launchDimE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13shadingNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15geometricNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8centroidE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14centroidNumberE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12quickRayTypeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation18quickShadowRayTypeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11sceneCenterE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12sceneEpsilonE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11sceneMaxDimE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15backfaceCullingE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2KdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2KsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2TdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2TsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10currentRayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4hitTE[1];
.global .align 1 .b8 $str[23] = {99, 101, 110, 116, 114, 111, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 58, 45, 80, 32, 37, 100, 0};

.visible .entry _Z12shadowAnyHitv(

)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<20>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<9>;


	ldu.global.f32 	%f4, [Kd];
	mov.u64 	%rd1, Kd;
	add.s64 	%rd2, %rd1, 4;
	ldu.global.f32 	%f5, [%rd2];
	max.ftz.f32 	%f6, %f4, %f5;
	add.s64 	%rd3, %rd1, 8;
	ldu.global.f32 	%f7, [%rd3];
	max.ftz.f32 	%f8, %f6, %f7;
	setp.gt.ftz.f32	%p1, %f8, 0f00000000;
	@%p1 bra 	BB0_3;
	bra.uni 	BB0_1;

BB0_3:
	mov.u32 	%r1, 0;
	st.global.u32 	[shadowPayload+8], %r1;
	mov.f32 	%f19, 0f00000000;
	st.global.v2.f32 	[shadowPayload], {%f19, %f19};
	// inline asm
	call _rt_terminate_ray, ();
	// inline asm
	bra.uni 	BB0_4;

BB0_1:
	ldu.global.f32 	%f1, [Ts];
	mov.u64 	%rd4, Ts;
	add.s64 	%rd5, %rd4, 4;
	ldu.global.f32 	%f2, [%rd5];
	max.ftz.f32 	%f9, %f1, %f2;
	add.s64 	%rd6, %rd4, 8;
	ldu.global.f32 	%f3, [%rd6];
	max.ftz.f32 	%f10, %f9, %f3;
	setp.leu.ftz.f32	%p2, %f10, 0f00000000;
	@%p2 bra 	BB0_4;

	mov.u64 	%rd7, shadowPayload;
	ldu.global.v2.f32 	{%f11, %f12}, [shadowPayload];
	mul.ftz.f32 	%f14, %f2, %f12;
	mul.ftz.f32 	%f16, %f1, %f11;
	add.s64 	%rd8, %rd7, 8;
	ldu.global.f32 	%f17, [%rd8];
	st.global.v2.f32 	[shadowPayload], {%f16, %f14};
	mul.ftz.f32 	%f18, %f3, %f17;
	st.global.f32 	[shadowPayload+8], %f18;
	// inline asm
	call _rt_ignore_intersection, ();
	// inline asm

BB0_4:
	ret;
}

	// .globl	_Z10shadowMissv
.visible .entry _Z10shadowMissv(

)
{



	ret;
}

	// .globl	_Z9quickPassv
.visible .entry _Z9quickPassv(

)
{
	.local .align 8 .b8 	__local_depot2[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .f32 	%f<61>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<27>;


	mov.u64 	%rd26, __local_depot2;
	cvta.local.u64 	%SP, %rd26;
	add.u64 	%rd2, %SP, 8;
	cvta.to.local.u64 	%rd1, %rd2;
	ldu.global.v2.u32 	{%r6, %r7}, [launchIndex];
	cvt.rn.f32.u32	%f9, %r6;
	cvt.rn.f32.u32	%f10, %r7;
	ldu.global.v2.u32 	{%r10, %r11}, [launchDim];
	cvt.rn.f32.u32	%f11, %r10;
	cvt.rn.f32.u32	%f12, %r11;
	div.approx.ftz.f32 	%f13, %f9, %f11;
	div.approx.ftz.f32 	%f14, %f10, %f12;
	fma.rn.ftz.f32 	%f15, %f13, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f16, %f14, 0f40000000, 0fBF800000;
	ldu.global.f32 	%f17, [U];
	mov.u64 	%rd3, U;
	add.s64 	%rd4, %rd3, 4;
	ldu.global.f32 	%f18, [%rd4];
	add.s64 	%rd5, %rd3, 8;
	ldu.global.f32 	%f19, [%rd5];
	mov.u64 	%rd6, V;
	ldu.global.f32 	%f20, [V];
	mul.ftz.f32 	%f21, %f16, %f20;
	add.s64 	%rd7, %rd6, 4;
	ldu.global.f32 	%f22, [%rd7];
	mul.ftz.f32 	%f23, %f16, %f22;
	add.s64 	%rd8, %rd6, 8;
	ldu.global.f32 	%f24, [%rd8];
	mul.ftz.f32 	%f25, %f16, %f24;
	fma.rn.ftz.f32 	%f26, %f15, %f17, %f21;
	fma.rn.ftz.f32 	%f27, %f15, %f18, %f23;
	fma.rn.ftz.f32 	%f28, %f15, %f19, %f25;
	mov.u64 	%rd9, W;
	ldu.global.f32 	%f29, [W];
	add.ftz.f32 	%f30, %f26, %f29;
	add.s64 	%rd10, %rd9, 4;
	ldu.global.f32 	%f31, [%rd10];
	add.ftz.f32 	%f32, %f27, %f31;
	add.s64 	%rd11, %rd9, 8;
	ldu.global.f32 	%f33, [%rd11];
	add.ftz.f32 	%f34, %f28, %f33;
	mul.ftz.f32 	%f35, %f32, %f32;
	fma.rn.ftz.f32 	%f36, %f30, %f30, %f35;
	fma.rn.ftz.f32 	%f37, %f34, %f34, %f36;
	rsqrt.approx.ftz.f32 	%f38, %f37;
	mul.ftz.f32 	%f4, %f30, %f38;
	mul.ftz.f32 	%f5, %f32, %f38;
	mul.ftz.f32 	%f6, %f34, %f38;
	mov.u64 	%rd12, sceneCenter;
	ldu.global.f32 	%f39, [sceneCenter];
	ld.global.v2.f32 	{%f40, %f41}, [eye];
	ld.global.f32 	%f3, [eye+8];
	sub.ftz.f32 	%f42, %f40, %f39;
	add.s64 	%rd13, %rd12, 4;
	ldu.global.f32 	%f43, [%rd13];
	sub.ftz.f32 	%f44, %f41, %f43;
	add.s64 	%rd14, %rd12, 8;
	ldu.global.f32 	%f45, [%rd14];
	sub.ftz.f32 	%f46, %f3, %f45;
	mul.ftz.f32 	%f47, %f44, %f44;
	fma.rn.ftz.f32 	%f48, %f42, %f42, %f47;
	fma.rn.ftz.f32 	%f49, %f46, %f46, %f48;
	sqrt.approx.ftz.f32 	%f50, %f49;
	ldu.global.f32 	%f51, [sceneMaxDim];
	mov.f32 	%f52, 0f40000000;
	div.approx.ftz.f32 	%f53, %f51, %f52;
	add.ftz.f32 	%f8, %f50, %f53;
	ldu.global.u32 	%r3, [quickRayType];
	ldu.global.f32 	%f7, [sceneEpsilon];
	mov.f32 	%f54, 0f3F800000;
	st.local.v2.f32 	[%rd1], {%f54, %f54};
	mov.f32 	%f55, 0f3C23D70A;
	mov.f32 	%f56, 0f3BA3D70A;
	st.local.v2.f32 	[%rd1+16], {%f56, %f55};
	st.local.v2.f32 	[%rd1+8], {%f54, %f56};
	mov.u32 	%r14, 0;
	st.local.u32 	[%rd1+24], %r14;
	ldu.global.u32 	%r2, [topObject];
	mov.u32 	%r4, 32;
	// inline asm
	call _rt_trace_64, (%r2, %f40, %f41, %f3, %f4, %f5, %f6, %r3, %f7, %f8, %rd2, %r4);
	// inline asm
	ld.local.u32 	%r1, [%rd1+28];
	// inline asm
	call (%r5), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p1, %r5, 0;
	@%p1 bra 	BB2_2;

	add.u64 	%rd15, %SP, 0;
	cvta.to.local.u64 	%rd16, %rd15;
	st.local.u32 	[%rd16], %r1;
	mov.u64 	%rd17, $str;
	cvta.global.u64 	%rd18, %rd17;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd18;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd15;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r15, [retval0+0];
	
	//{
	}// Callseq End 0

BB2_2:
	ld.global.v2.u32 	{%r18, %r19}, [launchIndex];
	cvt.u64.u32	%rd21, %r18;
	cvt.u64.u32	%rd22, %r19;
	mov.u64 	%rd25, outputBuffer;
	cvta.global.u64 	%rd20, %rd25;
	mov.u32 	%r16, 2;
	mov.u32 	%r17, 16;
	mov.u64 	%rd24, 0;
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd20, %r16, %r17, %rd21, %rd22, %rd24, %rd24);
	// inline asm
	ld.local.f32 	%f57, [%rd1+20];
	ld.local.f32 	%f58, [%rd1+16];
	ld.local.f32 	%f59, [%rd1+12];
	st.v4.f32 	[%rd19], {%f59, %f58, %f57, %f54};
	ret;
}

	// .globl	_Z13quickPassMissv
.visible .entry _Z13quickPassMissv(

)
{
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<8>;


	ld.global.v2.u32 	{%r3, %r4}, [launchIndex];
	cvt.u64.u32	%rd3, %r3;
	cvt.u64.u32	%rd4, %r4;
	mov.u64 	%rd7, eyeHitBuffer;
	cvta.global.u64 	%rd2, %rd7;
	mov.u32 	%r1, 2;
	mov.u32 	%r2, 80;
	mov.u64 	%rd6, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r1, %r2, %rd3, %rd4, %rd6, %rd6);
	// inline asm
	mov.u32 	%r7, 1;
	st.u32 	[%rd1+76], %r7;
	mov.u32 	%r8, 0;
	st.u32 	[%rd1+56], %r8;
	st.u32 	[%rd1+52], %r8;
	st.u32 	[%rd1+48], %r8;
	mov.u32 	%r9, 1008981770;
	st.u32 	[%rd1+40], %r9;
	mov.u32 	%r10, 1000593162;
	st.u32 	[%rd1+36], %r10;
	st.u32 	[%rd1+32], %r10;
	ret;
}

	// .globl	_Z13eyePassAnyHitv
.visible .entry _Z13eyePassAnyHitv(

)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<22>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<4>;


	ldu.global.u32 	%r1, [backfaceCulling];
	setp.eq.s32	%p1, %r1, 0;
	@%p1 bra 	BB4_3;

	ld.global.f32 	%f9, [currentRay+20];
	ld.global.f32 	%f10, [currentRay+12];
	ld.global.f32 	%f11, [currentRay+16];
	ldu.global.f32 	%f5, [geometricNormal];
	mov.u64 	%rd1, geometricNormal;
	add.s64 	%rd2, %rd1, 4;
	ldu.global.f32 	%f6, [%rd2];
	add.s64 	%rd3, %rd1, 8;
	ldu.global.f32 	%f7, [%rd3];
	mov.u32 	%r2, 7937;
	mov.f32 	%f8, 0f00000000;
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_transform_tuple, (%r2, %f5, %f6, %f7, %f8);
	// inline asm
	mul.ftz.f32 	%f12, %f2, %f2;
	fma.rn.ftz.f32 	%f13, %f1, %f1, %f12;
	fma.rn.ftz.f32 	%f14, %f3, %f3, %f13;
	rsqrt.approx.ftz.f32 	%f15, %f14;
	mul.ftz.f32 	%f16, %f1, %f15;
	mul.ftz.f32 	%f17, %f2, %f15;
	mul.ftz.f32 	%f18, %f3, %f15;
	mul.ftz.f32 	%f19, %f11, %f17;
	fma.rn.ftz.f32 	%f20, %f10, %f16, %f19;
	fma.rn.ftz.f32 	%f21, %f9, %f18, %f20;
	setp.geu.ftz.f32	%p2, %f21, 0f00000000;
	@%p2 bra 	BB4_3;

	// inline asm
	call _rt_ignore_intersection, ();
	// inline asm

BB4_3:
	ret;
}

	// .globl	_Z17eyePassClosestHitv
.visible .entry _Z17eyePassClosestHitv(

)
{
	.local .align 8 .b8 	__local_depot5[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<6>;
	.reg .f32 	%f<163>;
	.reg .b32 	%r<31>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<39>;


	mov.u64 	%rd38, __local_depot5;
	cvta.local.u64 	%SP, %rd38;
	ldu.global.f32 	%f42, [hitT];
	ld.global.f32 	%f3, [currentRay+20];
	ld.global.f32 	%f2, [currentRay+16];
	mov.u64 	%rd6, currentRay;
	ld.global.f32 	%f1, [currentRay+12];
	ldu.global.f32 	%f43, [currentRay];
	fma.rn.ftz.f32 	%f4, %f1, %f42, %f43;
	add.s64 	%rd7, %rd6, 4;
	ldu.global.f32 	%f44, [%rd7];
	fma.rn.ftz.f32 	%f5, %f2, %f42, %f44;
	add.s64 	%rd8, %rd6, 8;
	ldu.global.f32 	%f45, [%rd8];
	fma.rn.ftz.f32 	%f6, %f3, %f42, %f45;
	ldu.global.f32 	%f30, [shadingNormal];
	mov.u64 	%rd9, shadingNormal;
	add.s64 	%rd10, %rd9, 4;
	ldu.global.f32 	%f31, [%rd10];
	add.s64 	%rd11, %rd9, 8;
	ldu.global.f32 	%f32, [%rd11];
	mov.u32 	%r5, 7937;
	mov.f32 	%f162, 0f00000000;
	// inline asm
	call (%f26, %f27, %f28, %f29), _rt_transform_tuple, (%r5, %f30, %f31, %f32, %f162);
	// inline asm
	mul.ftz.f32 	%f46, %f27, %f27;
	fma.rn.ftz.f32 	%f47, %f26, %f26, %f46;
	fma.rn.ftz.f32 	%f48, %f28, %f28, %f47;
	rsqrt.approx.ftz.f32 	%f49, %f48;
	mul.ftz.f32 	%f50, %f26, %f49;
	mul.ftz.f32 	%f51, %f27, %f49;
	mul.ftz.f32 	%f52, %f28, %f49;
	ld.global.f32 	%f38, [geometricNormal];
	ld.global.f32 	%f39, [geometricNormal+4];
	ld.global.f32 	%f40, [geometricNormal+8];
	// inline asm
	call (%f34, %f35, %f36, %f37), _rt_transform_tuple, (%r5, %f38, %f39, %f40, %f162);
	// inline asm
	mul.ftz.f32 	%f53, %f35, %f35;
	fma.rn.ftz.f32 	%f54, %f34, %f34, %f53;
	fma.rn.ftz.f32 	%f55, %f36, %f36, %f54;
	rsqrt.approx.ftz.f32 	%f56, %f55;
	mul.ftz.f32 	%f57, %f34, %f56;
	mul.ftz.f32 	%f58, %f35, %f56;
	mul.ftz.f32 	%f59, %f36, %f56;
	mul.ftz.f32 	%f60, %f1, %f57;
	mul.ftz.f32 	%f61, %f2, %f58;
	neg.ftz.f32 	%f62, %f61;
	sub.ftz.f32 	%f63, %f62, %f60;
	mul.ftz.f32 	%f64, %f3, %f59;
	sub.ftz.f32 	%f65, %f63, %f64;
	mov.b32 	 %r6, %f65;
	and.b32  	%r7, %r6, -2147483648;
	or.b32  	%r8, %r7, 1065353216;
	mov.b32 	 %f66, %r8;
	mul.ftz.f32 	%f7, %f50, %f66;
	mul.ftz.f32 	%f8, %f51, %f66;
	mul.ftz.f32 	%f9, %f52, %f66;
	ld.global.f32 	%f67, [Kd+4];
	ld.global.f32 	%f68, [Kd];
	max.ftz.f32 	%f69, %f68, %f67;
	ld.global.f32 	%f70, [Kd+8];
	max.ftz.f32 	%f71, %f69, %f70;
	setp.gt.ftz.f32	%p1, %f71, 0f00000000;
	@%p1 bra 	BB5_3;
	bra.uni 	BB5_1;

BB5_3:
	mov.u64 	%rd19, dirLightBuffer;
	cvta.global.u64 	%rd18, %rd19;
	mov.u32 	%r14, 1;
	mov.u32 	%r15, 28;
	// inline asm
	call (%rd14, %rd15, %rd16, %rd17), _rt_buffer_get_size_64, (%rd18, %r14, %r15);
	// inline asm
	cvt.u32.u64	%r30, %rd14;
	setp.eq.s32	%p3, %r30, 0;
	mov.f32 	%f161, %f162;
	mov.f32 	%f160, %f162;
	@%p3 bra 	BB5_8;

	cvt.s64.s32 	%rd20, %rd14;
	add.s64 	%rd37, %rd20, -1;
	mov.f32 	%f162, 0f00000000;
	mov.f32 	%f161, %f162;
	mov.f32 	%f160, %f162;

BB5_5:
	mov.u32 	%r2, %r30;
	add.s32 	%r30, %r2, -1;
	mov.u64 	%rd26, 0;
	// inline asm
	call (%rd21), _rt_buffer_get_64, (%rd18, %r14, %r15, %rd37, %rd26, %rd26, %rd26);
	// inline asm
	ld.f32 	%f94, [%rd21];
	mul.ftz.f32 	%f95, %f7, %f94;
	ld.f32 	%f96, [%rd21+4];
	mul.ftz.f32 	%f97, %f8, %f96;
	neg.ftz.f32 	%f98, %f97;
	sub.ftz.f32 	%f99, %f98, %f95;
	ld.f32 	%f100, [%rd21+8];
	mul.ftz.f32 	%f101, %f9, %f100;
	sub.ftz.f32 	%f16, %f99, %f101;
	setp.leu.ftz.f32	%p4, %f16, 0f00000000;
	@%p4 bra 	BB5_7;

	add.u64 	%rd28, %SP, 0;
	cvta.to.local.u64 	%rd29, %rd28;
	mov.f32 	%f110, 0f3F800000;
	st.local.v2.f32 	[%rd29], {%f110, %f110};
	mov.u32 	%r21, 1065353216;
	add.s32 	%r29, %r2, -1;
	st.local.v2.u32 	[%rd29+8], {%r21, %r29};
	ld.f32 	%f111, [%rd21];
	neg.ftz.f32 	%f105, %f111;
	ld.f32 	%f112, [%rd21+4];
	neg.ftz.f32 	%f106, %f112;
	ld.f32 	%f113, [%rd21+8];
	neg.ftz.f32 	%f107, %f113;
	ld.global.u32 	%r19, [quickShadowRayType];
	ld.global.f32 	%f108, [sceneEpsilon];
	ld.global.u32 	%r18, [topShadower];
	mov.f32 	%f109, 0f6C4ECB8F;
	mov.u32 	%r20, 16;
	// inline asm
	call _rt_trace_64, (%r18, %f4, %f5, %f6, %f105, %f106, %f107, %r19, %f108, %f109, %rd28, %r20);
	// inline asm
	ld.global.f32 	%f114, [Kd];
	mul.ftz.f32 	%f115, %f16, %f114;
	ld.global.f32 	%f116, [Kd+4];
	mul.ftz.f32 	%f117, %f16, %f116;
	ld.global.f32 	%f118, [Kd+8];
	mul.ftz.f32 	%f119, %f16, %f118;
	ld.f32 	%f120, [%rd21+12];
	mul.ftz.f32 	%f121, %f115, %f120;
	ld.f32 	%f122, [%rd21+16];
	mul.ftz.f32 	%f123, %f117, %f122;
	ld.f32 	%f124, [%rd21+20];
	mul.ftz.f32 	%f125, %f119, %f124;
	ld.local.v2.f32 	{%f126, %f127}, [%rd29];
	ld.local.f32 	%f130, [%rd29+8];
	fma.rn.ftz.f32 	%f162, %f121, %f126, %f162;
	fma.rn.ftz.f32 	%f161, %f123, %f127, %f161;
	fma.rn.ftz.f32 	%f160, %f125, %f130, %f160;

BB5_7:
	add.s64 	%rd37, %rd37, -1;
	setp.ne.s32	%p5, %r30, 0;
	@%p5 bra 	BB5_5;

BB5_8:
	ld.global.v2.f32 	{%f131, %f132}, [eye];
	sub.ftz.f32 	%f134, %f4, %f131;
	sub.ftz.f32 	%f136, %f5, %f132;
	ld.global.f32 	%f137, [eye+8];
	sub.ftz.f32 	%f138, %f6, %f137;
	mul.ftz.f32 	%f139, %f136, %f136;
	fma.rn.ftz.f32 	%f140, %f134, %f134, %f139;
	fma.rn.ftz.f32 	%f141, %f138, %f138, %f140;
	sqrt.approx.ftz.f32 	%f142, %f141;
	ld.global.f32 	%f143, [eyePayload];
	ld.global.f32 	%f144, [Kd];
	mul.ftz.f32 	%f145, %f144, %f143;
	ld.global.f32 	%f146, [eyePayload+4];
	ld.global.f32 	%f147, [Kd+4];
	mul.ftz.f32 	%f148, %f147, %f146;
	ld.global.f32 	%f149, [eyePayload+8];
	ld.global.f32 	%f150, [Kd+8];
	mul.ftz.f32 	%f151, %f150, %f149;
	mov.f32 	%f152, 0f40000000;
	lg2.approx.ftz.f32 	%f153, %f152;
	mul.ftz.f32 	%f154, %f153, 0f41500000;
	ex2.approx.ftz.f32 	%f155, %f154;
	cvt.ftz.f64.f32	%fd1, %f142;
	mul.f64 	%fd2, %fd1, 0d3F21DF46A49822CB;
	cvt.rn.ftz.f32.f64	%f156, %fd2;
	lg2.approx.ftz.f32 	%f157, %f156;
	add.ftz.f32 	%f158, %f157, %f157;
	ex2.approx.ftz.f32 	%f159, %f158;
	ld.global.v2.u32 	{%r24, %r25}, [launchIndex];
	cvt.u64.u32	%rd32, %r24;
	cvt.u64.u32	%rd33, %r25;
	mov.u64 	%rd36, eyeHitBuffer;
	cvta.global.u64 	%rd31, %rd36;
	mov.u32 	%r22, 2;
	mov.u32 	%r23, 80;
	mov.u64 	%rd35, 0;
	// inline asm
	call (%rd30), _rt_buffer_get_64, (%rd31, %r22, %r23, %rd32, %rd33, %rd35, %rd35);
	// inline asm
	st.u32 	[%rd30+76], %r22;
	st.f32 	[%rd30+72], %f160;
	st.f32 	[%rd30+68], %f161;
	st.f32 	[%rd30+64], %f162;
	mov.u32 	%r28, 0;
	st.u32 	[%rd30+56], %r28;
	st.u32 	[%rd30+52], %r28;
	st.u32 	[%rd30+48], %r28;
	st.f32 	[%rd30+40], %f151;
	st.f32 	[%rd30+36], %f148;
	st.f32 	[%rd30+32], %f145;
	st.u32 	[%rd30+28], %r28;
	st.f32 	[%rd30+24], %f9;
	st.f32 	[%rd30+20], %f8;
	st.f32 	[%rd30+16], %f7;
	st.f32 	[%rd30+12], %f155;
	st.f32 	[%rd30+8], %f6;
	st.f32 	[%rd30+4], %f5;
	st.f32 	[%rd30], %f4;
	st.f32 	[%rd30+44], %f159;
	st.global.f32 	[eyePayload+12], %f162;
	st.global.f32 	[eyePayload+16], %f161;
	st.global.f32 	[eyePayload+20], %f160;
	bra.uni 	BB5_9;

BB5_1:
	ld.global.f32 	%f10, [Ts];
	ld.global.f32 	%f11, [Ts+4];
	max.ftz.f32 	%f72, %f10, %f11;
	ld.global.f32 	%f12, [Ts+8];
	max.ftz.f32 	%f73, %f72, %f12;
	setp.leu.ftz.f32	%p2, %f73, 0f00000000;
	@%p2 bra 	BB5_9;

	mov.u64 	%rd13, eyePayload;
	ld.global.f32 	%f82, [eyePayload];
	mul.ftz.f32 	%f83, %f10, %f82;
	ld.global.f32 	%f84, [eyePayload+4];
	ld.global.f32 	%f85, [eyePayload+8];
	ld.global.u32 	%r12, [eyePayload+24];
	st.global.f32 	[eyePayload], %f83;
	mul.ftz.f32 	%f86, %f11, %f84;
	st.global.f32 	[eyePayload+4], %f86;
	mul.ftz.f32 	%f87, %f12, %f85;
	st.global.f32 	[eyePayload+8], %f87;
	add.s32 	%r13, %r12, 1;
	st.global.u32 	[eyePayload+24], %r13;
	ld.global.u32 	%r10, [quickRayType];
	ld.global.f32 	%f80, [sceneEpsilon];
	ld.global.f32 	%f81, [sceneMaxDim];
	ld.global.u32 	%r9, [topObject];
	cvta.global.u64 	%rd12, %rd13;
	mov.u32 	%r11, 32;
	// inline asm
	call _rt_trace_64, (%r9, %f4, %f5, %f6, %f1, %f2, %f3, %r10, %f80, %f81, %rd12, %r11);
	// inline asm

BB5_9:
	ret;
}


